{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/local-pkg@0.4.2/node_modules/local-pkg/dist/shared.cjs", "../../../../node_modules/.pnpm/local-pkg@0.4.2/node_modules/local-pkg/index.cjs", "../../../../node_modules/.pnpm/@unocss+preset-icons@0.29.6/node_modules/@unocss/preset-icons/dist/fs.cjs", "../../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/base64.js", "../../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/base64-vlq.js", "../../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/util.js", "../../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/array-set.js", "../../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/mapping-list.js", "../../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-map-generator.js", "../../../../node_modules/.pnpm/@unocss+core@0.29.6/node_modules/@unocss/core/dist/index.mjs", "../../../../node_modules/.pnpm/@unocss+preset-mini@0.29.6/node_modules/@unocss/preset-mini/dist/chunks/colors.mjs", "../../../../node_modules/.pnpm/@unocss+preset-mini@0.29.6/node_modules/@unocss/preset-mini/dist/chunks/default.mjs", "../../../../node_modules/.pnpm/@unocss+preset-mini@0.29.6/node_modules/@unocss/preset-mini/dist/chunks/utilities.mjs", "../../../../node_modules/.pnpm/@unocss+preset-mini@0.29.6/node_modules/@unocss/preset-mini/dist/chunks/default2.mjs", "../../../../node_modules/.pnpm/@unocss+preset-mini@0.29.6/node_modules/@unocss/preset-mini/dist/chunks/variants.mjs", "../../../../node_modules/.pnpm/@unocss+preset-mini@0.29.6/node_modules/@unocss/preset-mini/dist/chunks/default3.mjs", "../../../../node_modules/.pnpm/@unocss+preset-mini@0.29.6/node_modules/@unocss/preset-mini/dist/index.mjs", "../../../../node_modules/.pnpm/@unocss+preset-wind@0.29.6/node_modules/@unocss/preset-wind/dist/index.mjs", "../../../../node_modules/.pnpm/@unocss+preset-uno@0.29.6/node_modules/@unocss/preset-uno/dist/index.mjs", "../../../../node_modules/.pnpm/@unocss+preset-attributify@0.29.6/node_modules/@unocss/preset-attributify/dist/index.mjs", "../../../../node_modules/.pnpm/@iconify+utils@1.0.33/node_modules/@iconify/utils/lib/svg/size.mjs", "../../../../node_modules/.pnpm/@iconify+utils@1.0.33/node_modules/@iconify/utils/lib/svg/build.mjs", "../../../../node_modules/.pnpm/@iconify+utils@1.0.33/node_modules/@iconify/utils/lib/customisations/index.mjs", "../../../../node_modules/.pnpm/@iconify+utils@1.0.33/node_modules/@iconify/utils/lib/icon/index.mjs", "../../../../node_modules/.pnpm/@iconify+utils@1.0.33/node_modules/@iconify/utils/lib/icon/merge.mjs", "../../../../node_modules/.pnpm/@iconify+utils@1.0.33/node_modules/@iconify/utils/lib/icon-set/get-icon.mjs", "../../../../node_modules/.pnpm/@unocss+preset-icons@0.29.6/node_modules/@unocss/preset-icons/dist/index.mjs", "../../../../node_modules/.pnpm/@unocss+preset-web-fonts@0.29.6/node_modules/@unocss/preset-web-fonts/dist/index.mjs", "../../../../node_modules/.pnpm/@unocss+preset-typography@0.29.6/node_modules/@unocss/preset-typography/dist/index.mjs", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/types.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/char-code-definitions.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/utils.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/names.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/adopt-buffer.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/OffsetToLocation.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/TokenStream.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/index.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/List.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/create-custom-error.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/parser/SyntaxError.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/parser/sequence.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/parser/create.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/generator/sourceMap.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/generator/token-before.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/generator/create.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/convertor/create.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/walker/create.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/generate.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/error.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/names.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic-const.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic-an-plus-b.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic-urange.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/units.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/index.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/SyntaxError.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/tokenizer.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/parse.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/walk.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/prepare-tokens.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/match-graph.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/match.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/trace.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/search.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/structure.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/Lexer.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/mix.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/create.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/dist/data.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/index.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/AnPlusB.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Atrule.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/AtrulePrelude.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/AttributeSelector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Block.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Brackets.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/CDC.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/CDO.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/ClassSelector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Combinator.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Comment.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Declaration.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/DeclarationList.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Dimension.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Function.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Hash.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Identifier.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/IdSelector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/MediaFeature.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/MediaQuery.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/MediaQueryList.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/NestingSelector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Nth.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Number.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Operator.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Parentheses.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Percentage.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/PseudoClassSelector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/PseudoElementSelector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Ratio.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Raw.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Rule.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Selector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/SelectorList.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/String.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/string.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/StyleSheet.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/TypeSelector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/UnicodeRange.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Url.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/url.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Value.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/WhiteSpace.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/lexer.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/index.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/default.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/atrulePrelude.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/selector.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/function/expression.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/function/var.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/value.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/font-face.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/import.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/media.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/nest.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/page.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/supports.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/index.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/pseudo/index.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/index-parse.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/parser.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/walker.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/index.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/clone.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/ident.js", "../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/index.js", "../../../../node_modules/.pnpm/@unocss+transformer-directives@0.29.6/node_modules/@unocss/transformer-directives/dist/index.mjs", "../../../../node_modules/.pnpm/@unocss+transformer-variant-group@0.29.6/node_modules/@unocss/transformer-variant-group/dist/index.mjs", "../../../../node_modules/.pnpm/unocss@0.29.6/node_modules/unocss/dist/index.mjs"],
  "sourcesContent": ["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateWrapper = (obj, member, setter, getter) => {\n  return {\n    set _(value) {\n      __privateSet(obj, member, value, setter);\n    },\n    get _() {\n      return __privateGet(obj, member, getter);\n    }\n  };\n};\n\n// shared.ts\nvar shared_exports = {};\n__export(shared_exports, {\n  isPackageListed: () => isPackageListed,\n  loadPackageJSON: () => loadPackageJSON\n});\nmodule.exports = __toCommonJS(shared_exports);\nvar import_fs = require(\"fs\");\n\n// node_modules/.pnpm/find-up@6.3.0/node_modules/find-up/index.js\nvar import_node_path2 = __toESM(require(\"path\"), 1);\nvar import_node_url2 = require(\"url\");\n\n// node_modules/.pnpm/locate-path@7.1.1/node_modules/locate-path/index.js\nvar import_node_process = __toESM(require(\"process\"), 1);\nvar import_node_path = __toESM(require(\"path\"), 1);\nvar import_node_fs = __toESM(require(\"fs\"), 1);\nvar import_node_url = require(\"url\");\n\n// node_modules/.pnpm/yocto-queue@1.0.0/node_modules/yocto-queue/index.js\nvar Node = class {\n  value;\n  next;\n  constructor(value) {\n    this.value = value;\n  }\n};\nvar _head, _tail, _size;\nvar Queue = class {\n  constructor() {\n    __privateAdd(this, _head, void 0);\n    __privateAdd(this, _tail, void 0);\n    __privateAdd(this, _size, void 0);\n    this.clear();\n  }\n  enqueue(value) {\n    const node = new Node(value);\n    if (__privateGet(this, _head)) {\n      __privateGet(this, _tail).next = node;\n      __privateSet(this, _tail, node);\n    } else {\n      __privateSet(this, _head, node);\n      __privateSet(this, _tail, node);\n    }\n    __privateWrapper(this, _size)._++;\n  }\n  dequeue() {\n    const current = __privateGet(this, _head);\n    if (!current) {\n      return;\n    }\n    __privateSet(this, _head, __privateGet(this, _head).next);\n    __privateWrapper(this, _size)._--;\n    return current.value;\n  }\n  clear() {\n    __privateSet(this, _head, void 0);\n    __privateSet(this, _tail, void 0);\n    __privateSet(this, _size, 0);\n  }\n  get size() {\n    return __privateGet(this, _size);\n  }\n  *[Symbol.iterator]() {\n    let current = __privateGet(this, _head);\n    while (current) {\n      yield current.value;\n      current = current.next;\n    }\n  }\n};\n_head = new WeakMap();\n_tail = new WeakMap();\n_size = new WeakMap();\n\n// node_modules/.pnpm/p-limit@4.0.0/node_modules/p-limit/index.js\nfunction pLimit(concurrency) {\n  if (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n    throw new TypeError(\"Expected `concurrency` to be a number from 1 and up\");\n  }\n  const queue = new Queue();\n  let activeCount = 0;\n  const next = () => {\n    activeCount--;\n    if (queue.size > 0) {\n      queue.dequeue()();\n    }\n  };\n  const run = async (fn, resolve, args) => {\n    activeCount++;\n    const result = (async () => fn(...args))();\n    resolve(result);\n    try {\n      await result;\n    } catch {\n    }\n    next();\n  };\n  const enqueue = (fn, resolve, args) => {\n    queue.enqueue(run.bind(void 0, fn, resolve, args));\n    (async () => {\n      await Promise.resolve();\n      if (activeCount < concurrency && queue.size > 0) {\n        queue.dequeue()();\n      }\n    })();\n  };\n  const generator = (fn, ...args) => new Promise((resolve) => {\n    enqueue(fn, resolve, args);\n  });\n  Object.defineProperties(generator, {\n    activeCount: {\n      get: () => activeCount\n    },\n    pendingCount: {\n      get: () => queue.size\n    },\n    clearQueue: {\n      value: () => {\n        queue.clear();\n      }\n    }\n  });\n  return generator;\n}\n\n// node_modules/.pnpm/p-locate@6.0.0/node_modules/p-locate/index.js\nvar EndError = class extends Error {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n};\nvar testElement = async (element, tester) => tester(await element);\nvar finder = async (element) => {\n  const values = await Promise.all(element);\n  if (values[1] === true) {\n    throw new EndError(values[0]);\n  }\n  return false;\n};\nasync function pLocate(iterable, tester, {\n  concurrency = Number.POSITIVE_INFINITY,\n  preserveOrder = true\n} = {}) {\n  const limit = pLimit(concurrency);\n  const items = [...iterable].map((element) => [element, limit(testElement, element, tester)]);\n  const checkLimit = pLimit(preserveOrder ? 1 : Number.POSITIVE_INFINITY);\n  try {\n    await Promise.all(items.map((element) => checkLimit(finder, element)));\n  } catch (error) {\n    if (error instanceof EndError) {\n      return error.value;\n    }\n    throw error;\n  }\n}\n\n// node_modules/.pnpm/locate-path@7.1.1/node_modules/locate-path/index.js\nvar typeMappings = {\n  directory: \"isDirectory\",\n  file: \"isFile\"\n};\nfunction checkType(type) {\n  if (Object.hasOwnProperty.call(typeMappings, type)) {\n    return;\n  }\n  throw new Error(`Invalid type specified: ${type}`);\n}\nvar matchType = (type, stat) => stat[typeMappings[type]]();\nvar toPath = (urlOrPath) => urlOrPath instanceof URL ? (0, import_node_url.fileURLToPath)(urlOrPath) : urlOrPath;\nasync function locatePath(paths, {\n  cwd = import_node_process.default.cwd(),\n  type = \"file\",\n  allowSymlinks = true,\n  concurrency,\n  preserveOrder\n} = {}) {\n  checkType(type);\n  cwd = toPath(cwd);\n  const statFunction = allowSymlinks ? import_node_fs.promises.stat : import_node_fs.promises.lstat;\n  return pLocate(paths, async (path_) => {\n    try {\n      const stat = await statFunction(import_node_path.default.resolve(cwd, path_));\n      return matchType(type, stat);\n    } catch {\n      return false;\n    }\n  }, { concurrency, preserveOrder });\n}\n\n// node_modules/.pnpm/path-exists@5.0.0/node_modules/path-exists/index.js\nvar import_node_fs2 = __toESM(require(\"fs\"), 1);\n\n// node_modules/.pnpm/find-up@6.3.0/node_modules/find-up/index.js\nvar toPath2 = (urlOrPath) => urlOrPath instanceof URL ? (0, import_node_url2.fileURLToPath)(urlOrPath) : urlOrPath;\nvar findUpStop = Symbol(\"findUpStop\");\nasync function findUpMultiple(name, options = {}) {\n  let directory = import_node_path2.default.resolve(toPath2(options.cwd) || \"\");\n  const { root } = import_node_path2.default.parse(directory);\n  const stopAt = import_node_path2.default.resolve(directory, options.stopAt || root);\n  const limit = options.limit || Number.POSITIVE_INFINITY;\n  const paths = [name].flat();\n  const runMatcher = async (locateOptions) => {\n    if (typeof name !== \"function\") {\n      return locatePath(paths, locateOptions);\n    }\n    const foundPath = await name(locateOptions.cwd);\n    if (typeof foundPath === \"string\") {\n      return locatePath([foundPath], locateOptions);\n    }\n    return foundPath;\n  };\n  const matches = [];\n  while (true) {\n    const foundPath = await runMatcher({ ...options, cwd: directory });\n    if (foundPath === findUpStop) {\n      break;\n    }\n    if (foundPath) {\n      matches.push(import_node_path2.default.resolve(directory, foundPath));\n    }\n    if (directory === stopAt || matches.length >= limit) {\n      break;\n    }\n    directory = import_node_path2.default.dirname(directory);\n  }\n  return matches;\n}\nasync function findUp(name, options = {}) {\n  const matches = await findUpMultiple(name, { ...options, limit: 1 });\n  return matches[0];\n}\n\n// shared.ts\nasync function loadPackageJSON(cwd = process.cwd()) {\n  const path3 = await findUp(\"package.json\", { cwd });\n  if (!path3 || !(0, import_fs.existsSync)(path3))\n    return null;\n  return JSON.parse(await import_fs.promises.readFile(path3, \"utf-8\"));\n}\nasync function isPackageListed(name, cwd) {\n  const pkg = await loadPackageJSON(cwd) || {};\n  return name in (pkg.dependencies || {}) || name in (pkg.devDependencies || {});\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  isPackageListed,\n  loadPackageJSON\n});\n", "const { dirname, join } = require('path')\nconst { existsSync, readFileSync } = require('fs')\nconst fs = require('fs').promises\nconst { loadPackageJSON, isPackageListed } = require('./dist/shared.cjs')\n\nfunction resolveModule(name, options) {\n  try {\n    return require.resolve(name, options)\n  }\n  catch (e) {\n    return undefined\n  }\n}\n\nfunction importModule(path) {\n  const mod = require(path)\n  if (mod.__esModule)\n    return Promise.resolve(mod)\n  else\n    return Promise.resolve({ default: mod })\n}\n\nfunction isPackageExists(name, options) {\n  return !!resolvePackage(name, options)\n}\n\nfunction getPackageJsonPath(name, options) {\n  const entry = resolvePackage(name, options)\n  if (!entry)\n    return\n  return searchPackageJSON(entry)\n}\n\nasync function getPackageInfo(name, options) {\n  const packageJsonPath = getPackageJsonPath(name, options)\n  if (!packageJsonPath)\n    return\n\n  const pkg = JSON.parse(await fs.readFile(packageJsonPath, 'utf8'))\n\n  return {\n    name,\n    version: pkg.version,\n    rootPath: dirname(packageJsonPath),\n    packageJsonPath,\n    packageJson: pkg,\n  }\n}\n\nfunction getPackageInfoSync(name, options) {\n  const packageJsonPath = getPackageJsonPath(name, options)\n  if (!packageJsonPath)\n    return\n\n  const pkg = JSON.parse(readFileSync(packageJsonPath, 'utf8'))\n\n  return {\n    name,\n    version: pkg.version,\n    rootPath: dirname(packageJsonPath),\n    packageJsonPath,\n    packageJson: pkg,\n  }\n}\n\nfunction resolvePackage(name, options = {}) {\n  try {\n    return require.resolve(`${name}/package.json`, options)\n  }\n  catch {\n  }\n  try {\n    return require.resolve(name, options)\n  }\n  catch (e) {\n    if (e.code !== 'MODULE_NOT_FOUND')\n      throw e\n    return false\n  }\n}\n\nfunction searchPackageJSON(dir) {\n  let packageJsonPath\n  while (true) {\n    if (!dir)\n      return\n    const newDir = dirname(dir)\n    if (newDir === dir)\n      return\n    dir = newDir\n    packageJsonPath = join(dir, 'package.json')\n    if (existsSync(packageJsonPath))\n      break\n  }\n\n  return packageJsonPath\n}\n\nmodule.exports = {\n  resolveModule,\n  importModule,\n  isPackageExists,\n  getPackageInfo,\n  getPackageInfoSync,\n  loadPackageJSON,\n  isPackageListed,\n}\n\nObject.defineProperty(module.exports, '__esModule', { value: true, enumerable: false })\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst fs = require('fs');\nconst localPkg = require('local-pkg');\n\nconst _collections = {};\nconst isLegacyExists = localPkg.isPackageExists(\"@iconify/json\");\nasync function loadCollectionFromFS(name) {\n  if (!_collections[name])\n    _collections[name] = task();\n  return _collections[name];\n  async function task() {\n    let jsonPath = localPkg.resolveModule(`@iconify-json/${name}/icons.json`);\n    if (!jsonPath && isLegacyExists)\n      jsonPath = localPkg.resolveModule(`@iconify/json/json/${name}.json`);\n    if (jsonPath) {\n      const icons = JSON.parse(await fs.promises.readFile(jsonPath, \"utf8\"));\n      return icons;\n    } else {\n      return void 0;\n    }\n  }\n}\n\nexports.loadCollectionFromFS = loadCollectionFromFS;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "function escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nfunction escapeSelector(str) {\n  const length = str.length;\n  let index = -1;\n  let codeUnit;\n  let result = \"\";\n  const firstCodeUnit = str.charCodeAt(0);\n  while (++index < length) {\n    codeUnit = str.charCodeAt(index);\n    if (codeUnit === 0) {\n      result += \"\\uFFFD\";\n      continue;\n    }\n    if (codeUnit === 44) {\n      result += \"\\\\2c \";\n      continue;\n    }\n    if (codeUnit >= 1 && codeUnit <= 31 || codeUnit === 127 || index === 0 && codeUnit >= 48 && codeUnit <= 57 || index === 1 && codeUnit >= 48 && codeUnit <= 57 && firstCodeUnit === 45) {\n      result += `\\\\${codeUnit.toString(16)} `;\n      continue;\n    }\n    if (index === 0 && length === 1 && codeUnit === 45) {\n      result += `\\\\${str.charAt(index)}`;\n      continue;\n    }\n    if (codeUnit >= 128 || codeUnit === 45 || codeUnit === 95 || codeUnit >= 48 && codeUnit <= 57 || codeUnit >= 65 && codeUnit <= 90 || codeUnit >= 97 && codeUnit <= 122) {\n      result += str.charAt(index);\n      continue;\n    }\n    result += `\\\\${str.charAt(index)}`;\n  }\n  return result;\n}\nconst e = escapeSelector;\n\nfunction normalizeCSSEntries(obj) {\n  return (!Array.isArray(obj) ? Object.entries(obj) : obj).filter((i) => i[1] != null);\n}\nfunction normalizeCSSValues(obj) {\n  if (Array.isArray(obj)) {\n    if (obj.find((i) => !Array.isArray(i) || Array.isArray(i[0])))\n      return obj.map((i) => normalizeCSSEntries(i));\n    else\n      return [obj];\n  } else {\n    return [normalizeCSSEntries(obj)];\n  }\n}\nfunction clearIdenticalEntries(entry) {\n  return entry.filter(([k, v], idx) => {\n    if (k.startsWith(\"$$\"))\n      return false;\n    for (let i = idx - 1; i >= 0; i--) {\n      if (entry[i][0] === k && entry[i][1] === v)\n        return false;\n    }\n    return true;\n  });\n}\nfunction entriesToCss(arr) {\n  if (arr == null)\n    return \"\";\n  return clearIdenticalEntries(arr).map(([key, value]) => value != null ? `${key}:${value};` : void 0).filter(Boolean).join(\"\");\n}\nfunction isObject(item) {\n  return item && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction mergeDeep(original, patch) {\n  const o = original;\n  const p = patch;\n  if (Array.isArray(o) && Array.isArray(p))\n    return [...o, ...p];\n  if (Array.isArray(o))\n    return [...o];\n  const output = { ...o };\n  if (isObject(o) && isObject(p)) {\n    Object.keys(p).forEach((key) => {\n      if (isObject(p[key])) {\n        if (!(key in o))\n          Object.assign(output, { [key]: p[key] });\n        else\n          output[key] = mergeDeep(o[key], p[key]);\n      } else {\n        Object.assign(output, { [key]: p[key] });\n      }\n    });\n  }\n  return output;\n}\nfunction clone(val) {\n  let k, out, tmp;\n  if (Array.isArray(val)) {\n    out = Array(k = val.length);\n    while (k--)\n      out[k] = (tmp = val[k]) && typeof tmp === \"object\" ? clone(tmp) : tmp;\n    return out;\n  }\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    out = {};\n    for (k in val) {\n      if (k === \"__proto__\") {\n        Object.defineProperty(out, k, {\n          value: clone(val[k]),\n          configurable: true,\n          enumerable: true,\n          writable: true\n        });\n      } else {\n        out[k] = (tmp = val[k]) && typeof tmp === \"object\" ? clone(tmp) : tmp;\n      }\n    }\n    return out;\n  }\n  return val;\n}\nfunction isStaticRule(rule) {\n  return typeof rule[0] === \"string\";\n}\nfunction isStaticShortcut(sc) {\n  return typeof sc[0] === \"string\";\n}\n\nfunction toArray(value = []) {\n  return Array.isArray(value) ? value : [value];\n}\nfunction uniq(value) {\n  return Array.from(new Set(value));\n}\nfunction mergeSet(target, append) {\n  append.forEach((i) => target.add(i));\n  return target;\n}\n\nconst attributifyRE = /^\\[(.+?)~?=\"(.*)\"\\]$/;\nconst validateFilterRE = /(?!\\d|-{2}|-\\d)[a-zA-Z0-9\\u00A0-\\uFFFF-_:%-?]/;\nconst CONTROL_SHORTCUT_NO_MERGE = \"$$shortcut-no-merge\";\nfunction isAttributifySelector(selector) {\n  return selector.match(attributifyRE);\n}\nfunction isValidSelector(selector = \"\") {\n  return validateFilterRE.test(selector);\n}\nfunction normalizeVariant(variant) {\n  return typeof variant === \"function\" ? { match: variant } : variant;\n}\nfunction isRawUtil(util) {\n  return util.length === 3;\n}\nfunction notNull(value) {\n  return value != null;\n}\n\nclass TwoKeyMap {\n  constructor() {\n    this._map = /* @__PURE__ */ new Map();\n  }\n  get(key1, key2) {\n    const m2 = this._map.get(key1);\n    if (m2)\n      return m2.get(key2);\n  }\n  getFallback(key1, key2, fallback) {\n    let m2 = this._map.get(key1);\n    if (!m2) {\n      m2 = /* @__PURE__ */ new Map();\n      this._map.set(key1, m2);\n    }\n    if (!m2.has(key2))\n      m2.set(key2, fallback);\n    return m2.get(key2);\n  }\n  set(key1, key2, value) {\n    let m2 = this._map.get(key1);\n    if (!m2) {\n      m2 = /* @__PURE__ */ new Map();\n      this._map.set(key1, m2);\n    }\n    m2.set(key2, value);\n    return this;\n  }\n  has(key1, key2) {\n    return this._map.get(key1)?.has(key2);\n  }\n  delete(key1, key2) {\n    return this._map.get(key1)?.delete(key2) || false;\n  }\n  deleteTop(key1) {\n    return this._map.delete(key1);\n  }\n  map(fn) {\n    return Array.from(this._map.entries()).flatMap(([k1, m2]) => Array.from(m2.entries()).map(([k2, v]) => {\n      return fn(v, k1, k2);\n    }));\n  }\n}\nclass BetterMap extends Map {\n  map(mapFn) {\n    const result = [];\n    this.forEach((v, k) => {\n      result.push(mapFn(v, k));\n    });\n    return result;\n  }\n}\n\nfunction withLayer(layer, rules) {\n  rules.forEach((r) => {\n    if (!r[2])\n      r[2] = { layer };\n    else\n      r[2].layer = layer;\n  });\n  return rules;\n}\n\nconst regexClassGroup = /([!\\w+:_/-]+?)([:-])\\(((?:[!\\w\\s:/\\\\,%#.$-]|\\[.*?\\])*?)\\)/gm;\nfunction expandVariantGroup(str) {\n  regexClassGroup.lastIndex = 0;\n  return str.replace(regexClassGroup, (_, pre, sep, body) => {\n    return body.split(/\\s/g).map((i) => i.replace(/^(!?)(.*)/, `$1${pre}${sep}$2`)).join(\" \");\n  });\n}\n\nconst warned = /* @__PURE__ */ new Set();\nfunction warnOnce(msg) {\n  if (warned.has(msg))\n    return;\n  console.warn(\"[unocss]\", msg);\n  warned.add(msg);\n}\n\nfunction createValueHandler(handlers) {\n  const handler = function(str) {\n    const s = this.__options?.sequence || [];\n    this.__options.sequence = [];\n    for (const n of s) {\n      const res = handlers[n](str);\n      if (res != null)\n        return res;\n    }\n  };\n  function addProcessor(that, name) {\n    if (!that.__options) {\n      that.__options = {\n        sequence: []\n      };\n    }\n    that.__options.sequence.push(name);\n    return that;\n  }\n  for (const name of Object.keys(handlers)) {\n    Object.defineProperty(handler, name, {\n      enumerable: true,\n      get() {\n        return addProcessor(this, name);\n      }\n    });\n  }\n  return handler;\n}\n\nconst splitCode = (code) => code.split(/[\\s'\"`;>=]+/g).filter(isValidSelector);\nconst extractorSplit = {\n  name: \"split\",\n  order: 0,\n  extract({ code }) {\n    return new Set(splitCode(code));\n  }\n};\n\nconst extractorSvelte = {\n  name: \"svelte\",\n  order: 0,\n  extract({ code, id }) {\n    let result = splitCode(code);\n    if (id && id.endsWith(\".svelte\")) {\n      result = result.map((r) => {\n        return r.startsWith(\"class:\") ? r.slice(6) : r;\n      });\n    }\n    return new Set(result);\n  }\n};\n\nfunction resolveShortcuts(shortcuts) {\n  return toArray(shortcuts).flatMap((s) => {\n    if (Array.isArray(s))\n      return [s];\n    return Object.entries(s);\n  });\n}\nconst defaultLayers = {\n  shortcuts: -1,\n  default: 0\n};\nfunction resolveConfig(userConfig = {}, defaults = {}) {\n  const config = Object.assign({}, defaults, userConfig);\n  const rawPresets = (config.presets || []).flatMap(toArray);\n  const sortedPresets = [\n    ...rawPresets.filter((p) => p.enforce === \"pre\"),\n    ...rawPresets.filter((p) => !p.enforce),\n    ...rawPresets.filter((p) => p.enforce === \"post\")\n  ];\n  const layers = Object.assign(defaultLayers, ...rawPresets.map((i) => i.layers), userConfig.layers);\n  function mergePresets(key) {\n    return uniq([\n      ...sortedPresets.flatMap((p) => toArray(p[key] || [])),\n      ...toArray(config[key] || [])\n    ]);\n  }\n  const extractors = mergePresets(\"extractors\");\n  if (!extractors.length)\n    extractors.push(extractorSplit);\n  extractors.sort((a, b) => (a.order || 0) - (b.order || 0));\n  const rules = mergePresets(\"rules\");\n  const rulesStaticMap = {};\n  const rulesSize = rules.length;\n  rules.forEach((rule, i) => {\n    if (isStaticRule(rule)) {\n      rulesStaticMap[rule[0]] = [i, rule[1], rule[2]];\n      delete rules[i];\n    }\n  });\n  const theme = clone([\n    ...sortedPresets.map((p) => p.theme || {}),\n    config.theme || {}\n  ].reduce((a, p) => mergeDeep(a, p), {}));\n  mergePresets(\"extendTheme\").forEach((extendTheme) => extendTheme(theme));\n  return {\n    mergeSelectors: true,\n    warn: true,\n    blocklist: [],\n    safelist: [],\n    sortLayers: (layers2) => layers2,\n    ...config,\n    presets: sortedPresets,\n    envMode: config.envMode || \"build\",\n    shortcutsLayer: config.shortcutsLayer || \"shortcuts\",\n    layers,\n    theme,\n    rulesSize,\n    rulesDynamic: rules,\n    rulesStaticMap,\n    preprocess: mergePresets(\"preprocess\"),\n    postprocess: mergePresets(\"postprocess\"),\n    preflights: mergePresets(\"preflights\"),\n    autocomplete: mergePresets(\"autocomplete\"),\n    variants: mergePresets(\"variants\").map(normalizeVariant),\n    shortcuts: resolveShortcuts(mergePresets(\"shortcuts\")),\n    extractors\n  };\n}\n\nconst version = \"0.29.6\";\n\nclass UnoGenerator {\n  constructor(userConfig = {}, defaults = {}) {\n    this.userConfig = userConfig;\n    this.defaults = defaults;\n    this.version = version;\n    this._cache = /* @__PURE__ */ new Map();\n    this.blocked = /* @__PURE__ */ new Set();\n    this.parentOrders = /* @__PURE__ */ new Map();\n    this.config = resolveConfig(userConfig, defaults);\n  }\n  setConfig(userConfig, defaults) {\n    if (!userConfig)\n      return;\n    if (defaults)\n      this.defaults = defaults;\n    this.userConfig = userConfig;\n    this.config = resolveConfig(userConfig, this.defaults);\n    this.blocked.clear();\n    this.parentOrders.clear();\n    this._cache.clear();\n  }\n  async applyExtractors(code, id, set = /* @__PURE__ */ new Set()) {\n    const context = {\n      get original() {\n        return code;\n      },\n      code,\n      id\n    };\n    for (const extractor of this.config.extractors) {\n      const result = await extractor.extract(context);\n      result?.forEach((t) => set.add(t));\n    }\n    return set;\n  }\n  makeContext(raw, applied) {\n    const context = {\n      rawSelector: raw,\n      currentSelector: applied[1],\n      theme: this.config.theme,\n      generator: this,\n      variantHandlers: applied[2],\n      constructCSS: (...args) => this.constructCustomCSS(context, ...args),\n      variantMatch: applied\n    };\n    return context;\n  }\n  async parseToken(raw, alias) {\n    if (this.blocked.has(raw))\n      return;\n    const cacheKey = `${raw}${alias ? ` ${alias}` : \"\"}`;\n    if (this._cache.has(cacheKey))\n      return this._cache.get(cacheKey);\n    let current = raw;\n    for (const p of this.config.preprocess)\n      current = p(raw);\n    if (this.isBlocked(current)) {\n      this.blocked.add(raw);\n      this._cache.set(cacheKey, null);\n      return;\n    }\n    const applied = this.matchVariants(raw, current);\n    if (!applied || this.isBlocked(applied[1])) {\n      this.blocked.add(raw);\n      this._cache.set(cacheKey, null);\n      return;\n    }\n    const context = this.makeContext(raw, [alias || applied[0], applied[1], applied[2], applied[3]]);\n    const expanded = this.expandShortcut(context.currentSelector, context);\n    if (expanded) {\n      const utils = await this.stringifyShortcuts(context.variantMatch, context, expanded[0], expanded[1]);\n      if (utils?.length) {\n        this._cache.set(cacheKey, utils);\n        return utils;\n      }\n    } else {\n      const utils = (await this.parseUtil(context.variantMatch, context))?.map((i) => this.stringifyUtil(i)).filter(notNull);\n      if (utils?.length) {\n        this._cache.set(cacheKey, utils);\n        return utils;\n      }\n    }\n    this._cache.set(cacheKey, null);\n  }\n  async generate(input, {\n    id,\n    scope,\n    preflights = true,\n    safelist = true,\n    minify = false\n  } = {}) {\n    const tokens = typeof input === \"string\" ? await this.applyExtractors(input, id) : input;\n    if (safelist)\n      this.config.safelist.forEach((s) => tokens.add(s));\n    const nl = minify ? \"\" : \"\\n\";\n    const layerSet = /* @__PURE__ */ new Set([\"default\"]);\n    const matched = /* @__PURE__ */ new Set();\n    const sheet = /* @__PURE__ */ new Map();\n    await Promise.all(Array.from(tokens).map(async (raw) => {\n      if (matched.has(raw))\n        return;\n      const payload = await this.parseToken(raw);\n      if (payload == null)\n        return;\n      matched.add(raw);\n      for (const item of payload) {\n        const parent = item[3] || \"\";\n        if (!sheet.has(parent))\n          sheet.set(parent, []);\n        sheet.get(parent).push(item);\n        if (item[4]?.layer)\n          layerSet.add(item[4].layer);\n      }\n    }));\n    if (preflights) {\n      this.config.preflights.forEach((i) => {\n        if (i.layer)\n          layerSet.add(i.layer);\n      });\n    }\n    const layerCache = {};\n    const layers = this.config.sortLayers(Array.from(layerSet).sort((a, b) => (this.config.layers[a] ?? 0) - (this.config.layers[b] ?? 0) || a.localeCompare(b)));\n    let preflightsMap = {};\n    if (preflights) {\n      const preflightContext = {\n        generator: this,\n        theme: this.config.theme\n      };\n      preflightsMap = Object.fromEntries(await Promise.all(layers.map(async (layer) => {\n        const preflights2 = await Promise.all(this.config.preflights.filter((i) => (i.layer || \"default\") === layer).map(async (i) => await i.getCSS(preflightContext)));\n        const css = preflights2.filter(Boolean).join(nl);\n        return [layer, css];\n      })));\n    }\n    const getLayer = (layer) => {\n      if (layerCache[layer])\n        return layerCache[layer];\n      let css = Array.from(sheet).sort((a, b) => (this.parentOrders.get(a[0]) ?? 0) - (this.parentOrders.get(b[0]) ?? 0) || a[0]?.localeCompare(b[0] || \"\") || 0).map(([parent, items]) => {\n        const size = items.length;\n        const sorted = items.filter((i) => (i[4]?.layer || \"default\") === layer).sort((a, b) => a[0] - b[0] || (a[4]?.sort || 0) - (b[4]?.sort || 0) || a[1]?.localeCompare(b[1] || \"\") || 0).map((a) => [a[1] ? applyScope(a[1], scope) : a[1], a[2], !!a[4]?.noMerge]).map((a) => [a[0] == null ? a[0] : [a[0]], a[1], a[2]]);\n        if (!sorted.length)\n          return void 0;\n        const rules = sorted.reverse().map(([selector, body, noMerge], idx) => {\n          if (!noMerge && selector && this.config.mergeSelectors) {\n            for (let i = idx + 1; i < size; i++) {\n              const current = sorted[i];\n              if (current && !current[2] && current[0] && current[1] === body) {\n                current[0].push(...selector);\n                return null;\n              }\n            }\n          }\n          return selector ? `${[...new Set(selector)].join(`,${nl}`)}{${body}}` : body;\n        }).filter(Boolean).reverse().join(nl);\n        return parent ? `${parent}{${nl}${rules}${nl}}` : rules;\n      }).filter(Boolean).join(nl);\n      if (preflights) {\n        css = [preflightsMap[layer], css].filter(Boolean).join(nl);\n      }\n      return layerCache[layer] = !minify && css ? `/* layer: ${layer} */${nl}${css}` : css;\n    };\n    const getLayers = (includes = layers, excludes) => {\n      return includes.filter((i) => !excludes?.includes(i)).map((i) => getLayer(i) || \"\").filter(Boolean).join(nl);\n    };\n    return {\n      get css() {\n        return getLayers();\n      },\n      layers,\n      getLayers,\n      getLayer,\n      matched\n    };\n  }\n  matchVariants(raw, current) {\n    const variants = /* @__PURE__ */ new Set();\n    const handlers = [];\n    let processed = current || raw;\n    let applied = false;\n    const context = {\n      rawSelector: raw,\n      theme: this.config.theme,\n      generator: this\n    };\n    while (true) {\n      applied = false;\n      for (const v of this.config.variants) {\n        if (!v.multiPass && variants.has(v))\n          continue;\n        let handler = v.match(processed, context);\n        if (!handler)\n          continue;\n        if (typeof handler === \"string\")\n          handler = { matcher: handler };\n        processed = handler.matcher;\n        if (Array.isArray(handler.parent))\n          this.parentOrders.set(handler.parent[0], handler.parent[1]);\n        handlers.push(handler);\n        variants.add(v);\n        applied = true;\n        break;\n      }\n      if (!applied)\n        break;\n      if (handlers.length > 500)\n        throw new Error(`Too many variants applied to \"${raw}\"`);\n    }\n    return [raw, processed, handlers, variants];\n  }\n  applyVariants(parsed, variantHandlers = parsed[4], raw = parsed[1]) {\n    const handlers = [...variantHandlers].sort((a, b) => (a.order || 0) - (b.order || 0));\n    const entries = handlers.reduce((p, v) => v.body?.(p) || p, parsed[2]);\n    const obj = {\n      selector: handlers.reduce((p, v) => v.selector?.(p, entries) || p, toEscapedSelector(raw)),\n      entries,\n      parent: handlers.reduce((p, v) => Array.isArray(v.parent) ? v.parent[0] : v.parent || p, void 0),\n      layer: handlers.reduce((p, v) => v.layer || p, void 0),\n      sort: handlers.reduce((p, v) => v.sort || p, void 0)\n    };\n    for (const p of this.config.postprocess)\n      p(obj);\n    return obj;\n  }\n  constructCustomCSS(context, body, overrideSelector) {\n    body = normalizeCSSEntries(body);\n    const { selector, entries, parent } = this.applyVariants([0, overrideSelector || context.rawSelector, body, void 0, context.variantHandlers]);\n    const cssBody = `${selector}{${entriesToCss(entries)}}`;\n    if (parent)\n      return `${parent}{${cssBody}}`;\n    return cssBody;\n  }\n  async parseUtil(input, context, internal = false) {\n    const [raw, processed, variantHandlers] = typeof input === \"string\" ? this.matchVariants(input) : input;\n    const staticMatch = this.config.rulesStaticMap[processed];\n    if (staticMatch) {\n      if (staticMatch[1] && (internal || !staticMatch[2]?.internal))\n        return [[staticMatch[0], raw, normalizeCSSEntries(staticMatch[1]), staticMatch[2], variantHandlers]];\n    }\n    context.variantHandlers = variantHandlers;\n    const { rulesDynamic, rulesSize } = this.config;\n    for (let i = rulesSize - 1; i >= 0; i--) {\n      const rule = rulesDynamic[i];\n      if (!rule)\n        continue;\n      if (rule[2]?.internal && !internal)\n        continue;\n      const [matcher, handler, meta] = rule;\n      const match = processed.match(matcher);\n      if (!match)\n        continue;\n      const result = await handler(match, context);\n      if (!result)\n        continue;\n      if (typeof result === \"string\")\n        return [[i, result, meta]];\n      const entries = normalizeCSSValues(result).filter((i2) => i2.length);\n      if (entries.length)\n        return entries.map((e2) => [i, raw, e2, meta, variantHandlers]);\n    }\n  }\n  stringifyUtil(parsed) {\n    if (!parsed)\n      return;\n    if (isRawUtil(parsed))\n      return [parsed[0], void 0, parsed[1], void 0, parsed[2]];\n    const { selector, entries, parent, layer: variantLayer, sort: variantSort } = this.applyVariants(parsed);\n    const body = entriesToCss(entries);\n    if (!body)\n      return;\n    const { layer: metaLayer, sort: metaSort, ...meta } = parsed[3] ?? {};\n    const ruleMeta = {\n      ...meta,\n      layer: variantLayer ?? metaLayer,\n      sort: variantSort ?? metaSort\n    };\n    return [parsed[0], selector, body, parent, ruleMeta];\n  }\n  expandShortcut(processed, context, depth = 3) {\n    if (depth === 0)\n      return;\n    let meta;\n    let result;\n    for (const s of this.config.shortcuts) {\n      if (isStaticShortcut(s)) {\n        if (s[0] === processed) {\n          meta = meta || s[2];\n          result = s[1];\n          break;\n        }\n      } else {\n        const match = processed.match(s[0]);\n        if (match)\n          result = s[1](match, context);\n        if (result) {\n          meta = meta || s[2];\n          break;\n        }\n      }\n    }\n    if (typeof result === \"string\")\n      result = expandVariantGroup(result).split(/\\s+/g);\n    if (!result)\n      return;\n    return [\n      result.flatMap((r) => this.expandShortcut(r, context, depth - 1)?.[0] || [r]).filter((r) => r !== \"\"),\n      meta\n    ];\n  }\n  async stringifyShortcuts(parent, context, expanded, meta = { layer: this.config.shortcutsLayer }) {\n    const selectorMap = new TwoKeyMap();\n    const parsed = (await Promise.all(uniq(expanded).map(async (i) => {\n      const result = await this.parseUtil(i, context, true);\n      if (!result)\n        warnOnce(`unmatched utility \"${i}\" in shortcut \"${parent[1]}\"`);\n      return result || [];\n    }))).flat(1).filter(Boolean).sort((a, b) => a[0] - b[0]);\n    const [raw, , parentVariants] = parent;\n    for (const item of parsed) {\n      if (isRawUtil(item))\n        continue;\n      const { selector, entries, parent: parent2, sort } = this.applyVariants(item, [...item[4], ...parentVariants], raw);\n      const mapItem = selectorMap.getFallback(selector, parent2, [[], item[0]]);\n      mapItem[0].push([entries, !!item[3]?.noMerge, sort ?? 0]);\n    }\n    return selectorMap.map(([e2, index], selector, mediaQuery) => {\n      const stringify = (flatten, noMerge, entrySortPair) => {\n        const maxSort = Math.max(...entrySortPair.map((e3) => e3[1]));\n        const entriesList = entrySortPair.map((e3) => e3[0]);\n        return (flatten ? [entriesList.flat(1)] : entriesList).map((entries) => {\n          const body = entriesToCss(entries);\n          if (body)\n            return [index, selector, body, mediaQuery, { ...meta, noMerge, sort: maxSort }];\n          return void 0;\n        });\n      };\n      const merges = [\n        [e2.filter(([, noMerge]) => noMerge).map(([entries, , sort]) => [entries, sort]), true],\n        [e2.filter(([, noMerge]) => !noMerge).map(([entries, , sort]) => [entries, sort]), false]\n      ];\n      return merges.map(([e3, noMerge]) => [\n        ...stringify(false, noMerge, e3.filter(([entries]) => entries.some((entry) => entry[0] === CONTROL_SHORTCUT_NO_MERGE))),\n        ...stringify(true, noMerge, e3.filter(([entries]) => entries.every((entry) => entry[0] !== CONTROL_SHORTCUT_NO_MERGE)))\n      ]);\n    }).flat(2).filter(Boolean);\n  }\n  isBlocked(raw) {\n    return !raw || this.config.blocklist.some((e2) => typeof e2 === \"string\" ? e2 === raw : e2.test(raw));\n  }\n}\nfunction createGenerator(config, defaults) {\n  return new UnoGenerator(config, defaults);\n}\nconst regexScopePlaceholder = / \\$\\$ /;\nconst hasScopePlaceholder = (css) => css.match(regexScopePlaceholder);\nfunction applyScope(css, scope) {\n  if (hasScopePlaceholder(css))\n    return css.replace(regexScopePlaceholder, scope ? ` ${scope} ` : \" \");\n  else\n    return scope ? `${scope} ${css}` : css;\n}\nconst attributifyRe = /^\\[(.+?)(~?=)\"(.*)\"\\]$/;\nfunction toEscapedSelector(raw) {\n  if (attributifyRe.test(raw))\n    return raw.replace(attributifyRe, (_, n, s, i) => `[${e(n)}${s}\"${e(i)}\"]`);\n  return `.${e(raw)}`;\n}\n\nexport { BetterMap, CONTROL_SHORTCUT_NO_MERGE, TwoKeyMap, UnoGenerator, attributifyRE, clearIdenticalEntries, clone, createGenerator, createValueHandler, e, entriesToCss, escapeRegExp, escapeSelector, expandVariantGroup, extractorSplit, extractorSvelte, hasScopePlaceholder, isAttributifySelector, isObject, isRawUtil, isStaticRule, isStaticShortcut, isValidSelector, mergeDeep, mergeSet, normalizeCSSEntries, normalizeCSSValues, normalizeVariant, notNull, regexClassGroup, regexScopePlaceholder, toArray, uniq, validateFilterRE, warnOnce, withLayer };\n", "const colors = {\n  inherit: \"inherit\",\n  current: \"currentColor\",\n  transparent: \"transparent\",\n  black: \"#000\",\n  white: \"#fff\",\n  rose: {\n    50: \"#fff1f2\",\n    100: \"#ffe4e6\",\n    200: \"#fecdd3\",\n    300: \"#fda4af\",\n    400: \"#fb7185\",\n    500: \"#f43f5e\",\n    600: \"#e11d48\",\n    700: \"#be123c\",\n    800: \"#9f1239\",\n    900: \"#881337\"\n  },\n  pink: {\n    50: \"#fdf2f8\",\n    100: \"#fce7f3\",\n    200: \"#fbcfe8\",\n    300: \"#f9a8d4\",\n    400: \"#f472b6\",\n    500: \"#ec4899\",\n    600: \"#db2777\",\n    700: \"#be185d\",\n    800: \"#9d174d\",\n    900: \"#831843\"\n  },\n  fuchsia: {\n    50: \"#fdf4ff\",\n    100: \"#fae8ff\",\n    200: \"#f5d0fe\",\n    300: \"#f0abfc\",\n    400: \"#e879f9\",\n    500: \"#d946ef\",\n    600: \"#c026d3\",\n    700: \"#a21caf\",\n    800: \"#86198f\",\n    900: \"#701a75\"\n  },\n  purple: {\n    50: \"#faf5ff\",\n    100: \"#f3e8ff\",\n    200: \"#e9d5ff\",\n    300: \"#d8b4fe\",\n    400: \"#c084fc\",\n    500: \"#a855f7\",\n    600: \"#9333ea\",\n    700: \"#7e22ce\",\n    800: \"#6b21a8\",\n    900: \"#581c87\"\n  },\n  violet: {\n    50: \"#f5f3ff\",\n    100: \"#ede9fe\",\n    200: \"#ddd6fe\",\n    300: \"#c4b5fd\",\n    400: \"#a78bfa\",\n    500: \"#8b5cf6\",\n    600: \"#7c3aed\",\n    700: \"#6d28d9\",\n    800: \"#5b21b6\",\n    900: \"#4c1d95\"\n  },\n  indigo: {\n    50: \"#eef2ff\",\n    100: \"#e0e7ff\",\n    200: \"#c7d2fe\",\n    300: \"#a5b4fc\",\n    400: \"#818cf8\",\n    500: \"#6366f1\",\n    600: \"#4f46e5\",\n    700: \"#4338ca\",\n    800: \"#3730a3\",\n    900: \"#312e81\"\n  },\n  blue: {\n    50: \"#eff6ff\",\n    100: \"#dbeafe\",\n    200: \"#bfdbfe\",\n    300: \"#93c5fd\",\n    400: \"#60a5fa\",\n    500: \"#3b82f6\",\n    600: \"#2563eb\",\n    700: \"#1d4ed8\",\n    800: \"#1e40af\",\n    900: \"#1e3a8a\"\n  },\n  sky: {\n    50: \"#f0f9ff\",\n    100: \"#e0f2fe\",\n    200: \"#bae6fd\",\n    300: \"#7dd3fc\",\n    400: \"#38bdf8\",\n    500: \"#0ea5e9\",\n    600: \"#0284c7\",\n    700: \"#0369a1\",\n    800: \"#075985\",\n    900: \"#0c4a6e\"\n  },\n  cyan: {\n    50: \"#ecfeff\",\n    100: \"#cffafe\",\n    200: \"#a5f3fc\",\n    300: \"#67e8f9\",\n    400: \"#22d3ee\",\n    500: \"#06b6d4\",\n    600: \"#0891b2\",\n    700: \"#0e7490\",\n    800: \"#155e75\",\n    900: \"#164e63\"\n  },\n  teal: {\n    50: \"#f0fdfa\",\n    100: \"#ccfbf1\",\n    200: \"#99f6e4\",\n    300: \"#5eead4\",\n    400: \"#2dd4bf\",\n    500: \"#14b8a6\",\n    600: \"#0d9488\",\n    700: \"#0f766e\",\n    800: \"#115e59\",\n    900: \"#134e4a\"\n  },\n  emerald: {\n    50: \"#ecfdf5\",\n    100: \"#d1fae5\",\n    200: \"#a7f3d0\",\n    300: \"#6ee7b7\",\n    400: \"#34d399\",\n    500: \"#10b981\",\n    600: \"#059669\",\n    700: \"#047857\",\n    800: \"#065f46\",\n    900: \"#064e3b\"\n  },\n  green: {\n    50: \"#f0fdf4\",\n    100: \"#dcfce7\",\n    200: \"#bbf7d0\",\n    300: \"#86efac\",\n    400: \"#4ade80\",\n    500: \"#22c55e\",\n    600: \"#16a34a\",\n    700: \"#15803d\",\n    800: \"#166534\",\n    900: \"#14532d\"\n  },\n  lime: {\n    50: \"#f7fee7\",\n    100: \"#ecfccb\",\n    200: \"#d9f99d\",\n    300: \"#bef264\",\n    400: \"#a3e635\",\n    500: \"#84cc16\",\n    600: \"#65a30d\",\n    700: \"#4d7c0f\",\n    800: \"#3f6212\",\n    900: \"#365314\"\n  },\n  yellow: {\n    50: \"#fefce8\",\n    100: \"#fef9c3\",\n    200: \"#fef08a\",\n    300: \"#fde047\",\n    400: \"#facc15\",\n    500: \"#eab308\",\n    600: \"#ca8a04\",\n    700: \"#a16207\",\n    800: \"#854d0e\",\n    900: \"#713f12\"\n  },\n  amber: {\n    50: \"#fffbeb\",\n    100: \"#fef3c7\",\n    200: \"#fde68a\",\n    300: \"#fcd34d\",\n    400: \"#fbbf24\",\n    500: \"#f59e0b\",\n    600: \"#d97706\",\n    700: \"#b45309\",\n    800: \"#92400e\",\n    900: \"#78350f\"\n  },\n  orange: {\n    50: \"#fff7ed\",\n    100: \"#ffedd5\",\n    200: \"#fed7aa\",\n    300: \"#fdba74\",\n    400: \"#fb923c\",\n    500: \"#f97316\",\n    600: \"#ea580c\",\n    700: \"#c2410c\",\n    800: \"#9a3412\",\n    900: \"#7c2d12\"\n  },\n  red: {\n    50: \"#fef2f2\",\n    100: \"#fee2e2\",\n    200: \"#fecaca\",\n    300: \"#fca5a5\",\n    400: \"#f87171\",\n    500: \"#ef4444\",\n    600: \"#dc2626\",\n    700: \"#b91c1c\",\n    800: \"#991b1b\",\n    900: \"#7f1d1d\"\n  },\n  gray: {\n    50: \"#f9fafb\",\n    100: \"#f3f4f6\",\n    200: \"#e5e7eb\",\n    300: \"#d1d5db\",\n    400: \"#9ca3af\",\n    500: \"#6b7280\",\n    600: \"#4b5563\",\n    700: \"#374151\",\n    800: \"#1f2937\",\n    900: \"#111827\"\n  },\n  slate: {\n    50: \"#f8fafc\",\n    100: \"#f1f5f9\",\n    200: \"#e2e8f0\",\n    300: \"#cbd5e1\",\n    400: \"#94a3b8\",\n    500: \"#64748b\",\n    600: \"#475569\",\n    700: \"#334155\",\n    800: \"#1e293b\",\n    900: \"#0f172a\"\n  },\n  zinc: {\n    50: \"#fafafa\",\n    100: \"#f4f4f5\",\n    200: \"#e4e4e7\",\n    300: \"#d4d4d8\",\n    400: \"#a1a1aa\",\n    500: \"#71717a\",\n    600: \"#52525b\",\n    700: \"#3f3f46\",\n    800: \"#27272a\",\n    900: \"#18181b\"\n  },\n  neutral: {\n    50: \"#fafafa\",\n    100: \"#f5f5f5\",\n    200: \"#e5e5e5\",\n    300: \"#d4d4d4\",\n    400: \"#a3a3a3\",\n    500: \"#737373\",\n    600: \"#525252\",\n    700: \"#404040\",\n    800: \"#262626\",\n    900: \"#171717\"\n  },\n  stone: {\n    50: \"#fafaf9\",\n    100: \"#f5f5f4\",\n    200: \"#e7e5e4\",\n    300: \"#d6d3d1\",\n    400: \"#a8a29e\",\n    500: \"#78716c\",\n    600: \"#57534e\",\n    700: \"#44403c\",\n    800: \"#292524\",\n    900: \"#1c1917\"\n  },\n  light: {\n    50: \"#fdfdfd\",\n    100: \"#fcfcfc\",\n    200: \"#fafafa\",\n    300: \"#f8f9fa\",\n    400: \"#f6f6f6\",\n    500: \"#f2f2f2\",\n    600: \"#f1f3f5\",\n    700: \"#e9ecef\",\n    800: \"#dee2e6\",\n    900: \"#dde1e3\"\n  },\n  dark: {\n    50: \"#4a4a4a\",\n    100: \"#3c3c3c\",\n    200: \"#323232\",\n    300: \"#2d2d2d\",\n    400: \"#222222\",\n    500: \"#1f1f1f\",\n    600: \"#1c1c1e\",\n    700: \"#1b1b1b\",\n    800: \"#181818\",\n    900: \"#0f0f0f\"\n  },\n  get lightblue() {\n    return this.sky;\n  },\n  get lightBlue() {\n    return this.sky;\n  },\n  get warmgray() {\n    return this.stone;\n  },\n  get warmGray() {\n    return this.stone;\n  },\n  get truegray() {\n    return this.neutral;\n  },\n  get trueGray() {\n    return this.neutral;\n  },\n  get coolgray() {\n    return this.gray;\n  },\n  get coolGray() {\n    return this.gray;\n  },\n  get bluegray() {\n    return this.slate;\n  },\n  get blueGray() {\n    return this.slate;\n  }\n};\nObject.values(colors).forEach((color) => {\n  if (typeof color !== \"string\") {\n    color.DEFAULT = color.DEFAULT || color[400];\n    Object.keys(color).forEach((key) => {\n      const short = +key / 100;\n      if (short === Math.round(short))\n        color[short] = color[key];\n    });\n  }\n});\n\nexport { colors as c };\n", "import { c as colors } from './colors.mjs';\n\nconst fontFamily = {\n  sans: [\n    \"ui-sans-serif\",\n    \"system-ui\",\n    \"-apple-system\",\n    \"BlinkMacSystemFont\",\n    '\"Segoe UI\"',\n    \"Roboto\",\n    '\"Helvetica Neue\"',\n    \"Arial\",\n    '\"Noto Sans\"',\n    \"sans-serif\",\n    '\"Apple Color Emoji\"',\n    '\"Segoe UI Emoji\"',\n    '\"Segoe UI Symbol\"',\n    '\"Noto Color Emoji\"'\n  ].join(\",\"),\n  serif: [\n    \"ui-serif\",\n    \"Georgia\",\n    \"Cambria\",\n    '\"Times New Roman\"',\n    \"Times\",\n    \"serif\"\n  ].join(\",\"),\n  mono: [\n    \"ui-monospace\",\n    \"SFMono-Regular\",\n    \"Menlo\",\n    \"Monaco\",\n    \"Consolas\",\n    '\"Liberation Mono\"',\n    '\"Courier New\"',\n    \"monospace\"\n  ].join(\",\")\n};\nconst fontSize = {\n  \"xs\": [\"0.75rem\", \"1rem\"],\n  \"sm\": [\"0.875rem\", \"1.25rem\"],\n  \"base\": [\"1rem\", \"1.5rem\"],\n  \"lg\": [\"1.125rem\", \"1.75rem\"],\n  \"xl\": [\"1.25rem\", \"1.75rem\"],\n  \"2xl\": [\"1.5rem\", \"2rem\"],\n  \"3xl\": [\"1.875rem\", \"2.25rem\"],\n  \"4xl\": [\"2.25rem\", \"2.5rem\"],\n  \"5xl\": [\"3rem\", \"1\"],\n  \"6xl\": [\"3.75rem\", \"1\"],\n  \"7xl\": [\"4.5rem\", \"1\"],\n  \"8xl\": [\"6rem\", \"1\"],\n  \"9xl\": [\"8rem\", \"1\"]\n};\nconst textIndent = {\n  \"DEFAULT\": \"1.5rem\",\n  \"xs\": \"0.5rem\",\n  \"sm\": \"1rem\",\n  \"md\": \"1.5rem\",\n  \"lg\": \"2rem\",\n  \"xl\": \"2.5rem\",\n  \"2xl\": \"3rem\",\n  \"3xl\": \"4rem\"\n};\nconst textStrokeWidth = {\n  DEFAULT: \"1.5rem\",\n  none: \"0\",\n  sm: \"thin\",\n  md: \"medium\",\n  lg: \"thick\"\n};\nconst textShadow = {\n  DEFAULT: [\"0 0 1px rgba(0,0,0,0.2)\", \"0 0 1px rgba(1,0,5,0.1)\"],\n  none: \"0 0 #0000\",\n  sm: \"1px 1px 3px rgba(36,37,47,0.25)\",\n  md: [\"0 1px 2px rgba(30,29,39,0.19)\", \"1px 2px 4px rgba(54,64,147,0.18)\"],\n  lg: [\"3px 3px 6px rgba(0,0,0,0.26)\", \"0 0 5px rgba(15,3,86,0.22)\"],\n  xl: [\"1px 1px 3px rgba(0,0,0,0.29)\", \"2px 4px 7px rgba(73,64,125,0.35)\"]\n};\nconst lineHeight = {\n  none: \"1\",\n  tight: \"1.25\",\n  snug: \"1.375\",\n  normal: \"1.5\",\n  relaxed: \"1.625\",\n  loose: \"2\"\n};\nconst letterSpacing = {\n  tighter: \"-0.05em\",\n  tight: \"-0.025em\",\n  normal: \"0em\",\n  wide: \"0.025em\",\n  wider: \"0.05em\",\n  widest: \"0.1em\"\n};\nconst wordSpacing = letterSpacing;\n\nconst breakpoints = {\n  \"sm\": \"640px\",\n  \"md\": \"768px\",\n  \"lg\": \"1024px\",\n  \"xl\": \"1280px\",\n  \"2xl\": \"1536px\"\n};\nconst verticalBreakpoints = { ...breakpoints };\nconst lineWidth = {\n  DEFAULT: \"1px\",\n  none: \"0px\"\n};\nconst spacing = {\n  \"DEFAULT\": \"1rem\",\n  \"none\": \"0rem\",\n  \"xs\": \"0.75rem\",\n  \"sm\": \"0.875rem\",\n  \"lg\": \"1.125rem\",\n  \"xl\": \"1.25rem\",\n  \"2xl\": \"1.5rem\",\n  \"3xl\": \"1.875rem\",\n  \"4xl\": \"2.25rem\",\n  \"5xl\": \"3rem\",\n  \"6xl\": \"3.75rem\",\n  \"7xl\": \"4.5rem\",\n  \"8xl\": \"6rem\",\n  \"9xl\": \"8rem\"\n};\nconst duration = {\n  DEFAULT: \"150ms\",\n  none: \"0ms\",\n  75: \"75ms\",\n  100: \"100ms\",\n  150: \"150ms\",\n  200: \"200ms\",\n  300: \"300ms\",\n  500: \"500ms\",\n  700: \"700ms\",\n  1e3: \"1000ms\"\n};\nconst borderRadius = {\n  \"DEFAULT\": \"0.25rem\",\n  \"none\": \"0rem\",\n  \"sm\": \"0.125rem\",\n  \"md\": \"0.375rem\",\n  \"lg\": \"0.5rem\",\n  \"xl\": \"0.75rem\",\n  \"2xl\": \"1rem\",\n  \"3xl\": \"1.5rem\",\n  \"full\": \"9999px\"\n};\nconst boxShadow = {\n  \"DEFAULT\": [\"var(--un-shadow-inset) 0 1px 3px 0 rgba(0,0,0,0.1)\", \"var(--un-shadow-inset) 0 1px 2px -1px rgba(0,0,0,0.1)\"],\n  \"none\": \"0 0 #0000\",\n  \"sm\": \"var(--un-shadow-inset) 0 1px 2px 0 rgba(0,0,0,0.05)\",\n  \"md\": [\"var(--un-shadow-inset) 0 4px 6px -1px rgba(0,0,0,0.1)\", \"var(--un-shadow-inset) 0 2px 4px -2px rgba(0,0,0,0.1)\"],\n  \"lg\": [\"var(--un-shadow-inset) 0 10px 15px -3px rgba(0,0,0,0.1)\", \"var(--un-shadow-inset) 0 4px 6px -4px rgba(0,0,0,0.1)\"],\n  \"xl\": [\"var(--un-shadow-inset) 0 20px 25px -5px rgba(0,0,0,0.1)\", \"var(--un-shadow-inset) 0 8px 10px -6px rgba(0,0,0,0.1)\"],\n  \"2xl\": \"var(--un-shadow-inset) 0 25px 50px -12px rgba(0,0,0,0.25)\",\n  \"inner\": \"inset 0 2px 4px 0 rgba(0,0,0,0.05)\"\n};\nconst easing = {\n  \"DEFAULT\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n  \"linear\": \"linear\",\n  \"in\": \"cubic-bezier(0.4, 0, 1, 1)\",\n  \"out\": \"cubic-bezier(0, 0, 0.2, 1)\",\n  \"in-out\": \"cubic-bezier(0.4, 0, 0.2, 1)\"\n};\nconst ringWidth = {\n  DEFAULT: \"1px\",\n  none: \"0px\"\n};\n\nconst blur = {\n  \"DEFAULT\": \"8px\",\n  \"0\": \"0\",\n  \"sm\": \"4px\",\n  \"md\": \"12px\",\n  \"lg\": \"16px\",\n  \"xl\": \"24px\",\n  \"2xl\": \"40px\",\n  \"3xl\": \"64px\"\n};\nconst dropShadow = {\n  \"DEFAULT\": [\"0 1px 2px rgba(0,0,0,0.1)\", \"0 1px 1px rgba(0,0,0,0.06)\"],\n  \"sm\": \"0 1px 1px rgba(0,0,0,0.05)\",\n  \"md\": [\"0 4px 3px rgba(0,0,0,0.07)\", \"0 2px 2px rgba(0,0,0,0.06)\"],\n  \"lg\": [\"0 10px 8px rgba(0,0,0,0.04)\", \"0 4px 3px rgba(0,0,0,0.1)\"],\n  \"xl\": [\"0 20px 13px rgba(0,0,0,0.03)\", \"0 8px 5px rgba(0,0,0,0.08)\"],\n  \"2xl\": \"0 25px 25px rgba(0,0,0,0.15)\",\n  \"none\": \"0 0 #0000\"\n};\n\nconst baseSize = {\n  \"xs\": \"20rem\",\n  \"sm\": \"24rem\",\n  \"md\": \"28rem\",\n  \"lg\": \"32rem\",\n  \"xl\": \"36rem\",\n  \"2xl\": \"42rem\",\n  \"3xl\": \"48rem\",\n  \"4xl\": \"56rem\",\n  \"5xl\": \"64rem\",\n  \"6xl\": \"72rem\",\n  \"7xl\": \"80rem\",\n  \"prose\": \"65ch\"\n};\nconst width = {\n  auto: \"auto\",\n  ...baseSize,\n  screen: \"100vw\"\n};\nconst maxWidth = {\n  none: \"none\",\n  ...baseSize,\n  screen: \"100vw\"\n};\nconst height = {\n  auto: \"auto\",\n  ...baseSize,\n  screen: \"100vh\"\n};\nconst maxHeight = {\n  none: \"none\",\n  ...baseSize,\n  screen: \"100vh\"\n};\n\nconst theme = {\n  width,\n  height,\n  maxWidth,\n  maxHeight,\n  minWidth: maxWidth,\n  minHeight: maxHeight,\n  inlineSize: width,\n  blockSize: height,\n  maxInlineSize: maxWidth,\n  maxBlockSize: maxHeight,\n  minInlineSize: maxWidth,\n  minBlockSize: maxHeight,\n  colors,\n  fontFamily,\n  fontSize,\n  breakpoints,\n  verticalBreakpoints,\n  borderRadius,\n  lineHeight,\n  letterSpacing,\n  wordSpacing,\n  boxShadow,\n  textIndent,\n  textShadow,\n  textStrokeWidth,\n  blur,\n  dropShadow,\n  easing,\n  lineWidth,\n  spacing,\n  duration,\n  ringWidth\n};\n\nexport { fontSize as a, blur as b, textIndent as c, dropShadow as d, textStrokeWidth as e, fontFamily as f, textShadow as g, letterSpacing as h, breakpoints as i, lineWidth as j, duration as k, lineHeight as l, borderRadius as m, boxShadow as n, easing as o, baseSize as p, width as q, ringWidth as r, spacing as s, theme as t, maxWidth as u, verticalBreakpoints as v, wordSpacing as w, height as x, maxHeight as y };\n", "import { escapeSelector, createValueHandler, toArray } from '@unocss/core';\n\nconst cssColorFunctions = [\"hsl\", \"hsla\", \"hwb\", \"lab\", \"lch\", \"oklab\", \"oklch\", \"rgb\", \"rgba\"];\nfunction hex2rgba(hex = \"\") {\n  const color = parseHexColor(hex);\n  if (color != null) {\n    const { components, alpha } = color;\n    if (alpha == null)\n      return components;\n    return [...components, alpha];\n  }\n}\nfunction parseCssColor(str = \"\") {\n  const color = parseColor$1(str);\n  if (color == null || color === false)\n    return;\n  const { type: casedType, components, alpha } = color;\n  const type = casedType.toLowerCase();\n  if (components.length === 0)\n    return;\n  if ([\"rgba\", \"hsla\"].includes(type) && alpha == null)\n    return;\n  if (cssColorFunctions.includes(type) && ![1, 3].includes(components.length))\n    return;\n  return { type, components, alpha };\n}\nfunction colorToString(color, alphaOverride) {\n  const { components } = color;\n  let { alpha, type } = color;\n  alpha = alphaOverride ?? alpha;\n  type = type.toLowerCase();\n  if ([\"hsla\", \"hsl\", \"rgba\", \"rgb\"].includes(type))\n    return `${type.replace(\"a\", \"\")}a(${components.join(\",\")}${alpha == null ? \"\" : `,${alpha}`})`;\n  alpha = alpha == null ? \"\" : ` / ${alpha}`;\n  if (cssColorFunctions.includes(type))\n    return `${type}(${components.join(\" \")}${alpha})`;\n  return `color(${type} ${components.join(\" \")}${alpha})`;\n}\nfunction parseColor$1(str) {\n  if (!str)\n    return;\n  let color = parseHexColor(str);\n  if (color != null)\n    return color;\n  color = cssColorKeyword(str);\n  if (color != null)\n    return color;\n  color = parseCssCommaColorFunction(str);\n  if (color != null)\n    return color;\n  color = parseCssSpaceColorFunction(str);\n  if (color != null)\n    return color;\n  color = parseCssColorFunction(str);\n  if (color != null)\n    return color;\n}\nfunction parseHexColor(str) {\n  const [, body] = str.match(/^#([\\da-f]+)$/i) || [];\n  if (!body)\n    return;\n  switch (body.length) {\n    case 3:\n    case 4:\n      const digits = Array.from(body, (s) => Number.parseInt(s, 16)).map((n) => n << 4 | n);\n      return {\n        type: \"rgb\",\n        components: digits.slice(0, 3),\n        alpha: body.length === 3 ? void 0 : Math.round(digits[3] / 255 * 100) / 100\n      };\n    case 6:\n    case 8:\n      const value = Number.parseInt(body, 16);\n      return {\n        type: \"rgb\",\n        components: body.length === 6 ? [value >> 16 & 255, value >> 8 & 255, value & 255] : [value >> 24 & 255, value >> 16 & 255, value >> 8 & 255],\n        alpha: body.length === 6 ? void 0 : Math.round((value & 255) / 255 * 100) / 100\n      };\n  }\n}\nfunction cssColorKeyword(str) {\n  const color = {\n    rebeccapurple: [102, 51, 153, 1]\n  }[str];\n  if (color != null) {\n    return {\n      type: \"rgb\",\n      components: color.slice(0, 3),\n      alpha: color[3]\n    };\n  }\n}\nfunction parseCssCommaColorFunction(color) {\n  const match = color.match(/^(rgb|rgba|hsl|hsla)\\((.+)\\)$/i);\n  if (!match)\n    return;\n  const [, type, componentString] = match;\n  const components = getComponents(componentString, \",\", 5);\n  if (components) {\n    if ([3, 4].includes(components.length)) {\n      return {\n        type,\n        components: components.slice(0, 3),\n        alpha: components[3]\n      };\n    } else if (components.length !== 1) {\n      return false;\n    }\n  }\n}\nconst cssColorFunctionsRe = new RegExp(`^(${cssColorFunctions.join(\"|\")})\\\\((.+)\\\\)$`, \"i\");\nfunction parseCssSpaceColorFunction(color) {\n  const match = color.match(cssColorFunctionsRe);\n  if (!match)\n    return;\n  const [, fn, componentString] = match;\n  const parsed = parseCssSpaceColorValues(`${fn} ${componentString}`);\n  if (parsed) {\n    const { alpha, components: [type, ...components] } = parsed;\n    return {\n      type,\n      components,\n      alpha\n    };\n  }\n}\nfunction parseCssColorFunction(color) {\n  const match = color.match(/^color\\((.+)\\)$/);\n  if (!match)\n    return;\n  const parsed = parseCssSpaceColorValues(match[1]);\n  if (parsed) {\n    const { alpha, components: [type, ...components] } = parsed;\n    return {\n      type,\n      components,\n      alpha\n    };\n  }\n}\nfunction parseCssSpaceColorValues(componentString) {\n  const components = getComponents(componentString);\n  if (!components)\n    return;\n  let totalComponents = components.length;\n  if (components[totalComponents - 2] === \"/\") {\n    return {\n      components: components.slice(0, totalComponents - 2),\n      alpha: components[totalComponents - 1]\n    };\n  }\n  if (components[totalComponents - 2] != null && (components[totalComponents - 2].endsWith(\"/\") || components[totalComponents - 1].startsWith(\"/\"))) {\n    const removed = components.splice(totalComponents - 2);\n    components.push(removed.join(\" \"));\n    --totalComponents;\n  }\n  const withAlpha = getComponents(components[totalComponents - 1], \"/\", 3);\n  if (!withAlpha)\n    return;\n  if (withAlpha.length === 1 || withAlpha[withAlpha.length - 1] === \"\")\n    return { components };\n  const alpha = withAlpha.pop();\n  components[totalComponents - 1] = withAlpha.join(\"/\");\n  return {\n    components,\n    alpha\n  };\n}\nfunction getComponent(str, separator) {\n  str = str.trim();\n  if (str === \"\")\n    return;\n  const l = str.length;\n  let parenthesis = 0;\n  for (let i = 0; i < l; i++) {\n    switch (str[i]) {\n      case \"(\":\n        parenthesis++;\n        break;\n      case \")\":\n        if (--parenthesis < 0)\n          return;\n        break;\n      case separator:\n        if (parenthesis === 0) {\n          const component = str.slice(0, i).trim();\n          if (component === \"\")\n            return;\n          return [\n            component,\n            str.slice(i + 1).trim()\n          ];\n        }\n    }\n  }\n  return [\n    str,\n    \"\"\n  ];\n}\nfunction getComponents(str, separator, limit) {\n  separator = separator ?? \" \";\n  if (separator.length !== 1)\n    return;\n  limit = limit ?? 10;\n  const components = [];\n  let i = 0;\n  while (str !== \"\") {\n    if (++i > limit)\n      return;\n    const componentPair = getComponent(str, separator);\n    if (!componentPair)\n      return;\n    const [component, rest] = componentPair;\n    components.push(component);\n    str = rest;\n  }\n  if (components.length > 0)\n    return components;\n}\n\nconst directionMap = {\n  \"l\": [\"-left\"],\n  \"r\": [\"-right\"],\n  \"t\": [\"-top\"],\n  \"b\": [\"-bottom\"],\n  \"s\": [\"-inline-start\"],\n  \"e\": [\"-inline-end\"],\n  \"x\": [\"-left\", \"-right\"],\n  \"y\": [\"-top\", \"-bottom\"],\n  \"\": [\"\"],\n  \"bs\": [\"-block-start\"],\n  \"be\": [\"-block-end\"],\n  \"is\": [\"-inline-start\"],\n  \"ie\": [\"-inline-end\"],\n  \"block\": [\"-block-start\", \"-block-end\"],\n  \"inline\": [\"-inline-start\", \"-inline-end\"]\n};\nconst insetMap = {\n  ...directionMap,\n  s: [\"-inset-inline-start\"],\n  e: [\"-inset-inline-end\"],\n  bs: [\"-inset-block-start\"],\n  be: [\"-inset-block-end\"],\n  is: [\"-inset-inline-start\"],\n  ie: [\"-inset-inline-end\"],\n  block: [\"-inset-block-start\", \"-inset-block-end\"],\n  inline: [\"-inset-inline-start\", \"-inset-inline-end\"]\n};\nconst cornerMap = {\n  \"l\": [\"-top-left\", \"-bottom-left\"],\n  \"r\": [\"-top-right\", \"-bottom-right\"],\n  \"t\": [\"-top-left\", \"-top-right\"],\n  \"b\": [\"-bottom-left\", \"-bottom-right\"],\n  \"tl\": [\"-top-left\"],\n  \"lt\": [\"-top-left\"],\n  \"tr\": [\"-top-right\"],\n  \"rt\": [\"-top-right\"],\n  \"bl\": [\"-bottom-left\"],\n  \"lb\": [\"-bottom-left\"],\n  \"br\": [\"-bottom-right\"],\n  \"rb\": [\"-bottom-right\"],\n  \"\": [\"\"],\n  \"bs\": [\"-start-start\", \"-start-end\"],\n  \"be\": [\"-end-start\", \"-end-end\"],\n  \"is\": [\"-end-start\", \"-start-start\"],\n  \"ie\": [\"-start-end\", \"-end-end\"],\n  \"bs-is\": [\"-start-start\"],\n  \"is-bs\": [\"-start-start\"],\n  \"bs-ie\": [\"-start-end\"],\n  \"ie-bs\": [\"-start-end\"],\n  \"be-is\": [\"-end-start\"],\n  \"is-be\": [\"-end-start\"],\n  \"be-ie\": [\"-end-end\"],\n  \"ie-be\": [\"-end-end\"]\n};\nconst xyzMap = {\n  \"x\": [\"-x\"],\n  \"y\": [\"-y\"],\n  \"z\": [\"-z\"],\n  \"\": [\"-x\", \"-y\"]\n};\nconst basePositionMap = [\n  \"top\",\n  \"top center\",\n  \"top left\",\n  \"top right\",\n  \"bottom\",\n  \"bottom center\",\n  \"bottom left\",\n  \"bottom right\",\n  \"left\",\n  \"left center\",\n  \"left top\",\n  \"left bottom\",\n  \"right\",\n  \"right center\",\n  \"right top\",\n  \"right bottom\",\n  \"center\",\n  \"center top\",\n  \"center bottom\",\n  \"center left\",\n  \"center right\",\n  \"center center\"\n];\nconst positionMap = Object.assign({}, ...basePositionMap.map((p) => ({ [p.replace(/ /, \"-\")]: p })), ...basePositionMap.map((p) => ({ [p.replace(/\\b(\\w)\\w+/g, \"$1\").replace(/ /, \"\")]: p })));\n\nconst cssProps = [\n  \"color\",\n  \"border-color\",\n  \"background-color\",\n  \"flex-grow\",\n  \"flex\",\n  \"flex-shrink\",\n  \"caret-color\",\n  \"font\",\n  \"gap\",\n  \"opacity\",\n  \"visibility\",\n  \"z-index\",\n  \"font-weight\",\n  \"zoom\",\n  \"text-shadow\",\n  \"transform\",\n  \"box-shadow\",\n  \"backround-position\",\n  \"left\",\n  \"right\",\n  \"top\",\n  \"bottom\",\n  \"object-position\",\n  \"max-height\",\n  \"min-height\",\n  \"max-width\",\n  \"min-width\",\n  \"height\",\n  \"width\",\n  \"border-width\",\n  \"margin\",\n  \"padding\",\n  \"outline-width\",\n  \"outline-offset\",\n  \"font-size\",\n  \"line-height\",\n  \"text-indent\",\n  \"vertical-align\",\n  \"border-spacing\",\n  \"letter-spacing\",\n  \"word-spacing\",\n  \"stroke\",\n  \"filter\",\n  \"backdrop-filter\",\n  \"fill\",\n  \"mask\",\n  \"mask-size\",\n  \"mask-border\",\n  \"clip-path\",\n  \"clip\",\n  \"border-radius\"\n];\nconst numberWithUnitRE = /^(-?[0-9.]+)(px|pt|pc|rem|em|%|vh|vw|in|cm|mm|ex|ch|vmin|vmax|rpx)?$/i;\nconst numberRE = /^(-?[0-9.]+)$/i;\nconst unitOnlyRE = /^(px)$/i;\nfunction round(n) {\n  return n.toFixed(10).replace(/\\.0+$/, \"\").replace(/(\\.\\d+?)0+$/, \"$1\");\n}\nfunction numberWithUnit(str) {\n  const match = str.match(numberWithUnitRE);\n  if (!match)\n    return;\n  const [, n, unit] = match;\n  const num = parseFloat(n);\n  if (unit && !Number.isNaN(num))\n    return `${round(num)}${unit}`;\n}\nfunction auto(str) {\n  if (str === \"auto\" || str === \"a\")\n    return \"auto\";\n}\nfunction rem(str) {\n  if (str.match(unitOnlyRE))\n    return `1${str}`;\n  const match = str.match(numberWithUnitRE);\n  if (!match)\n    return;\n  const [, n, unit] = match;\n  const num = parseFloat(n);\n  if (!Number.isNaN(num))\n    return unit ? `${round(num)}${unit}` : `${round(num / 4)}rem`;\n}\nfunction px(str) {\n  if (str.match(unitOnlyRE))\n    return `1${str}`;\n  const match = str.match(numberWithUnitRE);\n  if (!match)\n    return;\n  const [, n, unit] = match;\n  const num = parseFloat(n);\n  if (!Number.isNaN(num))\n    return unit ? `${round(num)}${unit}` : `${round(num)}px`;\n}\nfunction number(str) {\n  if (!numberRE.test(str))\n    return;\n  const num = parseFloat(str);\n  if (!Number.isNaN(num))\n    return round(num);\n}\nfunction percent(str) {\n  if (str.endsWith(\"%\"))\n    str = str.slice(0, -1);\n  const num = parseFloat(str);\n  if (!Number.isNaN(num))\n    return `${round(num / 100)}`;\n}\nfunction fraction(str) {\n  if (str === \"full\")\n    return \"100%\";\n  const [left, right] = str.split(\"/\");\n  const num = parseFloat(left) / parseFloat(right);\n  if (!Number.isNaN(num))\n    return `${round(num * 100)}%`;\n}\nfunction bracketWithType(str, type) {\n  if (str && str.startsWith(\"[\") && str.endsWith(\"]\")) {\n    let base;\n    const match = str.match(/^\\[(color|length):/i);\n    if (!match)\n      base = str.slice(1, -1);\n    else if (type && match[1] === type)\n      base = str.slice(match[0].length, -1);\n    if (base !== void 0) {\n      return base.replace(/(url\\(.*?\\))/g, (v) => v.replace(/_/g, \"\\\\_\")).replace(/([^\\\\])_/g, \"$1 \").replace(/calc\\((.*)/g, (v) => {\n        return v.replace(/(-?\\d*\\.?\\d(?!\\b-.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g, \"$1 $2 \");\n      });\n    }\n  }\n}\nfunction bracket(str) {\n  return bracketWithType(str);\n}\nfunction bracketOfColor(str) {\n  return bracketWithType(str, \"color\");\n}\nfunction bracketOfLength(str) {\n  return bracketWithType(str, \"length\");\n}\nfunction cssvar(str) {\n  if (str.match(/^\\$\\S/))\n    return `var(--${escapeSelector(str.slice(1))})`;\n}\nfunction time(str) {\n  const match = str.match(/^(-?[0-9.]+)(s|ms)?$/i);\n  if (!match)\n    return;\n  const [, n, unit] = match;\n  const num = parseFloat(n);\n  if (!Number.isNaN(num))\n    return unit ? `${round(num)}${unit}` : `${round(num)}ms`;\n}\nfunction degree(str) {\n  const match = str.match(/^(-?[0-9.]+)(deg|rad|grad|turn)?$/i);\n  if (!match)\n    return;\n  const [, n, unit] = match;\n  const num = parseFloat(n);\n  if (!Number.isNaN(num))\n    return unit ? `${round(num)}${unit}` : `${round(num)}deg`;\n}\nfunction global(str) {\n  if ([\"inherit\", \"initial\", \"revert\", \"unset\"].includes(str))\n    return str;\n}\nfunction properties(str) {\n  for (const prop of str.split(\",\")) {\n    if (!cssProps.includes(prop))\n      return;\n  }\n  return str;\n}\n\nconst valueHandlers = {\n  __proto__: null,\n  numberWithUnit: numberWithUnit,\n  auto: auto,\n  rem: rem,\n  px: px,\n  number: number,\n  percent: percent,\n  fraction: fraction,\n  bracket: bracket,\n  bracketOfColor: bracketOfColor,\n  bracketOfLength: bracketOfLength,\n  cssvar: cssvar,\n  time: time,\n  degree: degree,\n  global: global,\n  properties: properties\n};\n\nconst handler = createValueHandler(valueHandlers);\nconst h = handler;\n\nconst directionSize = (propertyPrefix) => ([_, direction, size], { theme }) => {\n  const v = theme.spacing?.[size || \"DEFAULT\"] ?? handler.bracket.cssvar.auto.fraction.rem(size);\n  if (v != null)\n    return directionMap[direction].map((i) => [`${propertyPrefix}${i}`, v]);\n};\nconst getThemeColor = (theme, colors) => theme.colors?.[colors.join(\"-\").replace(/(-[a-z])/g, (n) => n.slice(1).toUpperCase())];\nconst parseColor = (body, theme) => {\n  const split = body.split(/(?:\\/|:)/);\n  let main, opacity;\n  if (split[0] === \"[color\") {\n    main = split.slice(0, 2).join(\":\");\n    opacity = split[2];\n  } else {\n    [main, opacity] = split;\n  }\n  const colors = main.replace(/([a-z])([0-9])/g, \"$1-$2\").split(/-/g);\n  const [name] = colors;\n  if (!name)\n    return;\n  let color;\n  const bracket = handler.bracketOfColor(main);\n  const bracketOrMain = bracket || main;\n  if (bracketOrMain.startsWith(\"#\"))\n    color = bracketOrMain;\n  else if (bracketOrMain.startsWith(\"hex-\"))\n    color = `#${bracketOrMain.slice(4)}`;\n  else if (main.startsWith(\"$\"))\n    color = handler.cssvar(main);\n  color = color || bracket;\n  let no = \"DEFAULT\";\n  if (!color) {\n    let colorData;\n    const [scale] = colors.slice(-1);\n    if (scale.match(/^\\d+$/)) {\n      no = scale;\n      colorData = getThemeColor(theme, colors.slice(0, -1));\n    } else {\n      colorData = getThemeColor(theme, colors);\n      if (!colorData && colors.length <= 2) {\n        [, no = no] = colors;\n        colorData = getThemeColor(theme, [name]);\n      }\n    }\n    if (typeof colorData === \"string\")\n      color = colorData;\n    else if (no && colorData)\n      color = colorData[no];\n  }\n  return {\n    opacity,\n    name,\n    no,\n    color,\n    cssColor: parseCssColor(color),\n    alpha: handler.bracket.cssvar.percent(opacity ?? \"\")\n  };\n};\nconst colorResolver = (property, varName) => ([, body], { theme }) => {\n  const data = parseColor(body, theme);\n  if (!data)\n    return;\n  const { alpha, color, cssColor } = data;\n  if (cssColor) {\n    if (alpha != null) {\n      return {\n        [property]: colorToString(cssColor, alpha)\n      };\n    } else {\n      return {\n        [`--un-${varName}-opacity`]: cssColor.alpha ?? 1,\n        [property]: colorToString(cssColor, `var(--un-${varName}-opacity)`)\n      };\n    }\n  } else if (color) {\n    return {\n      [property]: color.replace(\"%alpha\", `${alpha ?? 1}`)\n    };\n  }\n};\nconst colorableShadows = (shadows, colorVar) => {\n  const colored = [];\n  shadows = toArray(shadows);\n  for (let i = 0; i < shadows.length; i++) {\n    const components = getComponents(shadows[i], \" \", 6);\n    if (!components || components.length < 3)\n      return shadows;\n    const color = parseCssColor(components.pop());\n    if (color == null)\n      return shadows;\n    colored.push(`${components.join(\" \")} var(${colorVar}, ${colorToString(color)})`);\n  }\n  return colored;\n};\nconst hasParseableColor = (color, theme) => {\n  return color != null && !!parseColor(color, theme)?.color;\n};\n\nexport { hasParseableColor as a, colorToString as b, colorResolver as c, directionMap as d, cornerMap as e, colorableShadows as f, directionSize as g, handler as h, insetMap as i, positionMap as j, hex2rgba as k, parseCssColor as l, getComponents as m, h as n, parseColor as p, valueHandlers as v, xyzMap as x };\n", "import { h as handler, c as colorResolver, d as directionMap, a as hasParseableColor, p as parseColor, b as colorToString, e as cornerMap, f as colorableShadows, i as insetMap, g as directionSize, j as positionMap, x as xyzMap } from './utilities.mjs';\nimport { toArray, CONTROL_SHORTCUT_NO_MERGE } from '@unocss/core';\n\nconst verticalAlignAlias = {\n  mid: \"middle\",\n  base: \"baseline\",\n  btm: \"bottom\"\n};\nconst verticalAligns = [\n  [/^(?:vertical|align|v)-(baseline|top|middle|bottom|text-top|text-bottom|sub|super|mid|base|btm)$/, ([, v]) => ({ \"vertical-align\": verticalAlignAlias[v] || v }), { autocomplete: \"(vertical|align|v)-(baseline|top|middle|bottom|text-top|text-bottom|sub|super|mid|base|btm)\" }]\n];\nconst textAligns = [\n  [\"text-center\", { \"text-align\": \"center\" }],\n  [\"text-left\", { \"text-align\": \"left\" }],\n  [\"text-right\", { \"text-align\": \"right\" }],\n  [\"text-justify\", { \"text-align\": \"justify\" }]\n];\n\nconst outline = [\n  [/^outline-(?:width-|size-)?(.+)$/, ([, d], { theme }) => ({ \"outline-width\": theme.lineWidth?.[d] ?? handler.bracket.cssvar.px(d) }), { autocomplete: \"outline-(width|size)-<num>\" }],\n  [/^outline-(?:color-)?(.+)$/, colorResolver(\"outline-color\", \"outline-color\"), { autocomplete: \"outline-$colors\" }],\n  [/^outline-offset-(.+)$/, ([, d], { theme }) => ({ \"outline-offset\": theme.lineWidth?.[d] ?? handler.bracket.cssvar.px(d) }), { autocomplete: \"outline-(offset)-<num>\" }],\n  [\"outline\", { \"outline-style\": \"solid\" }],\n  [/^outline-(auto|dashed|dotted|double|hidden|solid|groove|ridge|inset|outset|inherit|initial|revert|unset)$/, ([, c]) => ({ \"outline-style\": c }), { autocomplete: \"outline-(auto|dashed|dotted|double|hidden|solid|groove|ridge|inset|outset|inherit|initial|revert|unset)\" }],\n  [\"outline-none\", { \"outline\": \"2px solid transparent\", \"outline-offset\": \"2px\" }]\n];\nconst appearance = [\n  [\"appearance-none\", {\n    \"appearance\": \"none\",\n    \"-webkit-appearance\": \"none\"\n  }]\n];\nconst willChangeProperty = (prop) => {\n  return handler.properties.auto.global(prop) ?? {\n    contents: \"contents\",\n    scroll: \"scroll-position\"\n  }[prop];\n};\nconst willChange = [\n  [/^will-change-(.+)/, ([, p]) => ({ \"will-change\": willChangeProperty(p) })]\n];\n\nconst borders = [\n  [/^(?:border|b)()(?:-(.+))?$/, handlerBorder, { autocomplete: \"(border|b)-<directions>\" }],\n  [/^(?:border|b)-([xy])(?:-(.+))?$/, handlerBorder],\n  [/^(?:border|b)-([rltbse])(?:-(.+))?$/, handlerBorder],\n  [/^(?:border|b)-(block|inline)(?:-(.+))?$/, handlerBorder],\n  [/^(?:border|b)-([bi][se])(?:-(.+))?$/, handlerBorder],\n  [/^(?:border|b)-()(?:width|size)-(.+)$/, handlerBorderSize, { autocomplete: [\"(border|b)-<num>\", \"(border|b)-<directions>-<num>\"] }],\n  [/^(?:border|b)-([xy])-(?:width|size)-(.+)$/, handlerBorderSize],\n  [/^(?:border|b)-([rltbse])-(?:width|size)-(.+)$/, handlerBorderSize],\n  [/^(?:border|b)-(block|inline)-(?:width|size)-(.+)$/, handlerBorderSize],\n  [/^(?:border|b)-([bi][se])-(?:width|size)-(.+)$/, handlerBorderSize],\n  [/^(?:border|b)-()(?:color-)?(.+)$/, handlerBorderColor, { autocomplete: [\"(border|b)-$colors\", \"(border|b)-<directions>-$colors\"] }],\n  [/^(?:border|b)-([xy])-(?:color-)?(.+)$/, handlerBorderColor],\n  [/^(?:border|b)-([rltbse])-(?:color-)?(.+)$/, handlerBorderColor],\n  [/^(?:border|b)-(block|inline)-(?:color-)?(.+)$/, handlerBorderColor],\n  [/^(?:border|b)-([bi][se])-(?:color-)?(.+)$/, handlerBorderColor],\n  [/^(?:border|b)-()op(?:acity)?-?(.+)$/, handlerBorderOpacity, { autocomplete: \"(border|b)-(op|opacity)-<percent>\" }],\n  [/^(?:border|b)-([xy])-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  [/^(?:border|b)-([rltbse])-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  [/^(?:border|b)-(block|inline)-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  [/^(?:border|b)-([bi][se])-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  [/^(?:border-|b-)?(?:rounded|rd)()(?:-(.+))?$/, handlerRounded, { autocomplete: [\"(border|b)-(rounded|rd)\", \"(border|b)-(rounded|rd)-<num>\", \"(rounded|rd)\", \"(rounded|rd)-<num>\"] }],\n  [/^(?:border-|b-)?(?:rounded|rd)-([rltb])(?:-(.+))?$/, handlerRounded],\n  [/^(?:border-|b-)?(?:rounded|rd)-([rltb]{2})(?:-(.+))?$/, handlerRounded],\n  [/^(?:border-|b-)?(?:rounded|rd)-([bi][se])(?:-(.+))?$/, handlerRounded],\n  [/^(?:border-|b-)?(?:rounded|rd)-([bi][se]-[bi][se])(?:-(.+))?$/, handlerRounded],\n  [\"border-solid\", { \"border-style\": \"solid\" }],\n  [\"border-dashed\", { \"border-style\": \"dashed\" }],\n  [\"border-dotted\", { \"border-style\": \"dotted\" }],\n  [\"border-double\", { \"border-style\": \"double\" }],\n  [\"border-hidden\", { \"border-style\": \"hidden\" }],\n  [\"border-none\", { \"border-style\": \"none\" }]\n];\nconst borderColorResolver = (direction) => ([, body], theme) => {\n  const data = parseColor(body, theme);\n  if (!data)\n    return;\n  const { alpha, color, cssColor } = data;\n  if (cssColor) {\n    if (alpha != null) {\n      return {\n        [`border${direction}-color`]: colorToString(cssColor, alpha)\n      };\n    }\n    if (direction === \"\") {\n      return {\n        \"--un-border-opacity\": cssColor.alpha ?? 1,\n        [`border${direction}-color`]: colorToString(cssColor, `var(--un-border${direction}-opacity)`)\n      };\n    } else {\n      return {\n        \"--un-border-opacity\": cssColor.alpha ?? 1,\n        [`--un-border${direction}-opacity`]: \"var(--un-border-opacity)\",\n        [`border${direction}-color`]: colorToString(cssColor, `var(--un-border${direction}-opacity)`)\n      };\n    }\n  } else if (color) {\n    return {\n      [`border${direction}-color`]: color.replace(\"%alpha\", `${alpha ?? 1}`)\n    };\n  }\n};\nfunction handlerBorder(m, ctx) {\n  const borderSizes = handlerBorderSize(m, ctx);\n  if (borderSizes) {\n    return [\n      ...borderSizes,\n      [\"border-style\", \"solid\"]\n    ];\n  }\n}\nfunction handlerBorderSize([, a = \"\", b], { theme }) {\n  const v = theme.lineWidth?.[b || \"DEFAULT\"] ?? handler.bracket.cssvar.px(b || \"1\");\n  if (a in directionMap && v != null)\n    return directionMap[a].map((i) => [`border${i}-width`, v]);\n}\nfunction handlerBorderColor([, a = \"\", c], { theme }) {\n  if (a in directionMap && hasParseableColor(c, theme)) {\n    return Object.assign({}, ...directionMap[a].map((i) => borderColorResolver(i)([\"\", c], theme)));\n  }\n}\nfunction handlerBorderOpacity([, a = \"\", opacity]) {\n  const v = handler.bracket.percent(opacity);\n  if (a in directionMap && v != null)\n    return directionMap[a].map((i) => [`--un-border${i}-opacity`, v]);\n}\nfunction handlerRounded([, a = \"\", s], { theme }) {\n  const v = theme.borderRadius?.[s || \"DEFAULT\"] || handler.bracket.cssvar.fraction.rem(s || \"1\");\n  if (a in cornerMap && v != null)\n    return cornerMap[a].map((i) => [`border${i}-radius`, v]);\n}\n\nconst opacity = [\n  [/^op(?:acity)?-?(.+)$/, ([, d]) => ({ opacity: handler.bracket.percent.cssvar(d) })]\n];\nconst textColors = [\n  [/^(?:text|color|c)-(.+)$/, colorResolver(\"color\", \"text\"), { autocomplete: \"(text|color|c)-$colors\" }],\n  [/^(?:text|color|c)-op(?:acity)?-?(.+)$/, ([, opacity2]) => ({ \"--un-text-opacity\": handler.bracket.percent(opacity2) }), { autocomplete: \"(text|color|c)-(op|opacity)-<percent>\" }]\n];\nconst bgColors = [\n  [/^bg-(.+)$/, colorResolver(\"background-color\", \"bg\"), { autocomplete: \"bg-$colors\" }],\n  [/^bg-op(?:acity)?-?(.+)$/, ([, opacity2]) => ({ \"--un-bg-opacity\": handler.bracket.percent(opacity2) }), { autocomplete: \"bg-(op|opacity)-<percent>\" }]\n];\n\nconst transitionPropertyGroup = {\n  all: \"all\",\n  colors: [\"color\", \"background-color\", \"border-color\", \"text-decoration-color\", \"fill\", \"stroke\"].join(\",\"),\n  none: \"none\",\n  opacity: \"opacity\",\n  shadow: \"box-shadow\",\n  transform: \"transform\"\n};\nconst transitionProperty = (prop) => {\n  return handler.properties(prop) ?? transitionPropertyGroup[prop];\n};\nconst transitions = [\n  [/^transition(?:-([a-z-]+(?:,[a-z-]+)*))?(?:-(\\d+))?$/, ([, prop, d], { theme }) => {\n    const p = prop != null ? transitionProperty(prop) : [transitionPropertyGroup.colors, \"opacity\", \"box-shadow\", \"transform\", \"filter\", \"backdrop-filter\"].join(\",\");\n    if (p) {\n      const duration = theme.duration?.[d || \"DEFAULT\"] ?? handler.time(d || \"150\");\n      return {\n        \"transition-property\": p,\n        \"transition-timing-function\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n        \"transition-duration\": duration\n      };\n    }\n  }, { autocomplete: `transition-(${Object.keys(transitionPropertyGroup).join(\"|\")})` }],\n  [\n    /^(?:transition-)?duration-(.+)$/,\n    ([, d], { theme }) => ({ \"transition-duration\": theme.duration?.[d || \"DEFAULT\"] ?? handler.bracket.cssvar.time(d) }),\n    { autocomplete: [\"transition-duration-$duration\", \"duration-$duration\"] }\n  ],\n  [\n    /^(?:transition-)?delay-(.+)$/,\n    ([, d], { theme }) => ({ \"transition-delay\": theme.duration?.[d || \"DEFAULT\"] ?? handler.bracket.cssvar.time(d) }),\n    { autocomplete: [\"transition-delay-$duration\", \"delay-$duration\"] }\n  ],\n  [\n    /^(?:transition-)?ease(?:-(.+))?$/,\n    ([, d], { theme }) => ({ \"transition-timing-function\": theme.easing?.[d || \"DEFAULT\"] ?? handler.bracket.cssvar(d) }),\n    { autocomplete: [\"transition-ease-(linear|in|out|in-out|DEFAULT)\", \"ease-(linear|in|out|in-out|DEFAULT)\"] }\n  ],\n  [\n    /^(?:transition-)?property-(.+)$/,\n    ([, v]) => ({ \"transition-property\": handler.global(v) || transitionProperty(v) }),\n    { autocomplete: [`transition-property-(${[\"inherit\", \"initial\", \"revert\", \"unset\", ...Object.keys(transitionPropertyGroup)].join(\"|\")})`] }\n  ],\n  [\"transition-none\", { transition: \"none\" }]\n];\n\nconst flex = [\n  [\"flex\", { display: \"flex\" }],\n  [\"inline-flex\", { display: \"inline-flex\" }],\n  [\"flex-inline\", { display: \"inline-flex\" }],\n  [/^flex-(.*)$/, ([, d]) => ({ flex: handler.bracket(d) != null ? handler.bracket(d).split(\" \").map((e) => handler.cssvar.fraction(e) ?? e).join(\" \") : handler.cssvar.fraction(d) })],\n  [\"flex-1\", { flex: \"1 1 0%\" }],\n  [\"flex-auto\", { flex: \"1 1 auto\" }],\n  [\"flex-initial\", { flex: \"0 1 auto\" }],\n  [\"flex-none\", { flex: \"none\" }],\n  [/^(?:flex-)?shrink$/, () => ({ \"flex-shrink\": 1 })],\n  [/^(?:flex-)?shrink-0$/, () => ({ \"flex-shrink\": 0 })],\n  [/^(?:flex-)?grow$/, () => ({ \"flex-grow\": 1 })],\n  [/^(?:flex-)?grow-0$/, () => ({ \"flex-grow\": 0 })],\n  [/^(?:flex-)?basis-(.+)$/, ([, d], { theme }) => ({ \"flex-basis\": theme.spacing?.[d] ?? handler.bracket.cssvar.auto.fraction.rem(d) })],\n  [\"flex-row\", { \"flex-direction\": \"row\" }],\n  [\"flex-row-reverse\", { \"flex-direction\": \"row-reverse\" }],\n  [\"flex-col\", { \"flex-direction\": \"column\" }],\n  [\"flex-col-reverse\", { \"flex-direction\": \"column-reverse\" }],\n  [\"flex-wrap\", { \"flex-wrap\": \"wrap\" }],\n  [\"flex-wrap-reverse\", { \"flex-wrap\": \"wrap-reverse\" }],\n  [\"flex-nowrap\", { \"flex-wrap\": \"nowrap\" }]\n];\n\nconst weightMap = {\n  thin: \"100\",\n  extralight: \"200\",\n  light: \"300\",\n  normal: \"400\",\n  medium: \"500\",\n  semibold: \"600\",\n  bold: \"700\",\n  extrabold: \"800\",\n  black: \"900\"\n};\nconst fonts = [\n  [\n    /^font-(\\w+)$/,\n    ([, d], { theme }) => ({ \"font-family\": theme.fontFamily?.[d] || handler.global(d) }),\n    { autocomplete: \"font-$fontFamily\" }\n  ],\n  [\n    /^text-(.+)$/,\n    ([, s = \"base\"], { theme }) => {\n      const themed = toArray(theme.fontSize?.[s]);\n      if (themed?.[0]) {\n        const [size, height = \"1\"] = themed;\n        return {\n          \"font-size\": size,\n          \"line-height\": height\n        };\n      }\n      return { \"font-size\": handler.bracketOfLength.rem(s) };\n    },\n    { autocomplete: \"text-$fontSize\" }\n  ],\n  [/^text-size-(.+)$/, ([, s], { theme }) => {\n    const themed = toArray(theme.fontSize?.[s]);\n    const size = themed?.[0] ?? handler.bracket.cssvar.rem(s);\n    if (size != null)\n      return { \"font-size\": size };\n  }, { autocomplete: \"text-size-$fontSize\" }],\n  [\n    /^(?:font|fw)-?([^-]+)$/,\n    ([, s]) => ({ \"font-weight\": weightMap[s] || handler.global.number(s) }),\n    { autocomplete: `(font|fw)-(100|200|300|400|500|600|700|800|900|${Object.keys(weightMap).join(\"|\")})` }\n  ],\n  [\n    /^(?:leading|lh)-(.+)$/,\n    ([, s], { theme }) => ({ \"line-height\": theme.lineHeight?.[s] || handler.bracket.cssvar.global.rem(s) }),\n    { autocomplete: \"(leading|lh)-$lineHeight\" }\n  ],\n  [\n    /^tracking-(.+)$/,\n    ([, s], { theme }) => ({ \"letter-spacing\": theme.letterSpacing?.[s] || handler.bracket.cssvar.global.rem(s) }),\n    { autocomplete: \"tracking-$letterSpacing\" }\n  ],\n  [\n    /^word-spacing-(.+)$/,\n    ([, s], { theme }) => ({ \"word-spacing\": theme.wordSpacing?.[s] || handler.bracket.cssvar.global.rem(s) }),\n    { autocomplete: \"word-spacing-$wordSpacing\" }\n  ]\n];\nconst tabSizes = [\n  [/^tab(?:-(.+))?$/, ([, s]) => {\n    const v = handler.bracket.cssvar.global.number(s || \"4\");\n    if (v != null) {\n      return {\n        \"-moz-tab-size\": v,\n        \"-o-tab-size\": v,\n        \"tab-size\": v\n      };\n    }\n  }]\n];\nconst textIndents = [\n  [/^indent(?:-(.+))?$/, ([, s], { theme }) => ({ \"text-indent\": theme.textIndent?.[s || \"DEFAULT\"] || handler.bracket.cssvar.global.fraction.rem(s) }), { autocomplete: \"indent-$textIndent\" }]\n];\nconst textStrokes = [\n  [/^text-stroke(?:-(.+))?$/, ([, s], { theme }) => ({ \"-webkit-text-stroke-width\": theme.textStrokeWidth?.[s || \"DEFAULT\"] || handler.bracket.cssvar.px(s) }), { autocomplete: \"text-stroke-$textStrokeWidth\" }],\n  [/^text-stroke-(.+)$/, colorResolver(\"-webkit-text-stroke-color\", \"text-stroke\"), { autocomplete: \"text-stroke-$colors\" }],\n  [/^text-stroke-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-text-stroke-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"text-stroke-(op|opacity)-<percent>\" }]\n];\nconst textShadows = [\n  [/^text-shadow(?:-(.+))?$/, ([, s], { theme }) => {\n    const v = theme.textShadow?.[s || \"DEFAULT\"];\n    if (v != null) {\n      return {\n        \"--un-text-shadow\": colorableShadows(v, \"--un-text-shadow-color\").join(\",\"),\n        \"text-shadow\": \"var(--un-text-shadow)\"\n      };\n    }\n    return { \"text-shadow\": handler.bracket.cssvar(s) };\n  }, { autocomplete: \"text-shadow-$textShadow\" }],\n  [/^text-shadow-color-(.+)$/, colorResolver(\"--un-text-shadow-color\", \"text-shadow\"), { autocomplete: \"text-shadow-color-$colors\" }],\n  [/^text-shadow-color-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-text-shadow-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"text-shadow-color-(op|opacity)-<percent>\" }]\n];\n\nconst directions = {\n  \"\": \"\",\n  \"x\": \"column-\",\n  \"y\": \"row-\"\n};\nconst handleGap = ([, d = \"\", s], { theme }) => {\n  const v = theme.spacing?.[s] ?? handler.bracket.cssvar.rem(s);\n  if (v != null) {\n    return {\n      [`grid-${directions[d]}gap`]: v,\n      [`${directions[d]}gap`]: v\n    };\n  }\n};\nconst gaps = [\n  [/^(?:flex-|grid-)?gap-?()(.+)$/, handleGap, { autocomplete: [\"gap-$spacing\", \"gap-<num>\"] }],\n  [/^(?:flex-|grid-)?gap-([xy])-?(.+)$/, handleGap, { autocomplete: [\"gap-(x|y)-$spacing\", \"gap-(x|y)-<num>\"] }]\n];\n\nconst rowCol = (s) => s.replace(\"col\", \"column\");\nconst rowColTheme = (s) => s[0] === \"r\" ? \"Row\" : \"Column\";\nconst autoDirection = (c, theme, prop) => {\n  const v = theme[`gridAuto${rowColTheme(c)}`]?.[prop];\n  if (v != null)\n    return v;\n  switch (prop) {\n    case \"min\":\n      return \"min-content\";\n    case \"max\":\n      return \"max-content\";\n    case \"fr\":\n      return \"minmax(0,1fr)\";\n  }\n  return handler.bracket.cssvar.auto.rem(prop);\n};\nconst grids = [\n  [\"grid\", { display: \"grid\" }],\n  [\"inline-grid\", { display: \"inline-grid\" }],\n  [/^(?:grid-)?(row|col)-(.+)$/, ([, c, v], { theme }) => ({\n    [`grid-${rowCol(c)}`]: theme[`grid${rowColTheme(c)}`]?.[v] ?? handler.bracket.cssvar.auto(v)\n  })],\n  [/^(?:grid-)?(row|col)-span-(.+)$/, ([, c, s]) => {\n    if (s === \"full\")\n      return { [`grid-${rowCol(c)}`]: \"1/-1\" };\n    const v = handler.bracket.number(s);\n    if (v != null)\n      return { [`grid-${rowCol(c)}`]: `span ${v}/span ${v}` };\n  }, { autocomplete: [\"grid-(row|col)-span-<num>\", \"(row|col)-span-<num>\"] }],\n  [/^(?:grid-)?(row|col)-start-(.+)$/, ([, c, v]) => ({ [`grid-${rowCol(c)}-start`]: handler.bracket.cssvar(v) ?? v })],\n  [/^(?:grid-)?(row|col)-end-(.+)$/, ([, c, v]) => ({ [`grid-${rowCol(c)}-end`]: handler.bracket.cssvar(v) ?? v })],\n  [/^(?:grid-)?auto-(rows|cols)-(.+)$/, ([, c, v], { theme }) => ({ [`grid-auto-${rowCol(c)}`]: autoDirection(c, theme, v) })],\n  [/^(?:grid-auto-flow|auto-flow|grid-flow)-(.+)$/, ([, v]) => ({ \"grid-auto-flow\": handler.bracket.cssvar(v) })],\n  [/^(?:grid-auto-flow|auto-flow|grid-flow)-((?:row|col)(?:-dense)?)$/, ([, v]) => ({ \"grid-auto-flow\": rowCol(v).replace(\"-\", \" \") })],\n  [/^grid-(rows|cols)-(.+)$/, ([, c, v], { theme }) => ({\n    [`grid-template-${rowCol(c)}`]: theme[`gridTemplate${rowColTheme(c)}`]?.[v] ?? handler.bracket.cssvar(v)\n  })],\n  [/^grid-(rows|cols)-minmax-([\\w.-]+)$/, ([, c, d]) => ({ [`grid-template-${rowCol(c)}`]: `repeat(auto-fill,minmax(${d},1fr))` })],\n  [/^grid-(rows|cols)-(\\d+)$/, ([, c, d]) => ({ [`grid-template-${rowCol(c)}`]: `repeat(${d},minmax(0,1fr))` })],\n  [\"grid-rows-none\", { \"grid-template-rows\": \"none\" }],\n  [\"grid-cols-none\", { \"grid-template-columns\": \"none\" }]\n];\n\nconst overflowValues = [\n  \"auto\",\n  \"hidden\",\n  \"clip\",\n  \"visible\",\n  \"scroll\"\n];\nconst overflows = [\n  [/^(?:overflow|of)-(.+)$/, ([, v]) => overflowValues.includes(v) ? { overflow: v } : void 0, { autocomplete: [`(overflow|of)-${overflowValues.join(\"|\")}`, `(overflow|of)-(x|y)-${overflowValues.join(\"|\")}`] }],\n  [/^(?:overflow|of)-([xy])-(.+)$/, ([, d, v]) => overflowValues.includes(v) ? { [`overflow-${d}`]: v } : void 0]\n];\n\nconst positions = [\n  [/^(?:position-|pos-)?(relative|absolute|fixed|sticky)$/, ([, v]) => ({ position: v })],\n  [/^(?:position-|pos-)?(static)$/, ([, v]) => ({ position: v })]\n];\nconst justifies = [\n  [\"justify-start\", { \"justify-content\": \"flex-start\" }],\n  [\"justify-end\", { \"justify-content\": \"flex-end\" }],\n  [\"justify-center\", { \"justify-content\": \"center\" }],\n  [\"justify-between\", { \"justify-content\": \"space-between\" }],\n  [\"justify-around\", { \"justify-content\": \"space-around\" }],\n  [\"justify-evenly\", { \"justify-content\": \"space-evenly\" }],\n  [\"justify-items-start\", { \"justify-items\": \"start\" }],\n  [\"justify-items-end\", { \"justify-items\": \"end\" }],\n  [\"justify-items-center\", { \"justify-items\": \"center\" }],\n  [\"justify-items-stretch\", { \"justify-items\": \"stretch\" }],\n  [\"justify-self-auto\", { \"justify-self\": \"auto\" }],\n  [\"justify-self-start\", { \"justify-self\": \"start\" }],\n  [\"justify-self-end\", { \"justify-self\": \"end\" }],\n  [\"justify-self-center\", { \"justify-self\": \"center\" }],\n  [\"justify-self-stretch\", { \"justify-self\": \"stretch\" }]\n];\nconst orders = [\n  [/^order-(.+)$/, ([, v]) => ({ order: handler.bracket.cssvar.number(v) })],\n  [\"order-first\", { order: \"-9999\" }],\n  [\"order-last\", { order: \"9999\" }],\n  [\"order-none\", { order: \"0\" }]\n];\nconst alignments = [\n  [\"content-center\", { \"align-content\": \"center\" }],\n  [\"content-start\", { \"align-content\": \"flex-start\" }],\n  [\"content-end\", { \"align-content\": \"flex-end\" }],\n  [\"content-between\", { \"align-content\": \"space-between\" }],\n  [\"content-around\", { \"align-content\": \"space-around\" }],\n  [\"content-evenly\", { \"align-content\": \"space-evenly\" }],\n  [\"items-start\", { \"align-items\": \"flex-start\" }],\n  [\"items-end\", { \"align-items\": \"flex-end\" }],\n  [\"items-center\", { \"align-items\": \"center\" }],\n  [\"items-baseline\", { \"align-items\": \"baseline\" }],\n  [\"items-stretch\", { \"align-items\": \"stretch\" }],\n  [\"self-auto\", { \"align-self\": \"auto\" }],\n  [\"self-start\", { \"align-self\": \"flex-start\" }],\n  [\"self-end\", { \"align-self\": \"flex-end\" }],\n  [\"self-center\", { \"align-self\": \"center\" }],\n  [\"self-stretch\", { \"align-self\": \"stretch\" }],\n  [\"self-baseline\", { \"align-self\": \"baseline\" }]\n];\nconst placements = [\n  [\"place-content-center\", { \"place-content\": \"center\" }],\n  [\"place-content-start\", { \"place-content\": \"start\" }],\n  [\"place-content-end\", { \"place-content\": \"end\" }],\n  [\"place-content-between\", { \"place-content\": \"space-between\" }],\n  [\"place-content-around\", { \"place-content\": \"space-around\" }],\n  [\"place-content-evenly\", { \"place-content\": \"space-evenly\" }],\n  [\"place-content-stretch\", { \"place-content\": \"stretch\" }],\n  [\"place-items-start\", { \"place-items\": \"start\" }],\n  [\"place-items-end\", { \"place-items\": \"end\" }],\n  [\"place-items-center\", { \"place-items\": \"center\" }],\n  [\"place-items-stretch\", { \"place-items\": \"stretch\" }],\n  [\"place-self-auto\", { \"place-self\": \"auto\" }],\n  [\"place-self-start\", { \"place-self\": \"start\" }],\n  [\"place-self-end\", { \"place-self\": \"end\" }],\n  [\"place-self-center\", { \"place-self\": \"center\" }],\n  [\"place-self-stretch\", { \"place-self\": \"stretch\" }]\n];\nfunction handleInsetValue(v, { theme }) {\n  return theme.spacing?.[v] ?? handler.bracket.cssvar.auto.fraction.rem(v);\n}\nfunction handleInsetValues([, d, v], ctx) {\n  const r = handleInsetValue(v, ctx);\n  if (r != null && d in insetMap)\n    return insetMap[d].map((i) => [i.slice(1), r]);\n}\nconst insets = [\n  [\n    /^(?:position-|pos-)?inset-(.+)$/,\n    ([, v], ctx) => ({ inset: handleInsetValue(v, ctx) }),\n    {\n      autocomplete: [\n        \"(position|pos)-inset-<directions>-$spacing\",\n        \"(position|pos)-inset-(block|inline)-$spacing\",\n        \"(position|pos)-inset-(bs|be|is|ie)-$spacing\",\n        \"(position|pos)-(top|left|right|bottom)-$spacing\"\n      ]\n    }\n  ],\n  [/^(?:position-|pos-)?inset-([xy])-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?inset-([rltbse])-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?inset-(block|inline)-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?inset-([bi][se])-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?(top|left|right|bottom)-(.+)$/, ([, d, v], ctx) => ({ [d]: handleInsetValue(v, ctx) })]\n];\nconst floats = [\n  [\"float-left\", { float: \"left\" }],\n  [\"float-right\", { float: \"right\" }],\n  [\"float-none\", { float: \"none\" }],\n  [\"clear-left\", { clear: \"left\" }],\n  [\"clear-right\", { clear: \"right\" }],\n  [\"clear-both\", { clear: \"both\" }],\n  [\"clear-none\", { clear: \"none\" }]\n];\nconst zIndexes = [\n  [/^z([\\d.]+)$/, ([, v]) => ({ \"z-index\": handler.number(v) })],\n  [/^z-(.+)$/, ([, v]) => ({ \"z-index\": handler.bracket.cssvar.auto.number(v) }), { autocomplete: \"z-<num>\" }]\n];\nconst boxSizing = [\n  [\"box-border\", { \"box-sizing\": \"border-box\" }],\n  [\"box-content\", { \"box-sizing\": \"content-box\" }]\n];\n\nconst varEmpty = \"var(--un-empty,/*!*/ /*!*/)\";\nconst displays = [\n  [\"inline\", { display: \"inline\" }],\n  [\"block\", { display: \"block\" }],\n  [\"inline-block\", { display: \"inline-block\" }],\n  [\"contents\", { display: \"contents\" }],\n  [\"flow-root\", { display: \"flow-root\" }],\n  [\"list-item\", { display: \"list-item\" }],\n  [\"hidden\", { display: \"none\" }],\n  [/^display-(.+)$/, ([, c]) => ({ display: handler.bracket.cssvar(c) || c })]\n];\nconst appearances = [\n  [\"visible\", { visibility: \"visible\" }],\n  [\"invisible\", { visibility: \"hidden\" }],\n  [\"backface-visible\", { \"backface-visibility\": \"visible\" }],\n  [\"backface-hidden\", { \"backface-visibility\": \"hidden\" }]\n];\nconst cursors = [\n  [/^cursor-(.+)$/, ([, c]) => ({ cursor: handler.bracket.cssvar(c) || c })]\n];\nconst pointerEvents = [\n  [\"pointer-events-auto\", { \"pointer-events\": \"auto\" }],\n  [\"pointer-events-none\", { \"pointer-events\": \"none\" }]\n];\nconst resizes = [\n  [\"resize-x\", { resize: \"horizontal\" }],\n  [\"resize-y\", { resize: \"vertical\" }],\n  [\"resize\", { resize: \"both\" }],\n  [\"resize-none\", { resize: \"none\" }]\n];\nconst userSelects = [\n  [\"select-auto\", { \"user-select\": \"auto\" }],\n  [\"select-all\", { \"user-select\": \"all\" }],\n  [\"select-text\", { \"user-select\": \"text\" }],\n  [\"select-none\", { \"user-select\": \"none\" }]\n];\nconst whitespaces = [\n  [/^(?:whitespace|ws)-(normal|nowrap|pre|pre-line|pre-wrap)$/, ([, v]) => ({ \"white-space\": v }), { autocomplete: \"(whitespace|ws)-(normal|nowrap|pre|pre-line|pre-wrap)\" }]\n];\nconst contents = [\n  [/^content-\\[(.+)\\]$/, ([, v]) => ({ content: `\"${v}\"` })],\n  [\"content-empty\", { content: '\"\"' }],\n  [\"content-none\", { content: '\"\"' }]\n];\nconst breaks = [\n  [\"break-normal\", { \"overflow-wrap\": \"normal\", \"word-break\": \"normal\" }],\n  [\"break-words\", { \"overflow-wrap\": \"break-word\" }],\n  [\"break-all\", { \"word-break\": \"break-all\" }]\n];\nconst textOverflows = [\n  [\"truncate\", { \"overflow\": \"hidden\", \"text-overflow\": \"ellipsis\", \"white-space\": \"nowrap\" }],\n  [\"text-ellipsis\", { \"text-overflow\": \"ellipsis\" }],\n  [\"text-clip\", { \"text-overflow\": \"clip\" }]\n];\nconst textTransforms = [\n  [\"case-upper\", { \"text-transform\": \"uppercase\" }],\n  [\"case-lower\", { \"text-transform\": \"lowercase\" }],\n  [\"case-capital\", { \"text-transform\": \"capitalize\" }],\n  [\"case-normal\", { \"text-transform\": \"none\" }]\n];\nconst fontStyles = [\n  [\"italic\", { \"font-style\": \"italic\" }],\n  [\"not-italic\", { \"font-style\": \"normal\" }]\n];\nconst fontSmoothings = [\n  [\"antialiased\", {\n    \"-webkit-font-smoothing\": \"antialiased\",\n    \"-moz-osx-font-smoothing\": \"grayscale\",\n    \"font-smoothing\": \"grayscale\"\n  }],\n  [\"subpixel-antialiased\", {\n    \"-webkit-font-smoothing\": \"auto\",\n    \"-moz-osx-font-smoothing\": \"auto\",\n    \"font-smoothing\": \"auto\"\n  }]\n];\n\nconst rings = [\n  [/^ring(?:-(.+))?$/, ([, d], { theme }) => {\n    const value = theme.ringWidth?.[d || \"DEFAULT\"] ?? handler.px(d || \"1\");\n    if (value) {\n      return [\n        {\n          [CONTROL_SHORTCUT_NO_MERGE]: \"\",\n          \"--un-ring-inset\": varEmpty,\n          \"--un-ring-offset-width\": \"0px\",\n          \"--un-ring-offset-color\": \"#fff\",\n          \"--un-ring-width\": \"0px\",\n          \"--un-ring-color\": \"rgba(147,197,253,0.5)\"\n        },\n        {\n          \"--un-ring-width\": value,\n          \"--un-ring-offset-shadow\": \"var(--un-ring-inset) 0 0 0 var(--un-ring-offset-width) var(--un-ring-offset-color)\",\n          \"--un-ring-shadow\": \"var(--un-ring-inset) 0 0 0 calc(var(--un-ring-width) + var(--un-ring-offset-width)) var(--un-ring-color)\",\n          \"box-shadow\": \"var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow, 0 0 #0000)\"\n        }\n      ];\n    }\n  }, { autocomplete: \"ring-$ringWidth\" }],\n  [/^ring-(?:width-|size-)(.+)$/, ([, d], { theme }) => ({ \"--un-ring-width\": theme.lineWidth?.[d] ?? handler.bracket.cssvar.px(d) }), { autocomplete: \"ring-(width|size)-$lineWidth\" }],\n  [\"ring-offset\", { \"--un-ring-offset-width\": \"1px\" }],\n  [/^ring-offset-(?:width-|size-)?(.+)$/, ([, d], { theme }) => ({ \"--un-ring-offset-width\": theme.lineWidth?.[d] ?? handler.bracket.cssvar.px(d) }), { autocomplete: \"ring-offset-(width|size)-$lineWidth\" }],\n  [/^ring-(.+)$/, colorResolver(\"--un-ring-color\", \"ring\"), { autocomplete: \"ring-$colors\" }],\n  [/^ring-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-ring-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"ring-(op|opacity)-<percent>\" }],\n  [/^ring-offset-(.+)$/, colorResolver(\"--un-ring-offset-color\", \"ring-offset\"), { autocomplete: \"ring-offset-$colors\" }],\n  [/^ring-offset-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-ring-offset-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"ring-offset-(op|opacity)-<percent>\" }],\n  [\"ring-inset\", { \"--un-ring-inset\": \"inset\" }]\n];\n\nconst boxShadows = [\n  [/^shadow(?:-(.+))?$/, ([, d], { theme }) => {\n    const v = theme.boxShadow?.[d || \"DEFAULT\"];\n    if (v) {\n      return [\n        {\n          [CONTROL_SHORTCUT_NO_MERGE]: \"\",\n          \"--un-shadow-inset\": varEmpty,\n          \"--un-shadow\": \"0 0 #0000\"\n        },\n        {\n          \"--un-shadow\": colorableShadows(v, \"--un-shadow-color\").join(\",\"),\n          \"box-shadow\": \"var(--un-ring-offset-shadow, 0 0 #0000), var(--un-ring-shadow, 0 0 #0000), var(--un-shadow)\"\n        }\n      ];\n    }\n  }, { autocomplete: \"shadow-$boxShadow\" }],\n  [/^shadow-(.+)$/, colorResolver(\"--un-shadow-color\", \"shadow\"), { autocomplete: \"shadow-$colors\" }],\n  [/^shadow-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-shadow-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"shadow-(op|opacity)-<percent>\" }],\n  [\"shadow-inset\", { \"--un-shadow-inset\": \"inset\" }]\n];\n\nconst sizeMapping = {\n  h: \"height\",\n  w: \"width\",\n  inline: \"inline-size\",\n  block: \"block-size\"\n};\nfunction getPropName(minmax, hw) {\n  return `${minmax || \"\"}${sizeMapping[hw]}`;\n}\nfunction getSizeValue(minmax, hw, theme, prop) {\n  const str = getPropName(minmax, hw).replace(/-(\\w)/g, (_, p) => p.toUpperCase());\n  const v = theme[str]?.[prop];\n  if (v != null)\n    return v;\n  switch (prop) {\n    case \"fit\":\n    case \"max\":\n    case \"min\":\n      return `${prop}-content`;\n  }\n  return handler.bracket.cssvar.auto.fraction.rem(prop);\n}\nconst sizes = [\n  [\n    /^(min-|max-)?([wh])-?(.+)$/,\n    ([, m, w, s], { theme }) => ({ [getPropName(m, w)]: getSizeValue(m, w, theme, s) }),\n    {\n      autocomplete: [\n        \"(w|h)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize\",\n        \"(max|min)-(w|h)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize\"\n      ]\n    }\n  ],\n  [\n    /^(min-|max-)?(block|inline)-(.+)$/,\n    ([, m, w, s], { theme }) => ({ [getPropName(m, w)]: getSizeValue(m, w, theme, s) }),\n    {\n      autocomplete: [\n        \"(w|h)-(block|inline)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize\",\n        \"(max|min)-(w|h)-(block|inline)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize\"\n      ]\n    }\n  ],\n  [/^(min-|max-)?(h)-screen-(.+)$/, ([, m, w, s], { theme }) => ({ [getPropName(m, w)]: theme.verticalBreakpoints?.[s] }), { autocomplete: [\"h-screen-$verticalBreakpoints\", \"(min|max)-h-screen-$verticalBreakpoints\"] }],\n  [/^(min-|max-)?(w)-screen-(.+)$/, ([, m, w, s], { theme }) => ({ [getPropName(m, w)]: theme.breakpoints?.[s] }), { autocomplete: [\"w-screen-$breakpoints\", \"(min|max)-w-screen-$breakpoints\"] }]\n];\nfunction getAspectRatio(prop) {\n  if (/^\\d+\\/\\d+$/.test(prop))\n    return prop;\n  switch (prop) {\n    case \"square\":\n      return \"1/1\";\n    case \"video\":\n      return \"16/9\";\n  }\n  return handler.bracket.cssvar.auto.number(prop);\n}\nconst aspectRatio = [\n  [/^aspect-(?:ratio-)?(.+)$/, ([, d]) => ({ \"aspect-ratio\": getAspectRatio(d) }), { autocomplete: [\"aspect-(square|video)\", \"aspect-ratio-(square|video)\"] }]\n];\n\nconst paddings = [\n  [/^pa?()-?(-?.+)$/, directionSize(\"padding\"), { autocomplete: [\"(m|p)<num>\", \"(m|p)-<num>\"] }],\n  [/^p-?([xy])-?(-?.+)$/, directionSize(\"padding\")],\n  [/^p-?([rltbse])-?(-?.+)$/, directionSize(\"padding\"), { autocomplete: \"(m|p)<directions>-<num>\" }],\n  [/^p-(block|inline)-(-?.+)$/, directionSize(\"padding\"), { autocomplete: \"(m|p)-(block|inline)-<num>\" }],\n  [/^p-?([bi][se])-?(-?.+)$/, directionSize(\"padding\"), { autocomplete: \"(m|p)-(bs|be|is|ie)-<num>\" }]\n];\nconst margins = [\n  [/^ma?()-?(-?.+)$/, directionSize(\"margin\")],\n  [/^m-?([xy])-?(-?.+)$/, directionSize(\"margin\")],\n  [/^m-?([rltbse])-?(-?.+)$/, directionSize(\"margin\")],\n  [/^m-(block|inline)-(-?.+)$/, directionSize(\"margin\")],\n  [/^m-?([bi][se])-?(-?.+)$/, directionSize(\"margin\")]\n];\n\nconst transformGpu = {\n  \"--un-transform\": [\n    \"translate3d(var(--un-translate-x), var(--un-translate-y), var(--un-translate-z))\",\n    \"rotate(var(--un-rotate))\",\n    \"rotateX(var(--un-rotate-x))\",\n    \"rotateY(var(--un-rotate-y))\",\n    \"rotateZ(var(--un-rotate-z))\",\n    \"skewX(var(--un-skew-x))\",\n    \"skewY(var(--un-skew-y))\",\n    \"scaleX(var(--un-scale-x))\",\n    \"scaleY(var(--un-scale-y))\",\n    \"scaleZ(var(--un-scale-z))\"\n  ].join(\" \")\n};\nconst transformCpu = {\n  \"--un-transform\": [\n    \"translateX(var(--un-translate-x))\",\n    \"translateY(var(--un-translate-y))\",\n    \"translateZ(var(--un-translate-z))\",\n    \"rotate(var(--un-rotate))\",\n    \"rotateX(var(--un-rotate-x))\",\n    \"rotateY(var(--un-rotate-y))\",\n    \"rotateZ(var(--un-rotate-z))\",\n    \"skewX(var(--un-skew-x))\",\n    \"skewY(var(--un-skew-y))\",\n    \"scaleX(var(--un-scale-x))\",\n    \"scaleY(var(--un-scale-y))\",\n    \"scaleZ(var(--un-scale-z))\"\n  ].join(\" \")\n};\nconst transformBase = {\n  \"--un-rotate\": 0,\n  \"--un-rotate-x\": 0,\n  \"--un-rotate-y\": 0,\n  \"--un-rotate-z\": 0,\n  \"--un-scale-x\": 1,\n  \"--un-scale-y\": 1,\n  \"--un-scale-z\": 1,\n  \"--un-skew-x\": 0,\n  \"--un-skew-y\": 0,\n  \"--un-translate-x\": 0,\n  \"--un-translate-y\": 0,\n  \"--un-translate-z\": 0,\n  ...transformCpu,\n  [CONTROL_SHORTCUT_NO_MERGE]: \"\"\n};\nconst transforms = [\n  [/^(?:transform-)?origin-(.+)$/, ([, s]) => ({ \"transform-origin\": positionMap[s] ?? handler.bracket.cssvar(s) }), { autocomplete: [`transform-origin-(${Object.keys(positionMap).join(\"|\")})`, `origin-(${Object.keys(positionMap).join(\"|\")})`] }],\n  [/^(?:transform-)?perspect(?:ive)?-(.+)$/, ([, s]) => {\n    const v = handler.bracket.cssvar.px.numberWithUnit(s);\n    if (v != null) {\n      return {\n        \"-webkit-perspective\": v,\n        \"perspective\": v\n      };\n    }\n  }],\n  [/^(?:transform-)?perspect(?:ive)?-origin-(.+)$/, ([, s]) => {\n    const v = handler.bracket.cssvar(s) ?? (s.length >= 3 ? positionMap[s] : void 0);\n    if (v != null) {\n      return {\n        \"-webkit-perspective-origin\": v,\n        \"perspective-origin\": v\n      };\n    }\n  }],\n  [/^(?:transform-)?translate-()(.+)$/, handleTranslate],\n  [/^(?:transform-)?translate-([xyz])-(.+)$/, handleTranslate],\n  [/^(?:transform-)?rotate-()(.+)$/, handleRotate],\n  [/^(?:transform-)?rotate-([xyz])-(.+)$/, handleRotate],\n  [/^(?:transform-)?skew-([xy])-(.+)$/, handleSkew],\n  [/^(?:transform-)?scale-()(.+)$/, handleScale],\n  [/^(?:transform-)?scale-([xyz])-(.+)$/, handleScale],\n  [/^(?:transform-)?preserve-3d$/, () => ({ \"transform-style\": \"preserve-3d\" })],\n  [/^(?:transform-)?preserve-flat$/, () => ({ \"transform-style\": \"flat\" })],\n  [/^transform$/, () => [\n    transformBase,\n    { transform: \"var(--un-transform)\" }\n  ]],\n  [\"transform-gpu\", transformGpu],\n  [\"transform-cpu\", transformCpu],\n  [\"transform-none\", { transform: \"none\" }]\n];\nfunction handleTranslate([, d, b], { theme }) {\n  const v = theme.spacing?.[b] ?? handler.bracket.cssvar.fraction.rem(b);\n  if (v != null) {\n    return [\n      transformBase,\n      [\n        ...xyzMap[d].map((i) => [`--un-translate${i}`, v]),\n        [\"transform\", \"var(--un-transform)\"]\n      ]\n    ];\n  }\n}\nfunction handleScale([, d, b]) {\n  const v = handler.bracket.cssvar.fraction.percent(b);\n  if (v != null) {\n    return [\n      transformBase,\n      [\n        ...xyzMap[d].map((i) => [`--un-scale${i}`, v]),\n        [\"transform\", \"var(--un-transform)\"]\n      ]\n    ];\n  }\n}\nfunction handleRotate([, d = \"\", b]) {\n  const v = handler.bracket.cssvar.degree(b);\n  if (v != null) {\n    if (d) {\n      return [\n        transformBase,\n        {\n          \"--un-rotate\": 0,\n          [`--un-rotate-${d}`]: v,\n          \"transform\": \"var(--un-transform)\"\n        }\n      ];\n    } else {\n      return [\n        transformBase,\n        {\n          \"--un-rotate-x\": 0,\n          \"--un-rotate-y\": 0,\n          \"--un-rotate-z\": 0,\n          \"--un-rotate\": v,\n          \"transform\": \"var(--un-transform)\"\n        }\n      ];\n    }\n  }\n}\nfunction handleSkew([, d, b]) {\n  const v = handler.bracket.cssvar.degree(b);\n  if (v != null) {\n    return [\n      transformBase,\n      {\n        [`--un-skew-${d}`]: v,\n        transform: \"var(--un-transform)\"\n      }\n    ];\n  }\n}\n\nconst variablesAbbrMap = {\n  backface: \"backface-visibility\",\n  break: \"word-break\",\n  case: \"text-transform\",\n  content: \"align-content\",\n  fw: \"font-weight\",\n  items: \"align-items\",\n  justify: \"justify-content\",\n  select: \"user-select\",\n  self: \"align-self\",\n  vertical: \"vertical-align\",\n  visible: \"visibility\",\n  whitespace: \"white-space\",\n  ws: \"white-space\"\n};\nconst cssVariables = [\n  [/^(.+?)-(\\$.+)$/, ([, name, varname]) => {\n    const prop = variablesAbbrMap[name];\n    if (prop)\n      return { [prop]: handler.cssvar(varname) };\n  }]\n];\nconst cssProperty = [\n  [/^\\[([^:]+):(.+)\\]$/, ([, prop, value]) => ({ [prop]: handler.bracket(`[${value}]`) })]\n];\n\nconst questionMark = [\n  [\n    /^(where|\\?)$/,\n    (_, { constructCSS, generator }) => {\n      if (generator.userConfig.envMode === \"dev\")\n        return `@keyframes __un_qm{0%{box-shadow:inset 4px 4px #ff1e90, inset -4px -4px #ff1e90}100%{box-shadow:inset 8px 8px #3399ff, inset -8px -8px #3399ff}}\n${constructCSS({ animation: \"__un_qm 0.5s ease-in-out alternate infinite\" })}`;\n    }\n  ]\n];\n\nconst textDecorations = [\n  [/^(?:decoration-)?(underline|overline|line-through)$/, ([, s]) => ({ \"text-decoration-line\": s }), { autocomplete: \"decoration-(underline|overline|line-through)\" }],\n  [/^(?:underline|decoration)-(?:size-)?(.+)$/, ([, s], { theme }) => ({ \"text-decoration-thickness\": theme.lineWidth?.[s] ?? handler.bracket.cssvar.px(s) }), { autocomplete: \"(underline|decoration)-<num>\" }],\n  [/^(?:underline|decoration)-(auto|from-font)$/, ([, s]) => ({ \"text-decoration-thickness\": s }), { autocomplete: \"(underline|decoration)-(auto|from-font)\" }],\n  [/^(?:underline|decoration)-(.+)$/, (match, ctx) => {\n    const result = colorResolver(\"text-decoration-color\", \"line\")(match, ctx);\n    if (result) {\n      return {\n        \"-webkit-text-decoration-color\": result[\"text-decoration-color\"],\n        ...result\n      };\n    }\n  }, { autocomplete: \"(underline|decoration)-$colors\" }],\n  [/^(?:underline|decoration)-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-line-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"(underline|decoration)-(op|opacity)-<percent>\" }],\n  [/^(?:underline|decoration)-offset-(.+)$/, ([, s], { theme }) => ({ \"text-underline-offset\": theme.lineWidth?.[s] ?? handler.auto.bracket.cssvar.px(s) }), { autocomplete: \"(underline|decoration)-(offset)-<num>\" }],\n  [/^(?:underline|decoration)-(solid|double|dotted|dashed|wavy|inherit|initial|revert|unset)$/, ([, d]) => ({ \"text-decoration-style\": d }), { autocomplete: \"(underline|decoration)-(solid|double|dotted|dashed|wavy|inherit|initial|revert|unset)\" }],\n  [\"no-underline\", { \"text-decoration\": \"none\" }],\n  [\"decoration-none\", { \"text-decoration\": \"none\" }]\n];\n\nconst svgUtilities = [\n  [/^fill-(.+)$/, colorResolver(\"fill\", \"fill\"), { autocomplete: \"fill-$colors\" }],\n  [/^fill-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-fill-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"fill-(op|opacity)-<percent>\" }],\n  [\"fill-none\", { fill: \"none\" }],\n  [/^stroke-(?:width-|size-)?(.+)$/, ([, s], { theme }) => ({ \"stroke-width\": theme.lineWidth?.[s] ?? handler.bracket.cssvar.fraction.px.number(s) }), { autocomplete: [\"stroke-width-$lineWidth\", \"stroke-size-$lineWidth\"] }],\n  [/^stroke-dash-(.+)$/, ([, s]) => ({ \"stroke-dasharray\": handler.bracket.cssvar.number(s) }), { autocomplete: \"stroke-dash-<num>\" }],\n  [/^stroke-offset-(.+)$/, ([, s], { theme }) => ({ \"stroke-dashoffset\": theme.lineWidth?.[s] ?? handler.bracket.cssvar.px.numberWithUnit(s) }), { autocomplete: \"stroke-offset-$lineWidth\" }],\n  [/^stroke-(.+)$/, colorResolver(\"stroke\", \"stroke\"), { autocomplete: \"stroke-$colors\" }],\n  [/^stroke-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-stroke-opacity\": handler.bracket.percent(opacity) }), { autocomplete: \"stroke-(op|opacity)-<percent>\" }],\n  [\"stroke-cap-square\", { \"stroke-linecap\": \"square\" }],\n  [\"stroke-cap-round\", { \"stroke-linecap\": \"round\" }],\n  [\"stroke-cap-auto\", { \"stroke-linecap\": \"butt\" }],\n  [\"stroke-join-arcs\", { \"stroke-linejoin\": \"arcs\" }],\n  [\"stroke-join-bevel\", { \"stroke-linejoin\": \"bevel\" }],\n  [\"stroke-join-clip\", { \"stroke-linejoin\": \"miter-clip\" }],\n  [\"stroke-join-round\", { \"stroke-linejoin\": \"round\" }],\n  [\"stroke-join-auto\", { \"stroke-linejoin\": \"miter\" }],\n  [\"stroke-none\", { stroke: \"none\" }]\n];\n\nconst rules = [\n  cssVariables,\n  cssProperty,\n  paddings,\n  margins,\n  displays,\n  opacity,\n  bgColors,\n  svgUtilities,\n  borders,\n  contents,\n  fonts,\n  tabSizes,\n  textIndents,\n  textOverflows,\n  textDecorations,\n  textStrokes,\n  textShadows,\n  textTransforms,\n  textAligns,\n  textColors,\n  fontStyles,\n  fontSmoothings,\n  boxShadows,\n  rings,\n  flex,\n  grids,\n  gaps,\n  positions,\n  sizes,\n  aspectRatio,\n  cursors,\n  appearances,\n  pointerEvents,\n  resizes,\n  verticalAligns,\n  userSelects,\n  whitespaces,\n  breaks,\n  overflows,\n  outline,\n  appearance,\n  positions,\n  orders,\n  justifies,\n  alignments,\n  placements,\n  insets,\n  floats,\n  zIndexes,\n  boxSizing,\n  transitions,\n  transforms,\n  willChange,\n  questionMark\n].flat(1);\n\nexport { cssProperty as $, sizes as A, aspectRatio as B, paddings as C, margins as D, varEmpty as E, displays as F, appearances as G, cursors as H, pointerEvents as I, resizes as J, userSelects as K, whitespaces as L, contents as M, breaks as N, textOverflows as O, textTransforms as P, fontStyles as Q, fontSmoothings as R, svgUtilities as S, transforms as T, transitions as U, fonts as V, tabSizes as W, textIndents as X, textStrokes as Y, textShadows as Z, cssVariables as _, appearance as a, textDecorations as a0, borders as b, opacity as c, textColors as d, bgColors as e, flex as f, gaps as g, grids as h, overflows as i, justifies as j, orders as k, alignments as l, placements as m, insets as n, outline as o, positions as p, floats as q, rules as r, boxSizing as s, textAligns as t, questionMark as u, verticalAligns as v, willChange as w, rings as x, boxShadows as y, zIndexes as z };\n", "import { escapeRegExp } from '@unocss/core';\n\nconst variantMatcher = (name, selector) => {\n  const re = new RegExp(`^${escapeRegExp(name)}[:-]`);\n  return {\n    match: (input) => {\n      const match = input.match(re);\n      if (match) {\n        return {\n          matcher: input.slice(match[0].length),\n          selector\n        };\n      }\n    },\n    autocomplete: `${name}:`\n  };\n};\nconst variantParentMatcher = (name, parent) => {\n  const re = new RegExp(`^${escapeRegExp(name)}[:-]`);\n  return {\n    match: (input) => {\n      const match = input.match(re);\n      if (match) {\n        return {\n          matcher: input.slice(match[0].length),\n          parent\n        };\n      }\n    },\n    autocomplete: `${name}:`\n  };\n};\n\nexport { variantMatcher as a, variantParentMatcher as v };\n", "import { v as variantParentMatcher, a as variantMatcher } from './variants.mjs';\nimport { toArray, escapeRegExp } from '@unocss/core';\n\nconst regexCache = {};\nconst calcMaxWidthBySize = (size) => {\n  const value = size.match(/^-?[0-9]+\\.?[0-9]*/)?.[0] || \"\";\n  const unit = size.slice(value.length);\n  const maxWidth = parseFloat(value) - 0.1;\n  return Number.isNaN(maxWidth) ? size : `${maxWidth}${unit}`;\n};\nconst variantBreakpoints = {\n  match(matcher, { theme }) {\n    const variantEntries = Object.entries(theme.breakpoints || {}).map(([point, size], idx) => [point, size, idx]);\n    for (const [point, size, idx] of variantEntries) {\n      if (!regexCache[point])\n        regexCache[point] = new RegExp(`^((?:[al]t-)?${point}[:-])`);\n      const match = matcher.match(regexCache[point]);\n      if (!match)\n        continue;\n      const [, pre] = match;\n      const m = matcher.slice(pre.length);\n      if (m === \"container\")\n        continue;\n      const isLtPrefix = pre.startsWith(\"lt-\");\n      const isAtPrefix = pre.startsWith(\"at-\");\n      let order = 1e3;\n      if (isLtPrefix) {\n        order -= idx + 1;\n        return {\n          matcher: m,\n          parent: [`@media (max-width: ${calcMaxWidthBySize(size)})`, order]\n        };\n      }\n      order += idx + 1;\n      if (isAtPrefix && idx < variantEntries.length - 1) {\n        return {\n          matcher: m,\n          parent: [`@media (min-width: ${size}) and (max-width: ${calcMaxWidthBySize(variantEntries[idx + 1][1])})`, order]\n        };\n      }\n      return {\n        matcher: m,\n        parent: [`@media (min-width: ${size})`, order]\n      };\n    }\n  },\n  autocomplete: \"(at-|lt-|)$breakpoints:\"\n};\n\nconst scopeMatcher = (strict, name, template) => {\n  const re = strict ? new RegExp(`^${name}(?:-\\\\[(.+?)\\\\])[:-]`) : new RegExp(`^${name}(?:-\\\\[(.+?)\\\\])?[:-]`);\n  return (matcher) => {\n    const match = matcher.match(re);\n    if (match) {\n      return {\n        matcher: matcher.slice(match[0].length),\n        selector: (s) => template.replace(\"&&-s\", s).replace(\"&&-c\", match[1] ?? \"*\")\n      };\n    }\n  };\n};\nconst variantCombinators = [\n  scopeMatcher(false, \"all\", \"&&-s &&-c\"),\n  scopeMatcher(false, \"children\", \"&&-s>&&-c\"),\n  scopeMatcher(false, \"next\", \"&&-s+&&-c\"),\n  scopeMatcher(false, \"sibling\", \"&&-s+&&-c\"),\n  scopeMatcher(false, \"siblings\", \"&&-s~&&-c\"),\n  scopeMatcher(true, \"group\", \"&&-c &&-s\"),\n  scopeMatcher(true, \"parent\", \"&&-c>&&-s\"),\n  scopeMatcher(true, \"previous\", \"&&-c+&&-s\"),\n  scopeMatcher(true, \"peer\", \"&&-c~&&-s\")\n];\n\nconst variantPrint = variantParentMatcher(\"print\", \"@media print\");\nconst variantCustomMedia = (matcher, { theme }) => {\n  const match = matcher.match(/^media-([_\\d\\w]+)[:-]/);\n  if (match) {\n    const media = theme.media?.[match[1]] ?? `(--${match[1]})`;\n    return {\n      matcher: matcher.slice(match[0].length),\n      parent: `@media ${media}`\n    };\n  }\n};\n\nconst variantColorsMediaOrClass = (options = {}) => {\n  if (options?.dark === \"class\") {\n    return [\n      variantMatcher(\"dark\", (input) => `.dark $$ ${input}`),\n      variantMatcher(\"light\", (input) => `.light $$ ${input}`)\n    ];\n  }\n  return [\n    variantParentMatcher(\"dark\", \"@media (prefers-color-scheme: dark)\"),\n    variantParentMatcher(\"light\", \"@media (prefers-color-scheme: light)\")\n  ];\n};\n\nconst variantLanguageDirections = [\n  variantMatcher(\"rtl\", (input) => `[dir=\"rtl\"] $$ ${input}`),\n  variantMatcher(\"ltr\", (input) => `[dir=\"ltr\"] $$ ${input}`)\n];\n\nconst variantSelector = {\n  match(matcher) {\n    const match = matcher.match(/^selector-\\[(.+?)\\][:-]/);\n    if (match) {\n      return {\n        matcher: matcher.slice(match[0].length),\n        selector: () => match[1]\n      };\n    }\n  }\n};\nconst variantLayer = {\n  match(matcher) {\n    const match = matcher.match(/^layer-([_\\d\\w]+)[:-]/);\n    if (match) {\n      return {\n        matcher: matcher.slice(match[0].length),\n        layer: match[1]\n      };\n    }\n  }\n};\nconst variantScope = {\n  match(matcher) {\n    const match = matcher.match(/^scope-([_\\d\\w]+)[:-]/);\n    if (match) {\n      return {\n        matcher: matcher.slice(match[0].length),\n        selector: (s) => `.${match[1]} $$ ${s}`\n      };\n    }\n  }\n};\nconst variantImportant = {\n  match(matcher) {\n    if (matcher.startsWith(\"!\")) {\n      return {\n        matcher: matcher.slice(1),\n        body: (body) => {\n          body.forEach((v) => {\n            if (v[1])\n              v[1] += \" !important\";\n          });\n          return body;\n        }\n      };\n    }\n  }\n};\nconst variantNegative = {\n  match(matcher) {\n    if (matcher.startsWith(\"-\")) {\n      return {\n        matcher: matcher.slice(1),\n        body: (body) => {\n          body.forEach((v) => {\n            if (v[0].startsWith(\"--un-scale\") || v[1]?.toString() === \"0\")\n              return;\n            v[1] = v[1]?.toString().replace(/[0-9.]+(?:[a-z]+|%)?/, (i) => `-${i}`);\n          });\n          return body;\n        }\n      };\n    }\n  }\n};\n\nconst PseudoClasses = Object.fromEntries([\n  \"any-link\",\n  \"link\",\n  \"visited\",\n  \"target\",\n  [\"open\", \"[open]\"],\n  \"hover\",\n  \"active\",\n  \"focus-visible\",\n  \"focus-within\",\n  \"focus\",\n  \"autofill\",\n  \"enabled\",\n  \"disabled\",\n  \"read-only\",\n  \"read-write\",\n  \"placeholder-shown\",\n  \"default\",\n  \"checked\",\n  \"indeterminate\",\n  \"valid\",\n  \"invalid\",\n  \"in-range\",\n  \"out-of-range\",\n  \"required\",\n  \"optional\",\n  \"root\",\n  \"empty\",\n  [\"even-of-type\", \":nth-of-type(even)\"],\n  [\"even\", \":nth-child(even)\"],\n  [\"odd-of-type\", \":nth-of-type(odd)\"],\n  [\"odd\", \":nth-child(odd)\"],\n  \"first-of-type\",\n  [\"first\", \":first-child\"],\n  \"last-of-type\",\n  [\"last\", \":last-child\"],\n  \"only-child\",\n  \"only-of-type\"\n].map(toArray));\nconst PseudoElements = Object.fromEntries([\n  \"placeholder\",\n  \"before\",\n  \"after\",\n  \"first-letter\",\n  \"first-line\",\n  \"selection\",\n  \"marker\",\n  [\"file\", \"::file-selector-button\"]\n].map(toArray));\nconst PseudoClassFunctions = [\n  \"not\",\n  \"is\",\n  \"where\",\n  \"has\"\n];\nconst PseudoElementsStr = Object.keys(PseudoElements).join(\"|\");\nconst PseudoClassesStr = Object.keys(PseudoClasses).join(\"|\");\nconst PseudoClassFunctionsStr = PseudoClassFunctions.join(\"|\");\nconst PartClassesRE = /(part-\\[(.+)]:)(.+)/;\nconst PseudoElementsRE = new RegExp(`^(${PseudoElementsStr})[:-]`);\nconst PseudoClassesRE = new RegExp(`^(${PseudoClassesStr})[:-]`);\nconst PseudoClassFunctionsRE = new RegExp(`^(${PseudoClassFunctionsStr})-(${PseudoClassesStr})[:-]`);\nconst sortValue = (pseudo) => {\n  if (pseudo === \"active\")\n    return 1;\n};\nconst taggedPseudoClassMatcher = (tag, parent, combinator) => {\n  const re = new RegExp(`^${tag}-((?:(${PseudoClassFunctionsStr})-)?(${PseudoClassesStr}))[:-]`);\n  const rawRe = new RegExp(`^${escapeRegExp(parent)}:`);\n  return (input) => {\n    const match = input.match(re);\n    if (match) {\n      let pseudo = PseudoClasses[match[3]] || `:${match[3]}`;\n      if (match[2])\n        pseudo = `:${match[2]}(${pseudo})`;\n      return {\n        matcher: input.slice(match[0].length),\n        selector: (s) => rawRe.test(s) ? s.replace(rawRe, `${parent}${pseudo}:`) : `${parent}${pseudo}${combinator}${s}`,\n        sort: sortValue(match[3])\n      };\n    }\n  };\n};\nconst variantPseudoElements = {\n  match: (input) => {\n    const match = input.match(PseudoElementsRE);\n    if (match) {\n      const pseudo = PseudoElements[match[1]] || `::${match[1]}`;\n      return {\n        matcher: input.slice(match[0].length),\n        selector: (s) => `${s}${pseudo}`\n      };\n    }\n  },\n  autocomplete: `(${PseudoElementsStr}):`\n};\nconst variantPseudoClasses = {\n  match: (input) => {\n    const match = input.match(PseudoClassesRE);\n    if (match) {\n      const pseudo = PseudoClasses[match[1]] || `:${match[1]}`;\n      return {\n        matcher: input.slice(match[0].length),\n        selector: (s) => `${s}${pseudo}`,\n        sort: sortValue(match[1])\n      };\n    }\n  },\n  multiPass: true,\n  autocomplete: `(${PseudoClassesStr}):`\n};\nconst variantPseudoClassFunctions = {\n  match: (input) => {\n    const match = input.match(PseudoClassFunctionsRE);\n    if (match) {\n      const fn = match[1];\n      const pseudo = PseudoClasses[match[2]] || `:${match[2]}`;\n      return {\n        matcher: input.slice(match[0].length),\n        selector: (s) => `${s}:${fn}(${pseudo})`\n      };\n    }\n  },\n  multiPass: true,\n  autocomplete: `(${PseudoClassFunctionsStr})-(${PseudoClassesStr}):`\n};\nconst variantTaggedPseudoClasses = (options = {}) => {\n  const attributify = !!options?.attributifyPseudo;\n  return [\n    {\n      match: taggedPseudoClassMatcher(\"group\", attributify ? '[group=\"\"]' : \".group\", \" \"),\n      multiPass: true\n    },\n    {\n      match: taggedPseudoClassMatcher(\"peer\", attributify ? '[peer=\"\"]' : \".peer\", \"~\"),\n      multiPass: true\n    },\n    {\n      match: taggedPseudoClassMatcher(\"parent\", attributify ? '[parent=\"\"]' : \".parent\", \">\"),\n      multiPass: true\n    },\n    {\n      match: taggedPseudoClassMatcher(\"previous\", attributify ? '[previous=\"\"]' : \".previous\", \"+\"),\n      multiPass: true\n    }\n  ];\n};\nconst partClasses = {\n  match: (input) => {\n    const match = input.match(PartClassesRE);\n    if (match) {\n      const part = `part(${match[2]})`;\n      return {\n        matcher: input.slice(match[1].length),\n        selector: (s) => `${s}::${part}`\n      };\n    }\n  },\n  multiPass: true\n};\n\nconst variants = (options) => [\n  variantSelector,\n  variantLayer,\n  variantNegative,\n  variantImportant,\n  variantPrint,\n  variantCustomMedia,\n  variantBreakpoints,\n  ...variantCombinators,\n  variantPseudoClasses,\n  variantPseudoClassFunctions,\n  ...variantTaggedPseudoClasses(options),\n  variantPseudoElements,\n  partClasses,\n  ...variantColorsMediaOrClass(options),\n  ...variantLanguageDirections,\n  variantScope\n];\n\nexport { variantBreakpoints as a, variantCombinators as b, variantPrint as c, variantCustomMedia as d, variantColorsMediaOrClass as e, variantLanguageDirections as f, variantSelector as g, variantLayer as h, variantScope as i, variantImportant as j, variantNegative as k, variantPseudoElements as l, variantPseudoClasses as m, variantPseudoClassFunctions as n, variantTaggedPseudoClasses as o, partClasses as p, variants as v };\n", "import { t as theme } from './chunks/default.mjs';\nexport { t as theme } from './chunks/default.mjs';\nimport { r as rules } from './chunks/default2.mjs';\nimport { v as variants } from './chunks/default3.mjs';\nexport { c as colors } from './chunks/colors.mjs';\nexport { p as parseColor } from './chunks/utilities.mjs';\nimport '@unocss/core';\nimport './chunks/variants.mjs';\n\nconst autocomplete = [];\n\nconst presetMini = (options = {}) => {\n  options.dark = options.dark ?? \"class\";\n  options.attributifyPseudo = options.attributifyPseudo ?? false;\n  return {\n    name: \"@unocss/preset-mini\",\n    theme,\n    rules,\n    variants: variants(options),\n    options,\n    autocomplete,\n    postprocess: options.variablePrefix && options.variablePrefix !== \"un-\" ? VarPrefixPostprocessor(options.variablePrefix) : void 0\n  };\n};\nfunction VarPrefixPostprocessor(prefix) {\n  return (obj) => {\n    obj.entries.forEach((i) => {\n      i[0] = i[0].replace(/^--un-/, `--${prefix}`);\n      if (typeof i[1] === \"string\")\n        i[1] = i[1].replace(/var\\(--un-/g, `var(--${prefix}`);\n    });\n  };\n}\n\nexport { autocomplete, presetMini as default, presetMini };\n", "import { toArray, CONTROL_SHORTCUT_NO_MERGE } from '@unocss/core';\nimport { theme as theme$1 } from '@unocss/preset-mini/theme';\nimport { autocomplete as autocomplete$1 } from '@unocss/preset-mini';\nexport { colors } from '@unocss/preset-mini';\nimport { varEmpty, cssVariables as cssVariables$1, cssProperty, pointerEvents, appearances, positions, insets, zIndexes, orders, grids, floats, margins, boxSizing, displays, aspectRatio, sizes, flex, transforms, cursors, userSelects, resizes, appearance, placements, alignments, justifies, gaps, overflows, textOverflows, whitespaces, breaks, borders, bgColors, svgUtilities, paddings, textAligns, textIndents, verticalAligns, fonts, fontStyles, textColors, textDecorations, fontSmoothings, tabSizes, textStrokes, textShadows, opacity, boxShadows, outline, rings, transitions, willChange, questionMark } from '@unocss/preset-mini/rules';\nimport { handler, positionMap, parseColor, colorToString, colorResolver, colorableShadows, directionMap, directionSize, variantMatcher, variantParentMatcher, hasParseableColor } from '@unocss/preset-mini/utils';\nimport { variants as variants$1 } from '@unocss/preset-mini/variants';\n\nconst animations = [\n  [/^(?:animate-)?keyframes-(.+)$/, ([, name], { theme, constructCSS }) => {\n    const kf = theme.animation?.keyframes?.[name];\n    if (kf)\n      return `@keyframes ${name}${kf}\n${constructCSS({ animation: `${name}` })}`;\n  }],\n  [/^animate-(.+)$/, ([, name], { theme, constructCSS }) => {\n    const kf = theme.animation?.keyframes?.[name];\n    if (kf) {\n      const duration = theme.animation?.durations?.[name] ?? \"1s\";\n      const timing = theme.animation?.timingFns?.[name] ?? \"linear\";\n      const props = theme.animation?.properties?.[name];\n      return `@keyframes ${name}${kf}\n${constructCSS(Object.assign({ animation: `${name} ${duration} ${timing} infinite` }, props))}`;\n    }\n    return { animation: handler.bracket.cssvar(name) };\n  }],\n  [/^animate-name-(.+)/, ([, d]) => ({ \"animation-name\": handler.bracket.cssvar(d) ?? d })],\n  [/^animate-duration-(.+)$/, ([, d], { theme }) => ({ \"animation-duration\": theme.duration?.[d || \"DEFAULT\"] ?? handler.bracket.cssvar.time(d) })],\n  [/^animate-delay-(.+)$/, ([, d], { theme }) => ({ \"animation-delay\": theme.duration?.[d || \"DEFAULT\"] ?? handler.bracket.cssvar.time(d) })],\n  [/^animate-ease(?:-(.+))?$/, ([, d], { theme }) => ({ \"animation-timing-function\": theme.easing?.[d || \"DEFAULT\"] ?? handler.bracket.cssvar(d) })],\n  [/^animate-(?:fill-|mode-|fill-mode-)?(none|forwards|backwards|both|inherit|initial|revert|unset)$/, ([, d]) => ({ \"animation-fill-mode\": d })],\n  [/^animate-(?:direction-)?(normal|reverse|alternate|alternate-reverse|inherit|initial|revert|unset)$/, ([, d]) => ({ \"animation-direction\": d })],\n  [/^animate-(?:iteration-|count-|iteration-count-)(.+)$/, ([, d]) => ({ \"animation-iteration-count\": handler.bracket.cssvar(d) ?? d.replace(/\\-/g, \",\") })],\n  [/^animate-(?:play-|state-|play-state-)?(paused|running|inherit|initial|revert|unset)$/, ([, d]) => ({ \"animation-play-state\": d })],\n  [\"animate-none\", { animation: \"none\" }]\n];\n\nconst bgGradientColorResolver = (mode) => ([, body], { theme }) => {\n  const data = parseColor(body, theme);\n  if (!data)\n    return;\n  const { alpha, color, cssColor } = data;\n  if (!color)\n    return;\n  let colorString = color;\n  if (cssColor) {\n    if (alpha != null)\n      colorString = colorToString(cssColor, alpha);\n    else\n      colorString = colorToString(cssColor, `var(--un-${mode}-opacity, ${cssColor.alpha ?? 1})`);\n  }\n  switch (mode) {\n    case \"from\":\n      return {\n        \"--un-gradient-from\": colorString,\n        \"--un-gradient-stops\": \"var(--un-gradient-from), var(--un-gradient-to, rgba(255, 255, 255, 0))\"\n      };\n    case \"via\":\n      return {\n        \"--un-gradient-stops\": `var(--un-gradient-from), ${colorString}, var(--un-gradient-to, rgba(255, 255, 255, 0))`\n      };\n    case \"to\":\n      return {\n        \"--un-gradient-to\": colorString\n      };\n  }\n};\nconst backgroundStyles = [\n  [/^bg-gradient-(.+)$/, ([, d]) => ({ \"--un-gradient\": handler.bracket(d) })],\n  [/^(?:bg-gradient-)?stops-(\\[.+\\])$/, ([, s]) => ({ \"--un-gradient-stops\": handler.bracket(s) })],\n  [/^(?:bg-gradient-)?from-(.+)$/, bgGradientColorResolver(\"from\")],\n  [/^(?:bg-gradient-)?to-(.+)$/, bgGradientColorResolver(\"to\")],\n  [/^(?:bg-gradient-)?via-(.+)$/, bgGradientColorResolver(\"via\")],\n  [/^(?:bg-gradient-)?from-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-from-opacity\": handler.bracket.percent(opacity) })],\n  [/^(?:bg-gradient-)?to-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-to-opacity\": handler.bracket.percent(opacity) })],\n  [/^(?:bg-gradient-)?via-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-via-opacity\": handler.bracket.percent(opacity) })],\n  [/^bg-gradient-((?:repeating-)?(?:linear|radial|conic))$/, ([, s]) => ({\n    \"background-image\": `${s}-gradient(var(--un-gradient, var(--un-gradient-stops, rgba(255, 255, 255, 0))))`\n  })],\n  [/^bg-gradient-to-([rltb]{1,2})$/, ([, d]) => {\n    if (d in positionMap) {\n      return {\n        \"--un-gradient-shape\": `to ${positionMap[d]}`,\n        \"--un-gradient\": \"var(--un-gradient-shape), var(--un-gradient-stops)\",\n        \"background-image\": \"linear-gradient(var(--un-gradient))\"\n      };\n    }\n  }],\n  [/^(?:bg-gradient-)?shape-(.+)$/, ([, d]) => {\n    const v = d in positionMap ? `to ${positionMap[d]}` : handler.bracket(d);\n    if (v != null) {\n      return {\n        \"--un-gradient-shape\": v,\n        \"--un-gradient\": \"var(--un-gradient-shape), var(--un-gradient-stops)\"\n      };\n    }\n  }],\n  [\"bg-none\", { \"background-image\": \"none\" }],\n  [\"box-decoration-slice\", { \"box-decoration-break\": \"slice\" }],\n  [\"box-decoration-clone\", { \"box-decoration-break\": \"clone\" }],\n  [\"bg-auto\", { \"background-size\": \"auto\" }],\n  [\"bg-cover\", { \"background-size\": \"cover\" }],\n  [\"bg-contain\", { \"background-size\": \"contain\" }],\n  [\"bg-fixed\", { \"background-attachment\": \"fixed\" }],\n  [\"bg-local\", { \"background-attachment\": \"local\" }],\n  [\"bg-scroll\", { \"background-attachment\": \"scroll\" }],\n  [\"bg-clip-border\", { \"-webkit-background-clip\": \"border-box\", \"background-attachment\": \"border-box\" }],\n  [\"bg-clip-content\", { \"-webkit-background-clip\": \"content-box\", \"background-attachment\": \"content-box\" }],\n  [\"bg-clip-padding\", { \"-webkit-background-clip\": \"padding-box\", \"background-attachment\": \"padding-box\" }],\n  [\"bg-clip-text\", { \"-webkit-background-clip\": \"text\", \"background-attachment\": \"text\" }],\n  [/^bg-([-\\w]{3,})$/, ([, s]) => ({ \"background-position\": positionMap[s] })],\n  [\"bg-repeat\", { \"background-repeat\": \"repeat\" }],\n  [\"bg-no-repeat\", { \"background-repeat\": \"no-repeat\" }],\n  [\"bg-repeat-x\", { \"background-position\": \"repeat-x\" }],\n  [\"bg-repeat-y\", { \"background-position\": \"repeat-y\" }],\n  [\"bg-repeat-round\", { \"background-position\": \"round\" }],\n  [\"bg-repeat-space\", { \"background-position\": \"space\" }],\n  [\"bg-origin-border\", { \"background-origin\": \"border-box\" }],\n  [\"bg-origin-padding\", { \"background-origin\": \"padding-box\" }],\n  [\"bg-origin-content\", { \"background-origin\": \"content-box\" }]\n];\n\nconst listStyle = [\n  [/^list-(disc|circle|square|decimal|zero-decimal|greek|roman|upper-roman|alpha|upper-alpha)(?:-(outside|inside))?$/, ([, style, position]) => {\n    if (position != null) {\n      return {\n        \"list-style-position\": position,\n        \"list-style-type\": style\n      };\n    }\n    return { \"list-style-type\": style };\n  }],\n  [\"list-outside\", { \"list-style-position\": \"outside\" }],\n  [\"list-inside\", { \"list-style-position\": \"inside\" }],\n  [\"list-none\", { \"list-style-type\": \"none\" }]\n];\nconst accents = [\n  [/^accent-(.+)$/, colorResolver(\"accent-color\", \"accent\")],\n  [/^accent-op(?:acity)?-?(.+)$/, ([, d]) => ({ \"--un-accent-opacity\": handler.bracket.percent(d) })]\n];\nconst carets = [\n  [/^caret-(.+)$/, colorResolver(\"caret-color\", \"caret\")],\n  [/^caret-op(?:acity)?-?(.+)$/, ([, d]) => ({ \"--un-caret-opacity\": handler.bracket.percent(d) })]\n];\nconst imageRenderings = [\n  [\"image-render-auto\", { \"image-rendering\": \"auto\" }],\n  [\"image-render-edge\", { \"image-rendering\": \"crisp-edges\" }],\n  [\"image-render-pixel\", [\n    [\"-ms-interpolation-mode\", \"nearest-neighbor\"],\n    [\"image-rendering\", \"-webkit-optimize-contrast\"],\n    [\"image-rendering\", \"-moz-crisp-edges\"],\n    [\"image-rendering\", \"-o-pixelated\"],\n    [\"image-rendering\", \"pixelated\"]\n  ]]\n];\nconst overscrolls = [\n  [\"overscroll-auto\", { \"overscroll-behavior\": \"auto\" }],\n  [\"overscroll-contain\", { \"overscroll-behavior\": \"contain\" }],\n  [\"overscroll-none\", { \"overscroll-behavior\": \"none\" }],\n  [\"overscroll-x-auto\", { \"overscroll-behavior-x\": \"auto\" }],\n  [\"overscroll-x-contain\", { \"overscroll-behavior-x\": \"contain\" }],\n  [\"overscroll-x-none\", { \"overscroll-behavior-x\": \"none\" }],\n  [\"overscroll-y-auto\", { \"overscroll-behavior-y\": \"auto\" }],\n  [\"overscroll-y-contain\", { \"overscroll-behavior-y\": \"contain\" }],\n  [\"overscroll-y-none\", { \"overscroll-behavior-y\": \"none\" }]\n];\nconst scrollBehaviors = [\n  [\"scroll-auto\", { \"scroll-behavior\": \"auto\" }],\n  [\"scroll-smooth\", { \"scroll-behavior\": \"smooth\" }]\n];\n\nconst columns = [\n  [/^columns-(.+)$/, ([, v]) => ({ columns: handler.bracket.global.number.auto.numberWithUnit(v) })],\n  [\"break-before-auto\", { \"break-before\": \"auto\" }],\n  [\"break-before-avoid\", { \"break-before\": \"avoid\" }],\n  [\"break-before-all\", { \"break-before\": \"all\" }],\n  [\"break-before-avoid-page\", { \"break-before\": \"avoid-page\" }],\n  [\"break-before-page\", { \"break-before\": \"page\" }],\n  [\"break-before-left\", { \"break-before\": \"left\" }],\n  [\"break-before-right\", { \"break-before\": \"right\" }],\n  [\"break-before-column\", { \"break-before\": \"column\" }],\n  [\"break-inside-auto\", { \"break-inside\": \"auto\" }],\n  [\"break-inside-avoid\", { \"break-inside\": \"avoid\" }],\n  [\"break-inside-avoid-page\", { \"break-inside\": \"avoid-page\" }],\n  [\"break-inside-avoid-column\", { \"break-inside\": \"avoid-column\" }],\n  [\"break-after-auto\", { \"break-after\": \"auto\" }],\n  [\"break-after-avoid\", { \"break-after\": \"avoid\" }],\n  [\"break-after-all\", { \"break-after\": \"all\" }],\n  [\"break-after-avoid-page\", { \"break-after\": \"avoid-page\" }],\n  [\"break-after-page\", { \"break-after\": \"page\" }],\n  [\"break-after-left\", { \"break-after\": \"left\" }],\n  [\"break-after-right\", { \"break-after\": \"right\" }],\n  [\"break-after-column\", { \"break-after\": \"column\" }]\n];\n\nconst queryMatcher = /@media \\(min-width: (.+)\\)/;\nconst container = [\n  [\n    /^__container$/,\n    (m, { variantHandlers }) => {\n      let width = \"100%\";\n      for (const v of variantHandlers) {\n        const query = toArray(v.parent || [])[0];\n        if (typeof query === \"string\") {\n          const match = query.match(queryMatcher)?.[1];\n          if (match)\n            width = match;\n        }\n      }\n      return { \"max-width\": width };\n    },\n    { internal: true }\n  ]\n];\nconst containerShortcuts = [\n  [/^(?:(\\w+)[:-])?container$/, ([, bp], { theme }) => {\n    let points = Object.keys(theme.breakpoints || {});\n    if (bp) {\n      if (!points.includes(bp))\n        return;\n      points = points.slice(points.indexOf(bp));\n    }\n    const shortcuts = points.map((p) => `${p}:__container`);\n    if (!bp)\n      shortcuts.unshift(\"__container\");\n    return shortcuts;\n  }]\n];\n\nconst filterBase = {\n  \"--un-blur\": varEmpty,\n  \"--un-brightness\": varEmpty,\n  \"--un-contrast\": varEmpty,\n  \"--un-drop-shadow\": varEmpty,\n  \"--un-grayscale\": varEmpty,\n  \"--un-hue-rotate\": varEmpty,\n  \"--un-invert\": varEmpty,\n  \"--un-saturate\": varEmpty,\n  \"--un-sepia\": varEmpty,\n  \"--un-filter\": \"var(--un-blur) var(--un-brightness) var(--un-contrast) var(--un-drop-shadow) var(--un-grayscale) var(--un-hue-rotate) var(--un-invert) var(--un-saturate) var(--un-sepia)\",\n  [CONTROL_SHORTCUT_NO_MERGE]: \"\"\n};\nconst backdropFilterBase = {\n  \"--un-backdrop-blur\": varEmpty,\n  \"--un-backdrop-brightness\": varEmpty,\n  \"--un-backdrop-contrast\": varEmpty,\n  \"--un-backdrop-grayscale\": varEmpty,\n  \"--un-backdrop-hue-rotate\": varEmpty,\n  \"--un-backdrop-invert\": varEmpty,\n  \"--un-backdrop-opacity\": varEmpty,\n  \"--un-backdrop-saturate\": varEmpty,\n  \"--un-backdrop-sepia\": varEmpty,\n  \"--un-backdrop-filter\": \"var(--un-backdrop-blur) var(--un-backdrop-brightness) var(--un-backdrop-contrast) var(--un-backdrop-grayscale) var(--un-backdrop-hue-rotate) var(--un-backdrop-invert) var(--un-backdrop-opacity) var(--un-backdrop-saturate) var(--un-backdrop-sepia)\",\n  [CONTROL_SHORTCUT_NO_MERGE]: \"\"\n};\nconst percentWithDefault = (str) => {\n  let v = handler.bracket.cssvar(str || \"\");\n  if (v != null)\n    return v;\n  v = str ? handler.percent(str) : \"1\";\n  if (v != null && parseFloat(v) <= 1)\n    return v;\n};\nconst toFilter = (varName, resolver) => ([, b, s], { theme }) => {\n  const value = resolver(s, theme) ?? (s === \"none\" ? \"0\" : \"\");\n  if (value !== \"\") {\n    if (b) {\n      return [\n        backdropFilterBase,\n        {\n          [`--un-${b}${varName}`]: `${varName}(${value})`,\n          \"-webkit-backdrop-filter\": \"var(--un-backdrop-filter)\",\n          \"backdrop-filter\": \"var(--un-backdrop-filter)\"\n        }\n      ];\n    } else {\n      return [\n        filterBase,\n        {\n          [`--un-${varName}`]: `${varName}(${value})`,\n          filter: \"var(--un-filter)\"\n        }\n      ];\n    }\n  }\n};\nconst dropShadowResolver = ([, s], { theme }) => {\n  let v = theme.dropShadow?.[s || \"DEFAULT\"];\n  if (v != null) {\n    const shadows = colorableShadows(v, \"--un-drop-shadow-color\");\n    return [\n      filterBase,\n      {\n        \"--un-drop-shadow\": `drop-shadow(${shadows.join(\") drop-shadow(\")})`,\n        \"filter\": \"var(--un-filter)\"\n      }\n    ];\n  }\n  v = handler.bracket.cssvar(s);\n  if (v != null) {\n    return [\n      filterBase,\n      {\n        \"--un-drop-shadow\": `drop-shadow(${v})`,\n        \"filter\": \"var(--un-filter)\"\n      }\n    ];\n  }\n};\nconst filters = [\n  [/^(?:(backdrop-)|filter-)?blur(?:-(.+))?$/, toFilter(\"blur\", (s, theme) => theme.blur?.[s || \"DEFAULT\"] || handler.bracket.cssvar.px(s))],\n  [/^(?:(backdrop-)|filter-)?brightness-(.+)$/, toFilter(\"brightness\", (s) => handler.bracket.cssvar.percent(s))],\n  [/^(?:(backdrop-)|filter-)?contrast-(.+)$/, toFilter(\"contrast\", (s) => handler.bracket.cssvar.percent(s))],\n  [/^(?:filter-)?drop-shadow(?:-(.+))?$/, dropShadowResolver],\n  [/^(?:filter-)?drop-shadow-color-(.+)$/, colorResolver(\"--un-drop-shadow-color\", \"drop-shadow\")],\n  [/^(?:filter-)?drop-shadow-color-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-drop-shadow-opacity\": handler.bracket.percent(opacity) })],\n  [/^(?:(backdrop-)|filter-)?grayscale(?:-(.+))?$/, toFilter(\"grayscale\", percentWithDefault)],\n  [/^(?:(backdrop-)|filter-)?hue-rotate-(.+)$/, toFilter(\"hue-rotate\", (s) => handler.bracket.cssvar.degree(s))],\n  [/^(?:(backdrop-)|filter-)?invert(?:-(.+))?$/, toFilter(\"invert\", percentWithDefault)],\n  [/^(backdrop-)opacity-(.+)$/, toFilter(\"opacity\", (s) => handler.bracket.cssvar.percent(s))],\n  [/^(?:(backdrop-)|filter-)?saturate-(.+)$/, toFilter(\"saturate\", (s) => handler.bracket.cssvar.percent(s))],\n  [/^(?:(backdrop-)|filter-)?sepia(?:-(.+))?$/, toFilter(\"sepia\", percentWithDefault)],\n  [/^filter$/, () => [\n    filterBase,\n    { filter: \"var(--un-filter)\" }\n  ]],\n  [/^backdrop-filter$/, () => [\n    backdropFilterBase,\n    {\n      \"-webkit-backdrop-filter\": \"var(--un-backdrop-filter)\",\n      \"backdrop-filter\": \"var(--un-backdrop-filter)\"\n    }\n  ]],\n  [\"filter-none\", { filter: \"none\" }],\n  [\"backdrop-filter-none\", {\n    \"-webkit-backdrop-filter\": \"none\",\n    \"backdrop-filter\": \"none\"\n  }]\n];\n\nconst spaces = [\n  [/^space-?([xy])-?(-?.+)$/, handlerSpace],\n  [/^space-?([xy])-reverse$/, ([, d]) => ({ [`--un-space-${d}-reverse`]: 1 })],\n  [/^space-(block|inline)-(-?.+)$/, handlerSpace],\n  [/^space-(block|inline)-reverse$/, ([, d]) => ({ [`--un-space-${d}-reverse`]: 1 })]\n];\nfunction handlerSpace([, d, s], { theme }) {\n  const v = theme.spacing?.[s || \"DEFAULT\"] ?? handler.bracket.cssvar.auto.fraction.rem(s || \"1\");\n  if (v != null) {\n    const results = directionMap[d].map((item) => {\n      const key = `margin${item}`;\n      const value = item.endsWith(\"right\") || item.endsWith(\"bottom\") ? `calc(${v} * var(--un-space-${d}-reverse))` : `calc(${v} * calc(1 - var(--un-space-${d}-reverse)))`;\n      return [key, value];\n    });\n    if (results) {\n      return [\n        [`--un-space-${d}-reverse`, 0],\n        ...results\n      ];\n    }\n  }\n}\n\nconst textTransforms = [\n  [\"uppercase\", { \"text-transform\": \"uppercase\" }],\n  [\"lowercase\", { \"text-transform\": \"lowercase\" }],\n  [\"capitalize\", { \"text-transform\": \"capitalize\" }],\n  [\"normal-case\", { \"text-transform\": \"none\" }]\n];\nconst hyphens = [\n  [\"hyphens-manual\", {\n    \"-webkit-hyphens\": \"manual\",\n    \"-ms-hyphens\": \"manual\",\n    \"hyphens\": \"manual\"\n  }],\n  [\"hyphens-auto\", {\n    \"-webkit-hyphens\": \"auto\",\n    \"-ms-hyphens\": \"auto\",\n    \"hyphens\": \"auto\"\n  }],\n  [\"hyphens-none\", {\n    \"-webkit-hyphens\": \"none\",\n    \"-ms-hyphens\": \"none\",\n    \"hyphens\": \"none\"\n  }]\n];\nconst writingModes = [\n  [\"write-vertical-right\", { \"writing-mode\": \"vertical-rl\" }],\n  [\"write-vertical-left\", { \"writing-mode\": \"vertical-lr\" }],\n  [\"write-normal\", { \"writing-mode\": \"horizontal-tb\" }]\n];\nconst writingOrientations = [\n  [\"write-orient-mixed\", { \"text-orientation\": \"mixed\" }],\n  [\"write-orient-sideways\", { \"text-orientation\": \"sideways\" }],\n  [\"write-orient-upright\", { \"text-orientation\": \"upright\" }]\n];\nconst screenReadersAccess = [\n  [\n    \"sr-only\",\n    {\n      \"position\": \"absolute\",\n      \"width\": \"1px\",\n      \"height\": \"1px\",\n      \"padding\": \"0\",\n      \"margin\": \"-1px\",\n      \"overflow\": \"hidden\",\n      \"clip\": \"rect(0,0,0,0)\",\n      \"white-space\": \"nowrap\",\n      \"border-width\": 0\n    }\n  ],\n  [\n    \"not-sr-only\",\n    {\n      \"position\": \"static\",\n      \"width\": \"auto\",\n      \"height\": \"auto\",\n      \"padding\": \"0\",\n      \"margin\": \"0\",\n      \"overflow\": \"visible\",\n      \"clip\": \"auto\",\n      \"white-space\": \"normal\"\n    }\n  ]\n];\nconst contents = [\n  [/^content-(.+)$/, ([, v]) => {\n    const c = handler.bracket.cssvar(v);\n    if (c != null)\n      return { content: c };\n    return { content: `\"${v}\"` };\n  }],\n  [\"content-empty\", { content: '\"\"' }],\n  [\"content-none\", { content: '\"\"' }]\n];\nconst isolations = [\n  [\"isolate\", { isolation: \"isolate\" }],\n  [\"isolate-auto\", { isolation: \"auto\" }],\n  [\"isolation-auto\", { isolation: \"auto\" }]\n];\nconst objectPositions = [\n  [\"object-cover\", { \"object-fit\": \"cover\" }],\n  [\"object-contain\", { \"object-fit\": \"contain\" }],\n  [\"object-fill\", { \"object-fit\": \"fill\" }],\n  [\"object-scale-down\", { \"object-fit\": \"scale-down\" }],\n  [\"object-none\", { \"object-fit\": \"none\" }],\n  [/^object-([-\\w]+)$/, ([, s]) => ({ \"object-position\": positionMap[s] })]\n];\nconst backgroundBlendModes = [\n  [\"bg-blend-multiply\", { \"background-blend-mode\": \"multiply\" }],\n  [\"bg-blend-screen\", { \"background-blend-mode\": \"screen\" }],\n  [\"bg-blend-overlay\", { \"background-blend-mode\": \"overlay\" }],\n  [\"bg-blend-darken\", { \"background-blend-mode\": \"darken\" }],\n  [\"bg-blend-lighten\", { \"background-blend-mode\": \"lighten\" }],\n  [\"bg-blend-color-dodge\", { \"background-blend-mode\": \"color-dodge\" }],\n  [\"bg-blend-color-burn\", { \"background-blend-mode\": \"color-burn\" }],\n  [\"bg-blend-hard-light\", { \"background-blend-mode\": \"hard-light\" }],\n  [\"bg-blend-soft-light\", { \"background-blend-mode\": \"soft-light\" }],\n  [\"bg-blend-difference\", { \"background-blend-mode\": \"difference\" }],\n  [\"bg-blend-exclusion\", { \"background-blend-mode\": \"exclusion\" }],\n  [\"bg-blend-hue\", { \"background-blend-mode\": \"hue\" }],\n  [\"bg-blend-saturation\", { \"background-blend-mode\": \"saturation\" }],\n  [\"bg-blend-color\", { \"background-blend-mode\": \"color\" }],\n  [\"bg-blend-luminosity\", { \"background-blend-mode\": \"luminosity\" }],\n  [\"bg-blend-normal\", { \"background-blend-mode\": \"normal\" }]\n];\nconst mixBlendModes = [\n  [\"mix-blend-multiply\", { \"mix-blend-mode\": \"multiply\" }],\n  [\"mix-blend-screen\", { \"mix-blend-mode\": \"screen\" }],\n  [\"mix-blend-overlay\", { \"mix-blend-mode\": \"overlay\" }],\n  [\"mix-blend-darken\", { \"mix-blend-mode\": \"darken\" }],\n  [\"mix-blend-lighten\", { \"mix-blend-mode\": \"lighten\" }],\n  [\"mix-blend-color-dodge\", { \"mix-blend-mode\": \"color-dodge\" }],\n  [\"mix-blend-color-burn\", { \"mix-blend-mode\": \"color-burn\" }],\n  [\"mix-blend-hard-light\", { \"mix-blend-mode\": \"hard-light\" }],\n  [\"mix-blend-soft-light\", { \"mix-blend-mode\": \"soft-light\" }],\n  [\"mix-blend-difference\", { \"mix-blend-mode\": \"difference\" }],\n  [\"mix-blend-exclusion\", { \"mix-blend-mode\": \"exclusion\" }],\n  [\"mix-blend-hue\", { \"mix-blend-mode\": \"hue\" }],\n  [\"mix-blend-saturation\", { \"mix-blend-mode\": \"saturation\" }],\n  [\"mix-blend-color\", { \"mix-blend-mode\": \"color\" }],\n  [\"mix-blend-luminosity\", { \"mix-blend-mode\": \"luminosity\" }],\n  [\"mix-blend-normal\", { \"mix-blend-mode\": \"normal\" }]\n];\n\nconst tables = [\n  [\"inline-table\", { display: \"inline-table\" }],\n  [\"table\", { display: \"table\" }],\n  [\"table-caption\", { display: \"table-caption\" }],\n  [\"table-cell\", { display: \"table-cell\" }],\n  [\"table-column\", { display: \"table-column\" }],\n  [\"table-column-group\", { display: \"table-column-group\" }],\n  [\"table-footer-group\", { display: \"table-footer-group\" }],\n  [\"table-header-group\", { display: \"table-header-group\" }],\n  [\"table-row\", { display: \"table-row\" }],\n  [\"table-row-group\", { display: \"table-row-group\" }],\n  [\"border-collapse\", { \"border-collapse\": \"collapse\" }],\n  [\"border-separate\", { \"border-collapse\": \"separate\" }],\n  [/^border-spacing-(.+)$/, ([, d], { theme }) => ({ \"border-spacing\": theme.spacing?.[d] ?? handler.bracket.cssvar.auto.fraction.rem(d) })],\n  [\"caption-top\", { \"caption-side\": \"top\" }],\n  [\"caption-bottom\", { \"caption-side\": \"bottom\" }],\n  [\"table-auto\", { \"table-layout\": \"auto\" }],\n  [\"table-fixed\", { \"table-layout\": \"fixed\" }],\n  [\"table-empty-cells-visible\", { \"empty-cells\": \"show\" }],\n  [\"table-empty-cells-hidden\", { \"empty-cells\": \"hide\" }]\n];\n\nconst variablesAbbrMap = {\n  \"bg-blend\": \"background-blend-mode\",\n  \"bg-clip\": \"-webkit-background-clip\",\n  \"bg-gradient\": \"linear-gradient\",\n  \"bg-image\": \"background-image\",\n  \"bg-origin\": \"background-origin\",\n  \"bg-position\": \"background-position\",\n  \"bg-repeat\": \"background-repeat\",\n  \"bg-size\": \"background-size\",\n  \"mix-blend\": \"mix-blend-mode\",\n  \"object\": \"object-fit\",\n  \"object-position\": \"object-position\",\n  \"write\": \"writing-mode\",\n  \"write-orient\": \"text-orientation\"\n};\nconst cssVariables = [\n  [/^(.+?)-(\\$.+)$/, ([, name, varname]) => {\n    const prop = variablesAbbrMap[name];\n    if (prop)\n      return { [prop]: handler.cssvar(varname) };\n  }]\n];\n\nconst divides = [\n  [/^divide-?([xy])$/, handlerDivide],\n  [/^divide-?([xy])-?(-?.+)$/, handlerDivide],\n  [/^divide-?([xy])-reverse$/, ([, d]) => ({ [`--un-divide-${d}-reverse`]: 1 })],\n  [/^divide-(block|inline)$/, handlerDivide],\n  [/^divide-(block|inline)-(-?.+)$/, handlerDivide],\n  [/^divide-(block|inline)-reverse$/, ([, d]) => ({ [`--un-divide-${d}-reverse`]: 1 })],\n  [/^divide-(.+)$/, colorResolver(\"border-color\", \"divide\")],\n  [/^divide-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-divide-opacity\": handler.bracket.percent(opacity) })],\n  [\"divide-solid\", { \"border-style\": \"solid\" }],\n  [\"divide-dashed\", { \"border-style\": \"dashed\" }],\n  [\"divide-dotted\", { \"border-style\": \"dotted\" }],\n  [\"divide-double\", { \"border-style\": \"double\" }],\n  [\"divide-none\", { \"border-style\": \"none\" }]\n];\nfunction handlerDivide([, d, s], { theme }) {\n  const v = theme.lineWidth?.[s || \"DEFAULT\"] ?? handler.bracket.cssvar.px(s || \"1\");\n  if (v != null) {\n    const results = directionMap[d].map((item) => {\n      const key = `border${item}-width`;\n      const value = item.endsWith(\"right\") || item.endsWith(\"bottom\") ? `calc(${v} * var(--un-divide-${d}-reverse))` : `calc(${v} * calc(1 - var(--un-divide-${d}-reverse)))`;\n      return [key, value];\n    });\n    if (results) {\n      return [\n        [`--un-divide-${d}-reverse`, 0],\n        ...results\n      ];\n    }\n  }\n}\n\nconst lineClamps = [\n  [/^line-clamp-(\\d+)$/, ([, v]) => ({\n    \"overflow\": \"hidden\",\n    \"display\": \"-webkit-box\",\n    \"-webkit-box-orient\": \"vertical\",\n    \"-webkit-line-clamp\": v,\n    \"line-clamp\": v\n  })],\n  [\"line-clamp-none\", {\n    \"-webkit-line-clamp\": \"unset\",\n    \"line-clamp\": \"unset\"\n  }]\n];\n\nconst fontVariantNumericBase = {\n  \"--un-ordinal\": varEmpty,\n  \"--un-slashed-zero\": varEmpty,\n  \"--un-numeric-figure\": varEmpty,\n  \"--un-numeric-spacing\": varEmpty,\n  \"--un-numeric-fraction\": varEmpty,\n  \"--un-font-variant-numeric\": \"var(--un-ordinal) var(--un-slashed-zero) var(--un-numeric-figure) var(--un-numeric-spacing) var(--un-numeric-fraction)\",\n  [CONTROL_SHORTCUT_NO_MERGE]: \"\"\n};\nconst toEntries = (entry) => [\n  fontVariantNumericBase,\n  {\n    ...entry,\n    \"font-variant-numeric\": \"var(--un-font-variant-numeric)\"\n  }\n];\nconst fontVariantNumeric = [\n  [/^ordinal$/, () => toEntries({ \"--un-ordinal\": \"ordinal\" })],\n  [/^slashed-zero$/, () => toEntries({ \"--un-slashed-zero\": \"slashed-zero\" })],\n  [/^lining-nums$/, () => toEntries({ \"--un-numeric-figure\": \"lining-nums\" })],\n  [/^oldstyle-nums$/, () => toEntries({ \"--un-numeric-figure\": \"oldstyle-nums\" })],\n  [/^proportional-nums$/, () => toEntries({ \"--un-numeric-spacing\": \"proportional-nums\" })],\n  [/^tabular-nums$/, () => toEntries({ \"--un-numeric-spacing\": \"tabular-nums\" })],\n  [/^diagonal-fractions$/, () => toEntries({ \"--un-numeric-fraction\": \"diagonal-fractions\" })],\n  [/^stacked-fractions$/, () => toEntries({ \"--un-numeric-fraction\": \"stacked-fractions\" })],\n  [\"normal-nums\", { \"font-variant-numeric\": \"normal\" }]\n];\n\nconst touchActionBase = {\n  \"--un-pan-x\": varEmpty,\n  \"--un-pan-y\": varEmpty,\n  \"--un-pinch-zoom\": varEmpty,\n  \"--un-touch-action\": \"var(--un-pan-x) var(--un-pan-y) var(--un-pinch-zoom)\",\n  [CONTROL_SHORTCUT_NO_MERGE]: \"\"\n};\nconst touchActions = [\n  [/^touch-pan-(x|left|right)$/, ([, d]) => [\n    touchActionBase,\n    {\n      \"--un-pan-x\": `pan-${d}`,\n      \"touch-action\": \"var(--un-touch-action)\"\n    }\n  ]],\n  [/^touch-pan-(y|up|down)$/, ([, d]) => [\n    touchActionBase,\n    {\n      \"--un-pan-y\": `pan-${d}`,\n      \"touch-action\": \"var(--un-touch-action)\"\n    }\n  ]],\n  [/^touch-pinch-zoom$/, () => [\n    touchActionBase,\n    {\n      \"--un-pinch-zoom\": \"pinch-zoom\",\n      \"touch-action\": \"var(--un-touch-action)\"\n    }\n  ]],\n  [\"touch-auto\", { \"touch-action\": \"auto\" }],\n  [\"touch-manipulation\", { \"touch-action\": \"manipulation\" }],\n  [\"touch-none\", { \"touch-action\": \"none\" }]\n];\n\nconst scrolls = [\n  [/^snap-(x|y|both)$/, ([, d]) => [\n    {\n      \"--un-scroll-snap-strictness\": \"proximity\",\n      [CONTROL_SHORTCUT_NO_MERGE]: \"\"\n    },\n    {\n      \"scroll-snap-type\": `${d} var(--un-scroll-snap-strictness)`\n    }\n  ]],\n  [\"snap-mandatory\", { \"--un-scroll-snap-strictness\": \"mandatory\" }],\n  [\"snap-proximity\", { \"--un-scroll-snap-strictness\": \"proximity\" }],\n  [\"snap-none\", { \"scroll-snap-type\": \"none\" }],\n  [\"snap-start\", { \"scroll-snap-align\": \"start\" }],\n  [\"snap-end\", { \"scroll-snap-align\": \"end\" }],\n  [\"snap-center\", { \"scroll-snap-align\": \"center\" }],\n  [\"snap-align-none\", { \"scroll-snap-align\": \"none\" }],\n  [\"snap-normal\", { \"scroll-snap-stop\": \"normal\" }],\n  [\"snap-always\", { \"scroll-snap-stop\": \"always\" }],\n  [/^scroll-ma?()-?(-?.+)$/, directionSize(\"scroll-margin\")],\n  [/^scroll-m-?([xy])-?(-?.+)$/, directionSize(\"scroll-margin\")],\n  [/^scroll-m-?([rltb])-?(-?.+)$/, directionSize(\"scroll-margin\")],\n  [/^scroll-m-(block|inline)-(-?.+)$/, directionSize(\"scroll-margin\")],\n  [/^scroll-m-?([bi][se])-?(-?.+)$/, directionSize(\"scroll-margin\")],\n  [/^scroll-pa?()-?(-?.+)$/, directionSize(\"scroll-padding\")],\n  [/^scroll-p-?([xy])-?(-?.+)$/, directionSize(\"scroll-padding\")],\n  [/^scroll-p-?([rltb])-?(-?.+)$/, directionSize(\"scroll-padding\")],\n  [/^scroll-p-(block|inline)-(-?.+)$/, directionSize(\"scroll-padding\")],\n  [/^scroll-p-?([bi][se])-?(-?.+)$/, directionSize(\"scroll-padding\")]\n];\n\nconst placeholders = [\n  [/^\\$ placeholder-(.+)$/, colorResolver(\"color\", \"placeholder\")],\n  [/^\\$ placeholder-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-placeholder-opacity\": handler.bracket.percent(opacity) })]\n];\n\nconst rules = [\n  cssVariables$1,\n  cssVariables,\n  cssProperty,\n  container,\n  screenReadersAccess,\n  pointerEvents,\n  appearances,\n  positions,\n  insets,\n  lineClamps,\n  isolations,\n  zIndexes,\n  orders,\n  grids,\n  floats,\n  margins,\n  boxSizing,\n  displays,\n  aspectRatio,\n  sizes,\n  flex,\n  tables,\n  transforms,\n  animations,\n  cursors,\n  touchActions,\n  userSelects,\n  resizes,\n  scrolls,\n  listStyle,\n  appearance,\n  columns,\n  placements,\n  alignments,\n  justifies,\n  gaps,\n  spaces,\n  divides,\n  overflows,\n  overscrolls,\n  scrollBehaviors,\n  textOverflows,\n  whitespaces,\n  breaks,\n  borders,\n  bgColors,\n  backgroundStyles,\n  svgUtilities,\n  objectPositions,\n  paddings,\n  textAligns,\n  textIndents,\n  verticalAligns,\n  fonts,\n  textTransforms,\n  fontStyles,\n  fontVariantNumeric,\n  textColors,\n  textDecorations,\n  fontSmoothings,\n  tabSizes,\n  textStrokes,\n  textShadows,\n  hyphens,\n  writingModes,\n  writingOrientations,\n  carets,\n  accents,\n  opacity,\n  backgroundBlendModes,\n  mixBlendModes,\n  boxShadows,\n  outline,\n  rings,\n  imageRenderings,\n  filters,\n  transitions,\n  willChange,\n  contents,\n  placeholders,\n  questionMark\n].flat(1);\n\nconst shortcuts = [\n  ...containerShortcuts\n];\n\nconst theme = {\n  ...theme$1,\n  animation: {\n    keyframes: {\n      \"pulse\": \"{0%, 100% {opacity:1} 50% {opacity:.5}}\",\n      \"bounce\": \"{0%, 100% {transform:translateY(-25%);animation-timing-function:cubic-bezier(0.8,0,1,1)} 50% {transform:translateY(0);animation-timing-function:cubic-bezier(0,0,0.2,1)}}\",\n      \"spin\": \"{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}\",\n      \"ping\": \"{0%{transform:scale(1);opacity:1}75%,100%{transform:scale(2);opacity:0}}\",\n      \"bounce-alt\": \"{from,20%,53%,80%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1);transform:translate3d(0,0,0)}40%,43%{animation-timing-function:cubic-bezier(0.755,0.05,0.855,0.06);transform:translate3d(0,-30px,0)}70%{animation-timing-function:cubic-bezier(0.755,0.05,0.855,0.06);transform:translate3d(0,-15px,0)}90%{transform:translate3d(0,-4px,0)}}\",\n      \"flash\": \"{from,50%,to{opacity:1}25%,75%{opacity:0}}\",\n      \"pulse-alt\": \"{from{transform:scale3d(1,1,1)}50%{transform:scale3d(1.05,1.05,1.05)}to{transform:scale3d(1,1,1)}}\",\n      \"rubber-band\": \"{from{transform:scale3d(1,1,1)}30%{transform:scale3d(1.25,0.75,1)}40%{transform:scale3d(0.75,1.25,1)}50%{transform:scale3d(1.15,0.85,1)}65%{transform:scale3d(0.95,1.05,1)}75%{transform:scale3d(1.05,0.95,1)}to{transform:scale3d(1,1,1)}}\",\n      \"shake-x\": \"{from,to{transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{transform:translate3d(-10px,0,0)}20%,40%,60%,80%{transform:translate3d(10px,0,0)}}\",\n      \"shake-y\": \"{from,to{transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{transform:translate3d(0,-10px,0)}20%,40%,60%,80%{transform:translate3d(0,10px,0)}}\",\n      \"head-shake\": \"{0%{transform:translateX(0)}6.5%{transform:translateX(-6px) rotateY(-9deg)}18.5%{transform:translateX(5px) rotateY(7deg)}31.5%{transform:translateX(-3px) rotateY(-5deg)}43.5%{transform:translateX(2px) rotateY(3deg)}50%{transform:translateX(0)}}\",\n      \"swing\": \"{20%{transform:rotate3d(0,0,1,15deg)}40%{transform:rotate3d(0,0,1,-10deg)}60%{transform:rotate3d(0,0,1,5deg)}80%{transform:rotate3d(0,0,1,-5deg)}to{transform:rotate3d(0,0,1,0deg)}}\",\n      \"tada\": \"{from{transform:scale3d(1,1,1)}10%,20%{transform:scale3d(0.9,0.9,0.9) rotate3d(0,0,1,-3deg)}30%,50%,70%,90%{transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg)}40%,60%,80%{transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg)}to{transform:scale3d(1,1,1)}}\",\n      \"wobble\": \"{from{transform:translate3d(0,0,0)}15%{transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}to{transform:translate3d(0,0,0)}}\",\n      \"jello\": \"{from,11.1% to{transform:translate3d(0,0,0)}22.2%{transform:skewX(-12.5deg) skewY(-12.5deg)}33.3%{transform:skewX(6.25deg) skewY(6.25deg)}44.4%{transform:skewX(-3.125deg)skewY(-3.125deg)}55.5%{transform:skewX(1.5625deg) skewY(1.5625deg)}66.6%{transform:skewX(-0.78125deg) skewY(-0.78125deg)}77.7%{transform:skewX(0.390625deg) skewY(0.390625deg)}88.8%{transform:skewX(-0.1953125deg) skewY(-0.1953125deg)}}\",\n      \"heart-beat\": \"{0%{transform:scale(1)}14%{transform:scale(1.3)}28%{transform:scale(1)}42%{transform:scale(1.3)}70%{transform:scale(1)}}\",\n      \"hinge\": \"{0%{transform-origin:top left;animation-timing-function:ease-in-out}20%,60%{transform:rotate3d(0,0,1,80deg);transform-origin:top left;animation-timing-function:ease-in-out}40%,80%{transform:rotate3d(0,0,1,60deg);transform-origin:top left;animation-timing-function:ease-in-out}to{transform:translate3d(0,700px,0);opacity:0}}\",\n      \"jack-in-the-box\": \"{from{opacity:0;transform-origin:center bottom;transform:scale(0.1) rotate(30deg)}50%{transform:rotate(-10deg)}70%{transform:rotate(3deg)}to{transform:scale(1)}}\",\n      \"light-speed-in-left\": \"{from{opacity:0;transform:translate3d(100%,0,0) skewX(-30deg)}60%{opacity:1;transform:skewX(20deg)}80%{transform:skewX(-5deg)}to{transform:translate3d(0,0,0)}}\",\n      \"light-speed-in-right\": \"{from{opacity:0;transform:translate3d(100%,0,0) skewX(-30deg)}60%{opacity:1;transform:skewX(20deg)}80%{transform:skewX(-5deg)}to{transform:translate3d(0,0,0)}}\",\n      \"light-speed-out-left\": \"{from{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) skewX(30deg)}}\",\n      \"light-speed-out-right\": \"{from{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) skewX(30deg)}}\",\n      \"flip\": \"{from{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,0) rotate3d(0,1,0,-360deg);animation-timing-function:ease-out}40%{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);animation-timing-function:ease-out}50%{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);animation-timing-function:ease-in}80%{transform:perspective(400px) scale3d(0.95,0.95,0.95) translate3d(0,0,0) rotate3d(0,1,0,0deg);animation-timing-function:ease-in}to{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,0) rotate3d(0,1,0,0deg);animation-timing-function:ease-in}}\",\n      \"flip-in-x\": \"{from{transform:perspective(400px) rotate3d(1,0,0,90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotate3d(1,0,0,-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{transform:perspective(400px) rotate3d(1,0,0,-5deg)}to{transform:perspective(400px)}}\",\n      \"flip-in-y\": \"{from{transform:perspective(400px) rotate3d(0,1,0,90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotate3d(0,1,0,-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotate3d(0,1,0,10deg);opacity:1}80%{transform:perspective(400px) rotate3d(0,1,0,-5deg)}to{transform:perspective(400px)}}\",\n      \"flip-out-x\": \"{from{transform:perspective(400px)}30%{transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}to{transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}\",\n      \"flip-out-y\": \"{from{transform:perspective(400px)}30%{transform:perspective(400px) rotate3d(0,1,0,-15deg);opacity:1}to{transform:perspective(400px) rotate3d(0,1,0,90deg);opacity:0}}\",\n      \"rotate-in\": \"{from{transform-origin:center;transform:rotate3d(0,0,1,-200deg);opacity:0}to{transform-origin:center;transform:translate3d(0,0,0);opacity:1}}\",\n      \"rotate-in-down-left\": \"{from{transform-origin:left bottom;transform:rotate3d(0,0,1,-45deg);opacity:0}to{transform-origin:left bottom;transform:translate3d(0,0,0);opacity:1}}\",\n      \"rotate-in-down-right\": \"{from{transform-origin:right bottom;transform:rotate3d(0,0,1,45deg);opacity:0}to{transform-origin:right bottom;transform:translate3d(0,0,0);opacity:1}}\",\n      \"rotate-in-up-left\": \"{from{transform-origin:left top;transform:rotate3d(0,0,1,45deg);opacity:0}to{transform-origin:left top;transform:translate3d(0,0,0);opacity:1}}\",\n      \"rotate-in-up-right\": \"{from{transform-origin:right bottom;transform:rotate3d(0,0,1,-90deg);opacity:0}to{transform-origin:right bottom;transform:translate3d(0,0,0);opacity:1}}\",\n      \"rotate-out\": \"{from{transform-origin:center;opacity:1}to{transform-origin:center;transform:rotate3d(0,0,1,200deg);opacity:0}}\",\n      \"rotate-out-down-left\": \"{from{transform-origin:left bottom;opacity:1}to{transform-origin:left bottom;transform:rotate3d(0,0,1,45deg);opacity:0}}\",\n      \"rotate-out-down-right\": \"{from{transform-origin:right bottom;opacity:1}to{transform-origin:right bottom;transform:rotate3d(0,0,1,-45deg);opacity:0}}\",\n      \"rotate-out-up-left\": \"{from{transform-origin:left bottom;opacity:1}to{transform-origin:left bottom;transform:rotate3d(0,0,1,-45deg);opacity:0}}\",\n      \"rotate-out-up-right\": \"{from{transform-origin:right bottom;opacity:1}to{transform-origin:left bottom;transform:rotate3d(0,0,1,90deg);opacity:0}}\",\n      \"roll-in\": \"{from{opacity:0;transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"roll-out\": \"{from{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg)}}\",\n      \"zoom-in\": \"{from{opacity:0;transform:scale3d(0.3,0.3,0.3)}50%{opacity:1}}\",\n      \"zoom-in-down\": \"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,-1000px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,60px,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}\",\n      \"zoom-in-left\": \"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(-1000px,0,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(10px,0,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}\",\n      \"zoom-in-right\": \"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(1000px,0,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(-10px,0,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}\",\n      \"zoom-in-up\": \"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,1000px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,-60px,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}\",\n      \"zoom-out\": \"{from{opacity:1}50%{opacity:0;transform:scale3d(0.3,0.3,0.3)}to{opacity:0}}\",\n      \"zoom-out-down\": \"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,-60px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}to{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,2000px,0);transform-origin:center bottom;animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}\",\n      \"zoom-out-left\": \"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(42px,0,0)}to{opacity:0;transform:scale(0.1) translate3d(-2000px,0,0);transform-origin:left center}}\",\n      \"zoom-out-right\": \"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(-42px,0,0)}to{opacity:0;transform:scale(0.1) translate3d(2000px,0,0);transform-origin:right center}}\",\n      \"zoom-out-up\": \"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,60px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}to{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,-2000px,0);transform-origin:center bottom;animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}\",\n      \"bounce-in\": \"{from,20%,40%,60%,80%,to{animation-timing-function:ease-in-out}0%{opacity:0;transform:scale3d(0.3,0.3,0.3)}20%{transform:scale3d(1.1,1.1,1.1)}40%{transform:scale3d(0.9,0.9,0.9)}60%{transform:scale3d(1.03,1.03,1.03);opacity:1}80%{transform:scale3d(0.97,0.97,0.97)}to{opacity:1;transform:scale3d(1,1,1)}}\",\n      \"bounce-in-down\": \"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:translate3d(0,0,0)}}\",\n      \"bounce-in-left\": \"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:translate3d(0,0,0)}}\",\n      \"bounce-in-right\": \"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:translate3d(0,0,0)}}\",\n      \"bounce-in-up\": \"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translate3d(0,0,0)}}\",\n      \"bounce-out\": \"{20%{transform:scale3d(0.9,0.9,0.9)}50%,55%{opacity:1;transform:scale3d(1.1,1.1,1.1)}to{opacity:0;transform:scale3d(0.3,0.3,0.3)}}\",\n      \"bounce-out-down\": \"{20%{transform:translate3d(0,10px,0)}40%,45%{opacity:1;transform:translate3d(0,-20px,0)}to{opacity:0;transform:translate3d(0,2000px,0)}}\",\n      \"bounce-out-left\": \"{20%{opacity:1;transform:translate3d(20px,0,0)}to{opacity:0;transform:translate3d(-2000px,0,0)}}\",\n      \"bounce-out-right\": \"{20%{opacity:1;transform:translate3d(-20px,0,0)}to{opacity:0;transform:translate3d(2000px,0,0)}}\",\n      \"bounce-out-up\": \"{20%{transform:translate3d(0,-10px,0)}40%,45%{opacity:1;transform:translate3d(0,20px,0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}\",\n      \"slide-in-down\": \"{from{transform:translate3d(0,-100%,0);visibility:visible}to{transform:translate3d(0,0,0)}}\",\n      \"slide-in-left\": \"{from{transform:translate3d(-100%,0,0);visibility:visible}to{transform:translate3d(0,0,0)}}\",\n      \"slide-in-right\": \"{from{transform:translate3d(100%,0,0);visibility:visible}to{transform:translate3d(0,0,0)}}\",\n      \"slide-in-up\": \"{from{transform:translate3d(0,100%,0);visibility:visible}to{transform:translate3d(0,0,0)}}\",\n      \"slide-out-down\": \"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(0,100%,0)}}\",\n      \"slide-out-left\": \"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(-100%,0,0)}}\",\n      \"slide-out-right\": \"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(100%,0,0)}}\",\n      \"slide-out-up\": \"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(0,-100%,0)}}\",\n      \"fade-in\": \"{from{opacity:0}to{opacity:1}}\",\n      \"fade-in-down\": \"{from{opacity:0;transform:translate3d(0,-100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-down-big\": \"{from{opacity:0;transform:translate3d(0,-2000px,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-left\": \"{from{opacity:0;transform:translate3d(-100%,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-left-big\": \"{from{opacity:0;transform:translate3d(-2000px,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-right\": \"{from{opacity:0;transform:translate3d(100%,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-right-big\": \"{from{opacity:0;transform:translate3d(2000px,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-up\": \"{from{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-up-big\": \"{from{opacity:0;transform:translate3d(0,2000px,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-top-left\": \"{from{opacity:0;transform:translate3d(-100%,-100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-top-right\": \"{from{opacity:0;transform:translate3d(100%,-100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-bottom-left\": \"{from{opacity:0;transform:translate3d(-100%,100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-in-bottom-right\": \"{from{opacity:0;transform:translate3d(100%,100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}\",\n      \"fade-out\": \"{from{opacity:1}to{opacity:0}}\",\n      \"fade-out-down\": \"{from{opacity:1}to{opacity:0;transform:translate3d(0,100%,0)}}\",\n      \"fade-out-down-big\": \"{from{opacity:1}to{opacity:0;transform:translate3d(0,2000px,0)}}\",\n      \"fade-out-left\": \"{from{opacity:1}to{opacity:0;transform:translate3d(-100%,0,0)}}\",\n      \"fade-out-left-big\": \"{from{opacity:1}to{opacity:0;transform:translate3d(-2000px,0,0)}}\",\n      \"fade-out-right\": \"{from{opacity:1}to{opacity:0;transform:translate3d(100%,0,0)}}\",\n      \"fade-out-right-big\": \"{from{opacity:1}to{opacity:0;transform:translate3d(2000px,0,0)}}\",\n      \"fade-out-up\": \"{from{opacity:1}to{opacity:0;transform:translate3d(0,-100%,0)}}\",\n      \"fade-out-up-big\": \"{from{opacity:1}to{opacity:0;transform:translate3d(0,-2000px,0)}}\",\n      \"fade-out-top-left\": \"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(-100%,-100%,0)}}\",\n      \"fade-out-top-right\": \"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(100%,-100%,0)}}\",\n      \"fade-out-bottom-left\": \"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(-100%,100%,0)}}\",\n      \"fade-out-bottom-right\": \"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(100%,100%,0)}}\",\n      \"back-in-up\": \"{0%{opacity:0.7;transform:translateY(1200px) scale(0.7)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}\",\n      \"back-in-down\": \"{0%{opacity:0.7;transform:translateY(-1200px) scale(0.7)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}\",\n      \"back-in-right\": \"{0%{opacity:0.7;transform:translateX(2000px) scale(0.7)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}\",\n      \"back-in-left\": \"{0%{opacity:0.7;transform:translateX(-2000px) scale(0.7)}80%{opacity:0.7;transform:translateX(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}\",\n      \"back-out-up\": \"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:0.7;transform:translateY(-700px) scale(0.7)}}\",\n      \"back-out-down\": \"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:0.7;transform:translateY(700px) scale(0.7)}}\",\n      \"back-out-right\": \"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:0.7;transform:translateX(2000px) scale(0.7)}}\",\n      \"back-out-left\": \"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateX(-2000px) scale(0.7)}100%{opacity:0.7;transform:translateY(-700px) scale(0.7)}}\"\n    },\n    durations: {\n      \"pulse\": \"2s\",\n      \"heart-beat\": \"1.3s\",\n      \"bounce-in\": \"0.75s\",\n      \"bounce-out\": \"0.75s\",\n      \"flip-out-x\": \"0.75s\",\n      \"flip-out-y\": \"0.75s\",\n      \"hinge\": \"2s\"\n    },\n    timingFns: {\n      \"pulse\": \"cubic-bezier(0.4,0,.6,1)\",\n      \"ping\": \"cubic-bezier(0,0,.2,1)\",\n      \"head-shake\": \"ease-in-out\",\n      \"heart-beat\": \"ease-in-out\",\n      \"pulse-alt\": \"ease-in-out\",\n      \"light-speed-in-left\": \"ease-out\",\n      \"light-speed-in-right\": \"ease-out\",\n      \"light-speed-out-left\": \"ease-in\",\n      \"light-speed-out-right\": \"ease-in\"\n    },\n    properties: {\n      \"bounce-alt\": { \"transform-origin\": \"center bottom\" },\n      \"jello\": { \"transform-origin\": \"center\" },\n      \"swing\": { \"transform-origin\": \"top center\" },\n      \"flip\": { \"backface-visibility\": \"visible\" },\n      \"flip-in-x\": { \"backface-visibility\": \"visible !important\" },\n      \"flip-in-y\": { \"backface-visibility\": \"visible !important\" },\n      \"flip-out-x\": { \"backface-visibility\": \"visible !important\" },\n      \"flip-out-y\": { \"backface-visibility\": \"visible !important\" },\n      \"rotate-in\": { \"transform-origin\": \"center\" },\n      \"rotate-in-down-left\": { \"transform-origin\": \"left bottom\" },\n      \"rotate-in-down-right\": { \"transform-origin\": \"right bottom\" },\n      \"rotate-in-up-left\": { \"transform-origin\": \"left bottom\" },\n      \"rotate-in-up-right\": { \"transform-origin\": \"right bottom\" },\n      \"rotate-out\": { \"transform-origin\": \"center\" },\n      \"rotate-out-down-left\": { \"transform-origin\": \"left bottom\" },\n      \"rotate-out-down-right\": { \"transform-origin\": \"right bottom\" },\n      \"rotate-out-up-left\": { \"transform-origin\": \"left bottom\" },\n      \"rotate-out-up-right\": { \"transform-origin\": \"right bottom\" },\n      \"hinge\": { \"transform-origin\": \"top left\" },\n      \"zoom-out-down\": { \"transform-origin\": \"center bottom\" },\n      \"zoom-out-left\": { \"transform-origin\": \"left center\" },\n      \"zoom-out-right\": { \"transform-origin\": \"right center\" },\n      \"zoom-out-up\": { \"transform-origin\": \"center bottom\" }\n    }\n  },\n  media: {\n    portrait: \"(orientation: portrait)\",\n    landscape: \"(orientation: landscape)\",\n    os_dark: \"(prefers-color-scheme: dark)\",\n    os_light: \"(prefers-color-scheme: light)\",\n    motion_ok: \"(prefers-reduced-motion: no-preference)\",\n    motion_not_ok: \"(prefers-reduced-motion: reduce)\",\n    high_contrast: \"(prefers-contrast: high)\",\n    low_contrast: \"(prefers-contrast: low)\",\n    opacity_ok: \"(prefers-reduced-transparency: no-preference)\",\n    opacity_not_ok: \"(prefers-reduced-transparency: reduce)\",\n    useData_ok: \"(prefers-reduced-data: no-preference)\",\n    useData_not_ok: \"(prefers-reduced-data: reduce)\",\n    touch: \"(hover: none) and (pointer: coarse)\",\n    stylus: \"(hover: none) and (pointer: fine)\",\n    pointer: \"(hover) and (pointer: coarse)\",\n    mouse: \"(hover) and (pointer: fine)\",\n    hd_color: \"(dynamic-range: high)\"\n  }\n};\n\nconst variantCombinators = [\n  variantMatcher(\"svg\", (input) => `${input} svg`)\n];\n\nconst variantColorsScheme = [\n  variantMatcher(\".dark\", (input) => `.dark $$ ${input}`),\n  variantMatcher(\".light\", (input) => `.light $$ ${input}`),\n  variantParentMatcher(\"@dark\", \"@media (prefers-color-scheme: dark)\"),\n  variantParentMatcher(\"@light\", \"@media (prefers-color-scheme: light)\")\n];\n\nconst variantMotions = [\n  variantParentMatcher(\"motion-reduce\", \"@media (prefers-reduced-motion: reduce)\"),\n  variantParentMatcher(\"motion-safe\", \"@media (prefers-reduced-motion: no-preference)\")\n];\nconst variantOrientations = [\n  variantParentMatcher(\"landscape\", \"@media (orientation: landscape)\"),\n  variantParentMatcher(\"portrait\", \"@media (orientation: portrait)\")\n];\n\nconst variantSpaceAndDivide = (matcher) => {\n  if (/^space-?([xy])-?(-?.+)$/.test(matcher) || /^divide-/.test(matcher)) {\n    return {\n      matcher,\n      selector: (input) => {\n        return `${input}>:not([hidden])~:not([hidden])`;\n      }\n    };\n  }\n};\n\nconst placeholderModifier = (input, { theme }) => {\n  const m = input.match(/^(.*)\\b(placeholder-)(.+)$/);\n  if (m) {\n    const [, pre = \"\", p, body] = m;\n    if (hasParseableColor(body, theme) || hasOpacityValue(body)) {\n      return {\n        matcher: `${pre}placeholder-$ ${p}${body}`\n      };\n    }\n  }\n};\nfunction hasOpacityValue(body) {\n  const match = body.match(/^op(?:acity)?-?(.+)$/);\n  if (match && match[1] != null)\n    return handler.bracket.percent(match[1]) != null;\n  return false;\n}\n\nconst variants = (options) => [\n  placeholderModifier,\n  variantSpaceAndDivide,\n  ...variants$1(options),\n  ...variantOrientations,\n  ...variantMotions,\n  ...variantCombinators,\n  ...variantColorsScheme\n];\n\nconst autocomplete = [\n  ...autocomplete$1\n];\n\nconst presetWind = (options = {}) => {\n  options.dark = options.dark ?? \"class\";\n  options.attributifyPseudo = options.attributifyPseudo ?? false;\n  return {\n    name: \"@unocss/preset-wind\",\n    theme,\n    rules,\n    shortcuts,\n    variants: variants(options),\n    options,\n    autocomplete\n  };\n};\n\nexport { autocomplete, presetWind as default, presetWind, rules, shortcuts, theme, variants };\n", "import { theme, rules, shortcuts, variants, autocomplete } from '@unocss/preset-wind';\nimport { parseCssColor, colorToString } from '@unocss/preset-mini/utils';\n\nconst mixComponent = (v1, v2, w) => `calc(${v2} + (${v1} - ${v2}) * ${w} / 100)`;\nconst mixColor = (color1, color2, weight) => {\n  const colors = [color1, color2];\n  const cssColors = [];\n  for (let c = 0; c < 2; ++c) {\n    const color = typeof colors[c] === \"string\" ? parseCssColor(colors[c]) : colors[c];\n    if (!color || ![\"rgb\", \"rgba\"].includes(color.type))\n      return;\n    cssColors.push(color);\n  }\n  const newComponents = [];\n  for (let x = 0; x < 3; ++x)\n    newComponents.push(mixComponent(cssColors[0].components[x], cssColors[1].components[x], weight));\n  return {\n    type: \"rgb\",\n    components: newComponents,\n    alpha: mixComponent(cssColors[0].alpha ?? 1, cssColors[1].alpha ?? 1, weight)\n  };\n};\nconst tint = (color, weight) => mixColor(\"#fff\", color, weight);\nconst shade = (color, weight) => mixColor(\"#000\", color, weight);\nconst shift = (color, weight) => {\n  const num = parseFloat(`${weight}`);\n  if (!Number.isNaN(num))\n    return num > 0 ? shade(color, weight) : tint(color, -num);\n};\nconst fns = { tint, shade, shift };\nconst variantColorMix = (matcher) => {\n  const m = matcher.match(/^mix-(tint|shade|shift)-(-?\\d{1,3})[-:]/);\n  if (m) {\n    return {\n      matcher: matcher.slice(m[0].length),\n      body: (body) => {\n        body.forEach((v) => {\n          if (v[1]) {\n            const color = parseCssColor(`${v[1]}`);\n            if (color) {\n              const mixed = fns[m[1]](color, m[2]);\n              if (mixed)\n                v[1] = colorToString(mixed);\n            }\n          }\n        });\n        return body;\n      }\n    };\n  }\n};\n\nconst presetUno = (options = {}) => {\n  options.dark = options.dark ?? \"class\";\n  options.attributifyPseudo = options.attributifyPseudo ?? false;\n  return {\n    name: \"@unocss/preset-uno\",\n    theme,\n    rules,\n    shortcuts,\n    variants: [\n      ...variants(options),\n      variantColorMix\n    ],\n    options,\n    autocomplete\n  };\n};\n\nexport { presetUno as default, presetUno };\n", "import { isValidSelector, isAttributifySelector, extractorSplit } from '@unocss/core';\n\nconst strippedPrefixes = [\n  \"v-bind:\",\n  \":\"\n];\nconst splitterRE = /[\\s'\"`;]+/g;\nconst elementRE = /<\\w[\\w:\\.$-]*\\s((?:'[\\s\\S]*?'|\"[\\s\\S]*?\"|`[\\s\\S]*?`|\\{[\\s\\S]*?\\}|[\\s\\S]*?)*?)>/g;\nconst valuedAttributeRE = /([?]|(?!\\d|-{2}|-\\d)[a-zA-Z0-9\\u00A0-\\uFFFF-_:!%-]+)(?:=([\"'])([^\\2]*?)\\2)?/g;\nconst extractorAttributify = (options) => {\n  const ignoreAttributes = options?.ignoreAttributes ?? [];\n  const nonValuedAttribute = options?.nonValuedAttribute ?? true;\n  return {\n    name: \"attributify\",\n    extract({ code }) {\n      const result = Array.from(code.matchAll(elementRE)).flatMap((match) => Array.from((match[1] || \"\").matchAll(valuedAttributeRE))).flatMap(([, name, _, content]) => {\n        if (ignoreAttributes.includes(name))\n          return [];\n        for (const prefix of strippedPrefixes) {\n          if (name.startsWith(prefix)) {\n            name = name.slice(prefix.length);\n            break;\n          }\n        }\n        if (!content) {\n          if (isValidSelector(name) && nonValuedAttribute !== false)\n            return [`[${name}=\"\"]`];\n          return [];\n        }\n        if ([\"class\", \"className\"].includes(name)) {\n          return content.split(splitterRE).filter(isValidSelector);\n        } else {\n          return content.split(splitterRE).filter(Boolean).map((v) => `[${name}~=\"${v}\"]`);\n        }\n      });\n      return new Set(result);\n    }\n  };\n};\n\nconst variantsRE = /^(?!\\[(?:[^:]+):(?:.+)\\]$)((?:.+:)?!?)?(.*)$/;\nconst variantAttributify = (options = {}) => {\n  const prefix = options.prefix ?? \"un-\";\n  const prefixedOnly = options.prefixedOnly ?? false;\n  return (input) => {\n    const match = isAttributifySelector(input);\n    if (!match)\n      return;\n    let name = match[1];\n    if (name.startsWith(prefix))\n      name = name.slice(prefix.length);\n    else if (prefixedOnly)\n      return;\n    const content = match[2];\n    const [, variants = \"\", body = content] = content.match(variantsRE) || [];\n    if (body === \"~\" || !body)\n      return `${variants}${name}`;\n    else\n      return `${variants}${name}-${body}`;\n  };\n};\n\nconst preset = (options = {}) => {\n  options.strict = options.strict ?? false;\n  options.prefix = options.prefix ?? \"un-\";\n  options.prefixedOnly = options.prefixedOnly ?? false;\n  options.nonValuedAttribute = options.nonValuedAttribute ?? true;\n  options.ignoreAttributes = options.ignoreAttributes ?? [];\n  const variants = [\n    variantAttributify(options)\n  ];\n  const extractors = [\n    extractorAttributify(options)\n  ];\n  if (!options.strict)\n    extractors.unshift(extractorSplit);\n  return {\n    name: \"@unocss/preset-attributify\",\n    variants,\n    extractors,\n    options\n  };\n};\n\nexport { preset as default, extractorAttributify, variantAttributify };\n", "const unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nexport { calculateSize };\n", "import { calculateSize } from './size.mjs';\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width.toString() + \"\";\n  height = typeof height === \"string\" ? height : height.toString() + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + box.width.toString() + \" \" + box.height.toString()\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\nexport { iconToSVG };\n", "const defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\nexport { defaults, mergeCustomisations };\n", "const matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\nexport { fullIcon, iconDefaults, matchName };\n", "import { iconDefaults } from './index.mjs';\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\nexport { mergeIconData };\n", "import { iconDefaults, fullIcon } from '../icon/index.mjs';\nimport { mergeIconData } from '../icon/merge.mjs';\n\nfunction getIconData(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    const aliases = data.aliases;\n    if (aliases && aliases[name2] !== void 0) {\n      const item = aliases[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    const chars = data.chars;\n    if (!iteration && chars && chars[name2] !== void 0) {\n      return getIcon(chars[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\nexport { getIconData };\n", "import { warnOnce } from '@unocss/core';\nimport { iconToSVG } from '@iconify/utils/lib/svg/build';\nimport { defaults } from '@iconify/utils/lib/customisations';\nimport { getIconData } from '@iconify/utils/lib/icon-set/get-icon';\n\nconst isNode = typeof process < \"u\" && typeof process.stdout < \"u\";\nconst isVSCode = isNode && !!process.env.VSCODE_CWD;\nfunction encodeSvg(svg) {\n  return svg.replace(\"<svg\", ~svg.indexOf(\"xmlns\") ? \"<svg\" : '<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/{/g, \"%7B\").replace(/}/g, \"%7D\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\");\n}\n\nconst COLLECTION_NAME_PARTS_MAX = 3;\nasync function importFsModule() {\n  try {\n    return await import('./fs.mjs');\n  } catch {\n    try {\n      return require(\"./fs.cjs\");\n    } catch {\n      return void 0;\n    }\n  }\n}\nasync function searchForIcon(collection, id, collections, scale) {\n  if (!collection || !id)\n    return;\n  let iconSet = collections[collection];\n  if (typeof iconSet === \"function\")\n    iconSet = await iconSet();\n  if (!iconSet && isNode && !isVSCode) {\n    try {\n      const loadCollectionFromFS = await importFsModule().then((i) => i?.loadCollectionFromFS);\n      if (loadCollectionFromFS)\n        iconSet = await loadCollectionFromFS(collection);\n    } catch {\n    }\n  }\n  if (!iconSet)\n    return;\n  const iconData = getIconData(iconSet, id, true);\n  if (iconData) {\n    const { attributes, body } = iconToSVG(iconData, {\n      ...defaults,\n      height: `${scale}em`,\n      width: `${scale}em`\n    });\n    return body.includes(\"xlink:\") ? `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ${Object.entries(attributes).map((i) => `${i[0]}=\"${i[1]}\"`).join(\" \")}>${body}</svg>` : `<svg ${Object.entries(attributes).map((i) => `${i[0]}=\"${i[1]}\"`).join(\" \")}>${body}</svg>`;\n  }\n}\nconst preset = (options = {}) => {\n  const {\n    scale = 1,\n    mode = \"auto\",\n    prefix = \"i-\",\n    warn = false,\n    collections = {},\n    extraProperties = {},\n    layer = \"icons\"\n  } = options;\n  return {\n    name: \"@unocss/preset-icons\",\n    enforce: \"pre\",\n    options,\n    layers: {\n      icons: -10\n    },\n    rules: [[\n      new RegExp(`^${prefix}([a-z0-9:-]+)(?:\\\\?(mask|bg))?$`),\n      async ([full, body, _mode]) => {\n        let collection = \"\";\n        let name = \"\";\n        let svg;\n        if (body.includes(\":\")) {\n          [collection, name] = body.split(\":\");\n          svg = await searchForIcon(collection, name, collections, scale);\n        } else {\n          const parts = body.split(/-/g);\n          for (let i = COLLECTION_NAME_PARTS_MAX; i >= 1; i--) {\n            collection = parts.slice(0, i).join(\"-\");\n            name = parts.slice(i).join(\"-\");\n            svg = await searchForIcon(collection, name, collections, scale);\n            if (svg)\n              break;\n          }\n        }\n        if (!svg) {\n          if (warn)\n            warnOnce(`failed to load icon \"${full}\"`);\n          return;\n        }\n        _mode = _mode || mode;\n        if (_mode === \"auto\")\n          _mode = svg.includes(\"currentColor\") ? \"mask\" : \"background-img\";\n        const url = `url(\"data:image/svg+xml;utf8,${encodeSvg(svg)}\")`;\n        if (_mode === \"mask\") {\n          return {\n            \"--un-icon\": url,\n            \"mask\": \"var(--un-icon) no-repeat\",\n            \"mask-size\": \"100% 100%\",\n            \"-webkit-mask\": \"var(--un-icon) no-repeat\",\n            \"-webkit-mask-size\": \"100% 100%\",\n            \"background-color\": \"currentColor\",\n            \"height\": `${scale}em`,\n            \"width\": `${scale}em`,\n            ...extraProperties\n          };\n        } else {\n          return {\n            \"background\": `${url} no-repeat`,\n            \"background-size\": \"100% 100%\",\n            \"background-color\": \"transparent\",\n            \"height\": `${scale}em`,\n            \"width\": `${scale}em`,\n            ...extraProperties\n          };\n        }\n      },\n      { layer }\n    ]]\n  };\n};\n\nexport { preset as default, preset };\n", "import { toArray } from '@unocss/core';\n\nconst GoogleFontsProvider = {\n  name: \"google\",\n  getImportUrl(fonts) {\n    const strings = fonts.filter((i) => i.provider === \"google\").map((i) => {\n      let name = i.name.replace(/\\s+/g, \"+\");\n      if (i.weights?.length) {\n        name += i.italic ? `:ital,wght@${i.weights.flatMap((i2) => [`0,${i2}`, `1,${i2}`]).sort().join(\";\")}` : `:wght@${i.weights.sort().join(\";\")}`;\n      }\n      return `family=${name}`;\n    }).join(\"&\");\n    return `https://fonts.googleapis.com/css2?${strings}&display=swap`;\n  },\n  getFontName(font) {\n    return `\"${font.name}\"`;\n  }\n};\n\nconst NoneProvider = {\n  name: \"none\",\n  getPreflight() {\n    return \"\";\n  },\n  getFontName(font) {\n    return font.name;\n  }\n};\n\nconst layerName = \"__webfonts__\";\nfunction normalizedFontMeta(meta, defaultProvider) {\n  if (typeof meta !== \"string\") {\n    meta.provider = meta.provider ?? defaultProvider;\n    return meta;\n  }\n  const [name, weights = \"\"] = meta.split(\":\");\n  return {\n    name,\n    weights: weights.split(/[,;]\\s*/).filter(Boolean),\n    provider: defaultProvider\n  };\n}\nconst providers = {\n  google: GoogleFontsProvider,\n  none: NoneProvider\n};\nconst preset = (options = {}) => {\n  const {\n    provider: defaultProvider = \"google\",\n    extendTheme = true,\n    inlineImports = true,\n    themeKey = \"fontFamily\"\n  } = options;\n  const fontObject = Object.fromEntries(Object.entries(options.fonts || {}).map(([name, meta]) => [name, toArray(meta).map((m) => normalizedFontMeta(m, defaultProvider))]));\n  const fonts = Object.values(fontObject).flatMap((i) => i);\n  const importCache = {};\n  async function importUrl(url) {\n    if (inlineImports) {\n      if (!importCache[url]) {\n        try {\n          const { default: axios } = await import('axios');\n          const { data } = await axios.get(url, { headers: {} });\n          importCache[url] = data;\n        } catch (e) {\n          console.error(\"Failed to fetch web fonts\");\n          console.error(e);\n          if (typeof process !== \"undefined\" && process.env.CI)\n            throw e;\n        }\n      }\n      return importCache[url];\n    } else {\n      return `@import url('${url}')`;\n    }\n  }\n  const preset2 = {\n    name: \"@unocss/preset-web-fonts\",\n    layers: {\n      [layerName]: -Infinity\n    },\n    preflights: [\n      {\n        async getCSS() {\n          const names = new Set(fonts.map((i) => i.provider || defaultProvider));\n          const preflights = [];\n          for (const name of names) {\n            const fontsForProvider = fonts.filter((i) => i.provider === name);\n            const provider = providers[name];\n            if (provider.getImportUrl) {\n              const url = provider.getImportUrl(fontsForProvider);\n              if (url)\n                preflights.push(await importUrl(url));\n            }\n            preflights.push(provider.getPreflight?.(fontsForProvider));\n          }\n          return preflights.filter(Boolean).join(\"\\n\");\n        },\n        layer: layerName\n      }\n    ]\n  };\n  if (extendTheme) {\n    preset2.extendTheme = (theme) => {\n      if (!theme[themeKey])\n        theme[themeKey] = {};\n      const obj = Object.fromEntries(Object.entries(fontObject).map(([name, fonts2]) => [name, fonts2.map((f) => providers[f.provider || defaultProvider].getFontName(f))]));\n      for (const key of Object.keys(obj)) {\n        if (typeof theme[themeKey][key] === \"string\")\n          theme[themeKey][key] = obj[key].map((i) => `${i},`).join(\"\") + theme[themeKey][key];\n        else\n          theme[themeKey][key] = obj[key].join(\",\");\n      }\n    };\n  }\n  return preset2;\n};\n\nexport { preset as default, normalizedFontMeta };\n", "import { mergeDeep } from '@unocss/core';\n\nconst DEFAULT = {\n  \"h1,h2,h3,h4,h5,h6\": {\n    \"color\": \"var(--un-prose-headings)\",\n    \"font-weight\": \"600\",\n    \"line-height\": 1.25\n  },\n  \"a\": {\n    \"color\": \"var(--un-prose-links)\",\n    \"text-decoration\": \"underline\",\n    \"font-weight\": \"500\"\n  },\n  \"a code\": {\n    color: \"var(--un-prose-links)\"\n  },\n  \"p,ul,ol,pre\": {\n    \"margin\": \"1em 0\",\n    \"line-height\": 1.75\n  },\n  \"blockquote\": {\n    \"margin\": \"1em 0\",\n    \"padding-left\": \"1em\",\n    \"font-style\": \"italic\",\n    \"border-left\": \".25em solid var(--un-prose-borders)\"\n  },\n  \"h1\": {\n    \"margin\": \"1rem 0\",\n    \"font-size\": \"2.25em\"\n  },\n  \"h2\": {\n    \"margin\": \"1.75em 0 .5em\",\n    \"font-size\": \"1.75em\"\n  },\n  \"h3\": {\n    \"margin\": \"1.5em 0 .5em\",\n    \"font-size\": \"1.375em\"\n  },\n  \"h4\": {\n    \"margin\": \"1em 0\",\n    \"font-size\": \"1.125em\"\n  },\n  \"img,video\": {\n    \"max-width\": \"100%\"\n  },\n  \"figure,picture\": {\n    margin: \"1em 0\"\n  },\n  \"figcaption\": {\n    \"color\": \"var(--un-prose-captions)\",\n    \"font-size\": \".875em\"\n  },\n  \"code\": {\n    \"color\": \"var(--un-prose-code)\",\n    \"font-size\": \".875em\",\n    \"font-weight\": 600,\n    \"font-family\": \"ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation-Mono,Courier-New,monospace\"\n  },\n  \":not(pre) > code::before,:not(pre) > code::after\": {\n    content: '\"`\"'\n  },\n  \"pre\": {\n    \"padding\": \"1.25rem 1.5rem\",\n    \"overflow-x\": \"auto\",\n    \"border-radius\": \".375rem\"\n  },\n  \"pre,code\": {\n    \"white-space\": \"pre\",\n    \"word-spacing\": \"normal\",\n    \"word-break\": \"normal\",\n    \"word-wrap\": \"normal\",\n    \"-moz-tab-size\": 4,\n    \"-o-tab-size\": 4,\n    \"tab-size\": 4,\n    \"-webkit-hyphens\": \"none\",\n    \"-moz-hyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"background\": \"transparent\"\n  },\n  \"pre code\": {\n    \"font-weight\": \"inherit\"\n  },\n  \"ol,ul\": {\n    \"padding-left\": \"1.25em\"\n  },\n  \"ol\": {\n    \"list-style-type\": \"decimal\"\n  },\n  'ol[type=\"A\"]': {\n    \"list-style-type\": \"upper-alpha\"\n  },\n  'ol[type=\"a\"]': {\n    \"list-style-type\": \"lower-alpha\"\n  },\n  'ol[type=\"A\" s]': {\n    \"list-style-type\": \"upper-alpha\"\n  },\n  'ol[type=\"a\" s]': {\n    \"list-style-type\": \"lower-alpha\"\n  },\n  'ol[type=\"I\"]': {\n    \"list-style-type\": \"upper-roman\"\n  },\n  'ol[type=\"i\"]': {\n    \"list-style-type\": \"lower-roman\"\n  },\n  'ol[type=\"I\" s]': {\n    \"list-style-type\": \"upper-roman\"\n  },\n  'ol[type=\"i\" s]': {\n    \"list-style-type\": \"lower-roman\"\n  },\n  'ol[type=\"1\"]': {\n    \"list-style-type\": \"decimal\"\n  },\n  \"ul\": {\n    \"list-style-type\": \"disc\"\n  },\n  \"ol > li::marker,ul > li::marker,summary::marker\": {\n    color: \"var(--un-prose-lists)\"\n  },\n  \"hr\": {\n    margin: \"2em 0\",\n    border: \"1px solid var(--un-prose-hr)\"\n  },\n  \"table\": {\n    \"display\": \"block\",\n    \"margin\": \"1em 0\",\n    \"border-collapse\": \"collapse\",\n    \"overflow-x\": \"auto\"\n  },\n  \"tr:nth-child(2n)\": {\n    background: \"var(--un-prose-bg-soft)\"\n  },\n  \"td,th\": {\n    border: \"1px solid var(--un-prose-borders)\",\n    padding: \".625em 1em\"\n  },\n  \"abbr\": {\n    cursor: \"help\"\n  },\n  \"kbd\": {\n    \"color\": \"var(--un-prose-code)\",\n    \"border\": \"1px solid\",\n    \"padding\": \".25rem .5rem\",\n    \"font-size\": \".875em\",\n    \"border-radius\": \".25rem\"\n  },\n  \"details\": {\n    margin: \"1em 0\",\n    padding: \"1.25rem 1.5rem\",\n    background: \"var(--un-prose-bg-soft)\"\n  },\n  \"summary\": {\n    \"cursor\": \"pointer\",\n    \"font-weight\": \"600\"\n  }\n};\n\nfunction getCSS(selectorProse, className, preflights) {\n  let css = \"\";\n  for (const selector in preflights) {\n    const cssDeclarationBlock = preflights[selector];\n    const pseudoCSSMatchArray = selector.split(\",\").map((s) => {\n      const match = s.match(/::?(?:[\\(\\)\\:\\-\\d\\w]+)$/g);\n      if (match) {\n        const matchStr = match[0];\n        s = s.replace(matchStr, \"\");\n        return `${selectorProse} :where(${s}):not(.not-${className})${matchStr}`;\n      }\n      return null;\n    }).filter((v) => v);\n    if (pseudoCSSMatchArray.length) {\n      css += pseudoCSSMatchArray.join(\",\");\n    } else {\n      css += `${selectorProse} :where(${selector}):not(.not-${className})`;\n    }\n    css += \"{\";\n    for (const k in cssDeclarationBlock) {\n      const v = cssDeclarationBlock[k];\n      css += `${k}:${v};`;\n    }\n    css += \"}\";\n  }\n  return css;\n}\nfunction getPreflights(selectorProse, className, cssExtend) {\n  if (!selectorProse.startsWith(\"[\"))\n    selectorProse = `.${selectorProse}`;\n  if (cssExtend)\n    return getCSS(selectorProse, className, mergeDeep(DEFAULT, cssExtend));\n  return getCSS(selectorProse, className, DEFAULT);\n}\n\nfunction presetTypography(options) {\n  let hasProseClass = false;\n  let selectorProse = \"\";\n  const className = options?.className || \"prose\";\n  const classNameRE = new RegExp(`^${className}$`);\n  const colorsRE = new RegExp(`^${className}-([-\\\\w]+)$`);\n  const invertRE = new RegExp(`^${className}-invert$`);\n  const cssExtend = options?.cssExtend;\n  return {\n    name: \"@unocss/preset-typography\",\n    enforce: \"post\",\n    layers: { typography: -1 },\n    rules: [\n      [\n        classNameRE,\n        (_, { rawSelector }) => {\n          hasProseClass = true;\n          selectorProse = rawSelector;\n          return { \"color\": \"var(--un-prose-body)\", \"max-width\": \"65ch\" };\n        },\n        { layer: \"typography\" }\n      ],\n      [\n        colorsRE,\n        ([, color], { theme }) => {\n          const baseColor = theme.colors?.[color];\n          if (baseColor == null)\n            return;\n          const colorObject = typeof baseColor === \"object\" ? baseColor : {};\n          return {\n            \"--un-prose-body\": colorObject[700] ?? baseColor,\n            \"--un-prose-headings\": colorObject[900] ?? baseColor,\n            \"--un-prose-links\": colorObject[900] ?? baseColor,\n            \"--un-prose-lists\": colorObject[400] ?? baseColor,\n            \"--un-prose-hr\": colorObject[200] ?? baseColor,\n            \"--un-prose-captions\": colorObject[500] ?? baseColor,\n            \"--un-prose-code\": colorObject[900] ?? baseColor,\n            \"--un-prose-borders\": colorObject[200] ?? baseColor,\n            \"--un-prose-bg-soft\": colorObject[100] ?? baseColor,\n            \"--un-prose-invert-body\": colorObject[200] ?? baseColor,\n            \"--un-prose-invert-headings\": colorObject[100] ?? baseColor,\n            \"--un-prose-invert-links\": colorObject[100] ?? baseColor,\n            \"--un-prose-invert-lists\": colorObject[500] ?? baseColor,\n            \"--un-prose-invert-hr\": colorObject[700] ?? baseColor,\n            \"--un-prose-invert-captions\": colorObject[400] ?? baseColor,\n            \"--un-prose-invert-code\": colorObject[100] ?? baseColor,\n            \"--un-prose-invert-borders\": colorObject[700] ?? baseColor,\n            \"--un-prose-invert-bg-soft\": colorObject[800] ?? baseColor\n          };\n        },\n        { layer: \"typography\" }\n      ],\n      [\n        invertRE,\n        () => {\n          return {\n            \"--un-prose-body\": \"var(--un-prose-invert-body)\",\n            \"--un-prose-headings\": \"var(--un-prose-invert-headings)\",\n            \"--un-prose-links\": \"var(--un-prose-invert-links)\",\n            \"--un-prose-lists\": \"var(--un-prose-invert-lists)\",\n            \"--un-prose-hr\": \"var(--un-prose-invert-hr)\",\n            \"--un-prose-captions\": \"var(--un-prose-invert-captions)\",\n            \"--un-prose-code\": \"var(--un-prose-invert-code)\",\n            \"--un-prose-borders\": \"var(--un-prose-invert-borders)\",\n            \"--un-prose-bg-soft\": \"var(--un-prose-invert-bg-soft)\"\n          };\n        },\n        { layer: \"typography\" }\n      ]\n    ],\n    preflights: [\n      {\n        layer: \"typography\",\n        getCSS: () => hasProseClass ? getPreflights(selectorProse, className, cssExtend) : void 0\n      }\n    ]\n  };\n}\n\nexport { presetTypography as default, presetTypography };\n", "// CSS Syntax Module Level 3\n// https://www.w3.org/TR/css-syntax-3/\nexport const EOF = 0;                 // <EOF-token>\nexport const Ident = 1;               // <ident-token>\nexport const Function = 2;            // <function-token>\nexport const AtKeyword = 3;           // <at-keyword-token>\nexport const Hash = 4;                // <hash-token>\nexport const String = 5;              // <string-token>\nexport const BadString = 6;           // <bad-string-token>\nexport const Url = 7;                 // <url-token>\nexport const BadUrl = 8;              // <bad-url-token>\nexport const Delim = 9;               // <delim-token>\nexport const Number = 10;             // <number-token>\nexport const Percentage = 11;         // <percentage-token>\nexport const Dimension = 12;          // <dimension-token>\nexport const WhiteSpace = 13;         // <whitespace-token>\nexport const CDO = 14;                // <CDO-token>\nexport const CDC = 15;                // <CDC-token>\nexport const Colon = 16;              // <colon-token>     :\nexport const Semicolon = 17;          // <semicolon-token> ;\nexport const Comma = 18;              // <comma-token>     ,\nexport const LeftSquareBracket = 19;  // <[-token>\nexport const RightSquareBracket = 20; // <]-token>\nexport const LeftParenthesis = 21;    // <(-token>\nexport const RightParenthesis = 22;   // <)-token>\nexport const LeftCurlyBracket = 23;   // <{-token>\nexport const RightCurlyBracket = 24;  // <}-token>\nexport const Comment = 25;\n", "const EOF = 0;\n\n// https://drafts.csswg.org/css-syntax-3/\n// § 4.2. Definitions\n\n// digit\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\nexport function isDigit(code) {\n    return code >= 0x0030 && code <= 0x0039;\n}\n\n// hex digit\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\nexport function isHexDigit(code) {\n    return (\n        isDigit(code) || // 0 .. 9\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\n    );\n}\n\n// uppercase letter\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\nexport function isUppercaseLetter(code) {\n    return code >= 0x0041 && code <= 0x005A;\n}\n\n// lowercase letter\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\nexport function isLowercaseLetter(code) {\n    return code >= 0x0061 && code <= 0x007A;\n}\n\n// letter\n// An uppercase letter or a lowercase letter.\nexport function isLetter(code) {\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\n}\n\n// non-ASCII code point\n// A code point with a value equal to or greater than U+0080 <control>.\nexport function isNonAscii(code) {\n    return code >= 0x0080;\n}\n\n// name-start code point\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\nexport function isNameStart(code) {\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\n}\n\n// name code point\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\nexport function isName(code) {\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\n}\n\n// non-printable code point\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\nexport function isNonPrintable(code) {\n    return (\n        (code >= 0x0000 && code <= 0x0008) ||\n        (code === 0x000B) ||\n        (code >= 0x000E && code <= 0x001F) ||\n        (code === 0x007F)\n    );\n}\n\n// newline\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\n// as they are converted to U+000A LINE FEED during preprocessing.\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\nexport function isNewline(code) {\n    return code === 0x000A || code === 0x000D || code === 0x000C;\n}\n\n// whitespace\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\nexport function isWhiteSpace(code) {\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\n}\n\n// § 4.3.8. Check if two code points are a valid escape\nexport function isValidEscape(first, second) {\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\n    if (first !== 0x005C) {\n        return false;\n    }\n\n    // Otherwise, if the second code point is a newline or EOF, return false.\n    if (isNewline(second) || second === EOF) {\n        return false;\n    }\n\n    // Otherwise, return true.\n    return true;\n}\n\n// § 4.3.9. Check if three code points would start an identifier\nexport function isIdentifierStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002D HYPHEN-MINUS\n    if (first === 0x002D) {\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\n        return (\n            isNameStart(second) ||\n            second === 0x002D ||\n            isValidEscape(second, third)\n        );\n    }\n\n    // name-start code point\n    if (isNameStart(first)) {\n        // Return true.\n        return true;\n    }\n\n    // U+005C REVERSE SOLIDUS (\\)\n    if (first === 0x005C) {\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\n        return isValidEscape(first, second);\n    }\n\n    // anything else\n    // Return false.\n    return false;\n}\n\n// § 4.3.10. Check if three code points would start a number\nexport function isNumberStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (first === 0x002B || first === 0x002D) {\n        // If the second code point is a digit, return true.\n        if (isDigit(second)) {\n            return 2;\n        }\n\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\n        // and the third code point is a digit, return true.\n        // Otherwise, return false.\n        return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    if (first === 0x002E) {\n        // If the second code point is a digit, return true. Otherwise, return false.\n        return isDigit(second) ? 2 : 0;\n    }\n\n    // digit\n    if (isDigit(first)) {\n        // Return true.\n        return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n}\n\n//\n// Misc\n//\n\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\nexport function isBOM(code) {\n    // UTF-16BE\n    if (code === 0xFEFF) {\n        return 1;\n    }\n\n    // UTF-16LE\n    if (code === 0xFFFE) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// Fast code category\n// Only ASCII code points has a special meaning, that's why we define a maps for 0..127 codes only\nconst CATEGORY = new Array(0x80);\nexport const EofCategory = 0x80;\nexport const WhiteSpaceCategory = 0x82;\nexport const DigitCategory = 0x83;\nexport const NameStartCategory = 0x84;\nexport const NonPrintableCategory = 0x85;\n\nfor (let i = 0; i < CATEGORY.length; i++) {\n    CATEGORY[i] =\n        isWhiteSpace(i) && WhiteSpaceCategory ||\n        isDigit(i) && DigitCategory ||\n        isNameStart(i) && NameStartCategory ||\n        isNonPrintable(i) && NonPrintableCategory ||\n        i || EofCategory;\n}\n\nexport function charCodeCategory(code) {\n    return code < 0x80 ? CATEGORY[code] : NameStartCategory;\n}\n", "import {\n    isDigit,\n    isHexDigit,\n    isUppercaseLetter,\n    isName,\n    isWhiteSpace,\n    isValidEscape\n} from './char-code-definitions.js';\n\nfunction getCharCode(source, offset) {\n    return offset < source.length ? source.charCodeAt(offset) : 0;\n}\n\nexport function getNewlineLength(source, offset, code) {\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\n        return 2;\n    }\n\n    return 1;\n}\n\nexport function cmpChar(testStr, offset, referenceCode) {\n    let code = testStr.charCodeAt(offset);\n\n    // code.toLowerCase() for A..Z\n    if (isUppercaseLetter(code)) {\n        code = code | 32;\n    }\n\n    return code === referenceCode;\n}\n\nexport function cmpStr(testStr, start, end, referenceStr) {\n    if (end - start !== referenceStr.length) {\n        return false;\n    }\n\n    if (start < 0 || end > testStr.length) {\n        return false;\n    }\n\n    for (let i = start; i < end; i++) {\n        const referenceCode = referenceStr.charCodeAt(i - start);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for A..Z\n        if (isUppercaseLetter(testCode)) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function findWhiteSpaceStart(source, offset) {\n    for (; offset >= 0; offset--) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset + 1;\n}\n\nexport function findWhiteSpaceEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\nexport function findDecimalNumberEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isDigit(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\nexport function consumeEscaped(source, offset) {\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\n    // that the next input code point has already been verified to be part of a valid escape.\n    offset += 2;\n\n    // hex digit\n    if (isHexDigit(getCharCode(source, offset - 1))) {\n        // Consume as many hex digits as possible, but no more than 5.\n        // Note that this means 1-6 hex digits have been consumed in total.\n        for (const maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\n            if (!isHexDigit(getCharCode(source, offset))) {\n                break;\n            }\n        }\n\n        // If the next input code point is whitespace, consume it as well.\n        const code = getCharCode(source, offset);\n        if (isWhiteSpace(code)) {\n            offset += getNewlineLength(source, offset, code);\n        }\n    }\n\n    return offset;\n}\n\n// §4.3.11. Consume a name\n// Note: This algorithm does not do the verification of the first few code points that are necessary\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\n// ensure that the stream starts with an identifier before calling this algorithm.\nexport function consumeName(source, offset) {\n    // Let result initially be an empty string.\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // name code point\n        if (isName(code)) {\n            // Append the code point to result.\n            continue;\n        }\n\n        // the stream starts with a valid escape\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point. Append the returned code point to result.\n            offset = consumeEscaped(source, offset) - 1;\n            continue;\n        }\n\n        // anything else\n        // Reconsume the current input code point. Return result.\n        break;\n    }\n\n    return offset;\n}\n\n// §4.3.12. Consume a number\nexport function consumeNumber(source, offset) {\n    let code = source.charCodeAt(offset);\n\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\n    // consume it and append it to repr.\n    if (code === 0x002B || code === 0x002D) {\n        code = source.charCodeAt(offset += 1);\n    }\n\n    // 3. While the next input code point is a digit, consume it and append it to repr.\n    if (isDigit(code)) {\n        offset = findDecimalNumberEnd(source, offset + 1);\n        code = source.charCodeAt(offset);\n    }\n\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\n        // 4.1 Consume them.\n        // 4.2 Append them to repr.\n        offset += 2;\n\n        // 4.3 Set type to \"number\".\n        // TODO\n\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\n\n        offset = findDecimalNumberEnd(source, offset);\n    }\n\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\n    if (cmpChar(source, offset, 101 /* e */)) {\n        let sign = 0;\n        code = source.charCodeAt(offset + 1);\n\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\n        if (code === 0x002D || code === 0x002B) {\n            sign = 1;\n            code = source.charCodeAt(offset + 2);\n        }\n\n        // ... followed by a digit\n        if (isDigit(code)) {\n            // 5.1 Consume them.\n            // 5.2 Append them to repr.\n\n            // 5.3 Set type to \"number\".\n            // TODO\n\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.14. Consume the remnants of a bad url\n// ... its sole use is to consume enough of the input stream to reach a recovery point\n// where normal tokenizing can resume.\nexport function consumeBadUrlRemnants(source, offset) {\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // U+0029 RIGHT PARENTHESIS ())\n        // EOF\n        if (code === 0x0029) {\n            // Return.\n            offset++;\n            break;\n        }\n\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point.\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\n            // without ending the <bad-url-token>. This is otherwise identical to\n            // the \"anything else\" clause.\n            offset = consumeEscaped(source, offset);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\n// Note: This algorithm assumes that escaped is valid without leading U+005C REVERSE SOLIDUS (\\)\nexport function decodeEscaped(escaped) {\n    // Single char escaped that's not a hex digit\n    if (escaped.length === 1 && !isHexDigit(escaped.charCodeAt(0))) {\n        return escaped[0];\n    }\n\n    // Interpret the hex digits as a hexadecimal number.\n    let code = parseInt(escaped, 16);\n\n    if (\n        (code === 0) ||                       // If this number is zero,\n        (code >= 0xD800 && code <= 0xDFFF) || // or is for a surrogate,\n        (code > 0x10FFFF)                     // or is greater than the maximum allowed code point\n    ) {\n        // ... return U+FFFD REPLACEMENT CHARACTER\n        code = 0xFFFD;\n    }\n\n    // Otherwise, return the code point with that value.\n    return String.fromCodePoint(code);\n}\n", "export default [\n    'EOF-token',\n    'ident-token',\n    'function-token',\n    'at-keyword-token',\n    'hash-token',\n    'string-token',\n    'bad-string-token',\n    'url-token',\n    'bad-url-token',\n    'delim-token',\n    'number-token',\n    'percentage-token',\n    'dimension-token',\n    'whitespace-token',\n    'CDO-token',\n    'CDC-token',\n    'colon-token',\n    'semicolon-token',\n    'comma-token',\n    '[-token',\n    ']-token',\n    '(-token',\n    ')-token',\n    '{-token',\n    '}-token'\n];\n", "const MIN_SIZE = 16 * 1024;\n\nexport function adoptBuffer(buffer = null, size) {\n    if (buffer === null || buffer.length < size) {\n        return new Uint32Array(Math.max(size + 1024, MIN_SIZE));\n    }\n\n    return buffer;\n};\n", "import { adoptBuffer } from './adopt-buffer.js';\nimport { isBOM } from './char-code-definitions.js';\n\nconst N = 10;\nconst F = 12;\nconst R = 13;\n\nfunction computeLinesAndColumns(host) {\n    const source = host.source;\n    const sourceLength = source.length;\n    const startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\n    const lines = adoptBuffer(host.lines, sourceLength);\n    const columns = adoptBuffer(host.columns, sourceLength);\n    let line = host.startLine;\n    let column = host.startColumn;\n\n    for (let i = startOffset; i < sourceLength; i++) {\n        const code = source.charCodeAt(i);\n\n        lines[i] = line;\n        columns[i] = column++;\n\n        if (code === N || code === R || code === F) {\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n                i++;\n                lines[i] = line;\n                columns[i] = column;\n            }\n\n            line++;\n            column = 1;\n        }\n    }\n\n    lines[sourceLength] = line;\n    columns[sourceLength] = column;\n\n    host.lines = lines;\n    host.columns = columns;\n    host.computed = true;\n}\n\nexport class OffsetToLocation {\n    constructor() {\n        this.lines = null;\n        this.columns = null;\n        this.computed = false;\n    }\n    setSource(source, startOffset = 0, startLine = 1, startColumn = 1) {\n        this.source = source;\n        this.startOffset = startOffset;\n        this.startLine = startLine;\n        this.startColumn = startColumn;\n        this.computed = false;\n    }\n    getLocation(offset, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            offset: this.startOffset + offset,\n            line: this.lines[offset],\n            column: this.columns[offset]\n        };\n    }\n    getLocationRange(start, end, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            start: {\n                offset: this.startOffset + start,\n                line: this.lines[start],\n                column: this.columns[start]\n            },\n            end: {\n                offset: this.startOffset + end,\n                line: this.lines[end],\n                column: this.columns[end]\n            }\n        };\n    }\n};\n", "import { adoptBuffer } from './adopt-buffer.js';\nimport { cmpStr } from './utils.js';\nimport tokenNames from './names.js';\nimport {\n    WhiteSpace,\n    Comment,\n    Delim,\n    EOF,\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from './types.js';\n\nconst OFFSET_MASK = 0x00FFFFFF;\nconst TYPE_SHIFT = 24;\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\nexport class TokenStream {\n    constructor(source, tokenize) {\n        this.setSource(source, tokenize);\n    }\n    reset() {\n        this.eof = false;\n        this.tokenIndex = -1;\n        this.tokenType = 0;\n        this.tokenStart = this.firstCharOffset;\n        this.tokenEnd = this.firstCharOffset;\n    }\n    setSource(source = '', tokenize = () => {}) {\n        source = String(source || '');\n\n        const sourceLength = source.length;\n        const offsetAndType = adoptBuffer(this.offsetAndType, source.length + 1); // +1 because of eof-token\n        const balance = adoptBuffer(this.balance, source.length + 1);\n        let tokenCount = 0;\n        let balanceCloseType = 0;\n        let balanceStart = 0;\n        let firstCharOffset = -1;\n\n        // capture buffers\n        this.offsetAndType = null;\n        this.balance = null;\n\n        tokenize(source, (type, start, end) => {\n            switch (type) {\n                default:\n                    balance[tokenCount] = sourceLength;\n                    break;\n\n                case balanceCloseType: {\n                    let balancePrev = balanceStart & OFFSET_MASK;\n                    balanceStart = balance[balancePrev];\n                    balanceCloseType = balanceStart >> TYPE_SHIFT;\n                    balance[tokenCount] = balancePrev;\n                    balance[balancePrev++] = tokenCount;\n                    for (; balancePrev < tokenCount; balancePrev++) {\n                        if (balance[balancePrev] === sourceLength) {\n                            balance[balancePrev] = tokenCount;\n                        }\n                    }\n                    break;\n                }\n\n                case LeftParenthesis:\n                case FunctionToken:\n                case LeftSquareBracket:\n                case LeftCurlyBracket:\n                    balance[tokenCount] = balanceStart;\n                    balanceCloseType = balancePair.get(type);\n                    balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\n                    break;\n            }\n\n            offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | end;\n            if (firstCharOffset === -1) {\n                firstCharOffset = start;\n            }\n        });\n\n        // finalize buffers\n        offsetAndType[tokenCount] = (EOF << TYPE_SHIFT) | sourceLength; // <EOF-token>\n        balance[tokenCount] = sourceLength;\n        balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\n        while (balanceStart !== 0) {\n            const balancePrev = balanceStart & OFFSET_MASK;\n            balanceStart = balance[balancePrev];\n            balance[balancePrev] = sourceLength;\n        }\n\n        this.source = source;\n        this.firstCharOffset = firstCharOffset === -1 ? 0 : firstCharOffset;\n        this.tokenCount = tokenCount;\n        this.offsetAndType = offsetAndType;\n        this.balance = balance;\n\n        this.reset();\n        this.next();\n    }\n\n    lookupType(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\n        }\n\n        return EOF;\n    }\n    lookupOffset(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\n        }\n\n        return this.source.length;\n    }\n    lookupValue(offset, referenceStr) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return cmpStr(\n                this.source,\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\n                this.offsetAndType[offset] & OFFSET_MASK,\n                referenceStr\n            );\n        }\n\n        return false;\n    }\n    getTokenStart(tokenIndex) {\n        if (tokenIndex === this.tokenIndex) {\n            return this.tokenStart;\n        }\n\n        if (tokenIndex > 0) {\n            return tokenIndex < this.tokenCount\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\n        }\n\n        return this.firstCharOffset;\n    }\n    substrToCursor(start) {\n        return this.source.substring(start, this.tokenStart);\n    }\n\n    isBalanceEdge(pos) {\n        return this.balance[this.tokenIndex] < pos;\n    }\n    isDelim(code, offset) {\n        if (offset) {\n            return (\n                this.lookupType(offset) === Delim &&\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\n            );\n        }\n\n        return (\n            this.tokenType === Delim &&\n            this.source.charCodeAt(this.tokenStart) === code\n        );\n    }\n\n    skip(tokenCount) {\n        let next = this.tokenIndex + tokenCount;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.tokenIndex = this.tokenCount;\n            this.next();\n        }\n    }\n    next() {\n        let next = this.tokenIndex + 1;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.tokenEnd;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.eof = true;\n            this.tokenIndex = this.tokenCount;\n            this.tokenType = EOF;\n            this.tokenStart = this.tokenEnd = this.source.length;\n        }\n    }\n    skipSC() {\n        while (this.tokenType === WhiteSpace || this.tokenType === Comment) {\n            this.next();\n        }\n    }\n    skipUntilBalanced(startToken, stopConsume) {\n        let cursor = startToken;\n        let balanceEnd;\n        let offset;\n\n        loop:\n        for (; cursor < this.tokenCount; cursor++) {\n            balanceEnd = this.balance[cursor];\n\n            // stop scanning on balance edge that points to offset before start token\n            if (balanceEnd < startToken) {\n                break loop;\n            }\n\n            offset = cursor > 0 ? this.offsetAndType[cursor - 1] & OFFSET_MASK : this.firstCharOffset;\n\n            // check stop condition\n            switch (stopConsume(this.source.charCodeAt(offset))) {\n                case 1: // just stop\n                    break loop;\n\n                case 2: // stop & included\n                    cursor++;\n                    break loop;\n\n                default:\n                    // fast forward to the end of balanced block\n                    if (this.balance[balanceEnd] === cursor) {\n                        cursor = balanceEnd;\n                    }\n            }\n        }\n\n        this.skip(cursor - this.tokenIndex);\n    }\n\n    forEachToken(fn) {\n        for (let i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {\n            const start = offset;\n            const item = this.offsetAndType[i];\n            const end = item & OFFSET_MASK;\n            const type = item >> TYPE_SHIFT;\n\n            offset = end;\n\n            fn(type, start, end, i);\n        }\n    }\n    dump() {\n        const tokens = new Array(this.tokenCount);\n\n        this.forEachToken((type, start, end, index) => {\n            tokens[index] = {\n                idx: index,\n                type: tokenNames[type],\n                chunk: this.source.substring(start, end),\n                balance: this.balance[index]\n            };\n        });\n\n        return tokens;\n    }\n};\n", "import * as TYPE from './types.js';\nimport {\n    isNewline,\n    isName,\n    isValidEscape,\n    isNumberStart,\n    isIdentifierStart,\n    isBOM,\n    charCodeCategory,\n    WhiteSpaceCategory,\n    DigitCategory,\n    NameStartCategory,\n    NonPrintableCategory\n} from './char-code-definitions.js';\nimport {\n    cmpStr,\n    getNewlineLength,\n    findWhiteSpaceEnd,\n    consumeEscaped,\n    consumeName,\n    consumeNumber,\n    consumeBadUrlRemnants\n} from './utils.js';\n\nexport function tokenize(source, onToken) {\n    function getCharCode(offset) {\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    // § 4.3.3. Consume a numeric token\n    function consumeNumericToken() {\n        // Consume a number and let number be the result.\n        offset = consumeNumber(source, offset);\n\n        // If the next 3 input code points would start an identifier, then:\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\n            // Return the <dimension-token>.\n            type = TYPE.Dimension;\n            offset = consumeName(source, offset);\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\n        if (getCharCode(offset) === 0x0025) {\n            // Create a <percentage-token> with the same value as number, and return it.\n            type = TYPE.Percentage;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\n        type = TYPE.Number;\n    }\n\n    // § 4.3.4. Consume an ident-like token\n    function consumeIdentLikeToken() {\n        const nameStartOffset = offset;\n\n        // Consume a name, and let string be the result.\n        offset = consumeName(source, offset);\n\n        // If string’s value is an ASCII case-insensitive match for \"url\",\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n            // While the next two input code points are whitespace, consume the next input code point.\n            offset = findWhiteSpaceEnd(source, offset + 1);\n\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\n            // then create a <function-token> with its value set to string and return it.\n            if (getCharCode(offset) === 0x0022 ||\n                getCharCode(offset) === 0x0027) {\n                type = TYPE.Function;\n                offset = nameStartOffset + 4;\n                return;\n            }\n\n            // Otherwise, consume a url token, and return it.\n            consumeUrlToken();\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        // Create a <function-token> with its value set to string and return it.\n        if (getCharCode(offset) === 0x0028) {\n            type = TYPE.Function;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create an <ident-token> with its value set to string and return it.\n        type = TYPE.Ident;\n    }\n\n    // § 4.3.5. Consume a string token\n    function consumeStringToken(endingCodePoint) {\n        // This algorithm may be called with an ending code point, which denotes the code point\n        // that ends the string. If an ending code point is not specified,\n        // the current input code point is used.\n        if (!endingCodePoint) {\n            endingCodePoint = getCharCode(offset++);\n        }\n\n        // Initially create a <string-token> with its value set to the empty string.\n        type = TYPE.String;\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // ending code point\n                case endingCodePoint:\n                    // Return the <string-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <string-token>.\n                    // return;\n\n                // newline\n                case WhiteSpaceCategory:\n                    if (isNewline(code)) {\n                        // This is a parse error. Reconsume the current input code point,\n                        // create a <bad-string-token>, and return it.\n                        offset += getNewlineLength(source, offset, code);\n                        type = TYPE.BadString;\n                        return;\n                    }\n                    break;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the next input code point is EOF, do nothing.\n                    if (offset === source.length - 1) {\n                        break;\n                    }\n\n                    const nextCode = getCharCode(offset + 1);\n\n                    // Otherwise, if the next input code point is a newline, consume it.\n                    if (isNewline(nextCode)) {\n                        offset += getNewlineLength(source, offset + 1, nextCode);\n                    } else if (isValidEscape(code, nextCode)) {\n                        // Otherwise, (the stream starts with a valid escape) consume\n                        // an escaped code point and append the returned code point to\n                        // the <string-token>’s value.\n                        offset = consumeEscaped(source, offset) - 1;\n                    }\n                    break;\n\n                // anything else\n                // Append the current input code point to the <string-token>’s value.\n            }\n        }\n    }\n\n    // § 4.3.6. Consume a url token\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\n    function consumeUrlToken() {\n        // Initially create a <url-token> with its value set to the empty string.\n        type = TYPE.Url;\n\n        // Consume as much whitespace as possible.\n        offset = findWhiteSpaceEnd(source, offset);\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // U+0029 RIGHT PARENTHESIS ())\n                case 0x0029:\n                    // Return the <url-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <url-token>.\n                    // return;\n\n                // whitespace\n                case WhiteSpaceCategory:\n                    // Consume as much whitespace as possible.\n                    offset = findWhiteSpaceEnd(source, offset);\n\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\n                    // consume it and return the <url-token>\n                    // (if EOF was encountered, this is a parse error);\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n                        if (offset < source.length) {\n                            offset++;\n                        }\n                        return;\n                    }\n\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\n                    // and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+0022 QUOTATION MARK (\")\n                // U+0027 APOSTROPHE (')\n                // U+0028 LEFT PARENTHESIS (()\n                // non-printable code point\n                case 0x0022:\n                case 0x0027:\n                case 0x0028:\n                case NonPrintableCategory:\n                    // This is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the stream starts with a valid escape, consume an escaped code point and\n                    // append the returned code point to the <url-token>’s value.\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\n                        offset = consumeEscaped(source, offset) - 1;\n                        break;\n                    }\n\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // anything else\n                // Append the current input code point to the <url-token>’s value.\n            }\n        }\n    }\n\n    // ensure source is a string\n    source = String(source || '');\n\n    const sourceLength = source.length;\n    let start = isBOM(getCharCode(0));\n    let offset = start;\n    let type;\n\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\n    // § 4.3.1. Consume a token\n    while (offset < sourceLength) {\n        const code = source.charCodeAt(offset);\n\n        switch (charCodeCategory(code)) {\n            // whitespace\n            case WhiteSpaceCategory:\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\n                type = TYPE.WhiteSpace;\n                offset = findWhiteSpaceEnd(source, offset + 1);\n                break;\n\n            // U+0022 QUOTATION MARK (\")\n            case 0x0022:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0023 NUMBER SIGN (#)\n            case 0x0023:\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // Create a <hash-token>.\n                    type = TYPE.Hash;\n\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    //     // TODO: set id flag\n                    // }\n\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\n                    offset = consumeName(source, offset + 1);\n\n                    // Return the <hash-token>.\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0027 APOSTROPHE (')\n            case 0x0027:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0028 LEFT PARENTHESIS (()\n            case 0x0028:\n                // Return a <(-token>.\n                type = TYPE.LeftParenthesis;\n                offset++;\n                break;\n\n            // U+0029 RIGHT PARENTHESIS ())\n            case 0x0029:\n                // Return a <)-token>.\n                type = TYPE.RightParenthesis;\n                offset++;\n                break;\n\n            // U+002B PLUS SIGN (+)\n            case 0x002B:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+002C COMMA (,)\n            case 0x002C:\n                // Return a <comma-token>.\n                type = TYPE.Comma;\n                offset++;\n                break;\n\n            // U+002D HYPHEN-MINUS (-)\n            case 0x002D:\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\n                    if (getCharCode(offset + 1) === 0x002D &&\n                        getCharCode(offset + 2) === 0x003E) {\n                        type = TYPE.CDC;\n                        offset = offset + 3;\n                    } else {\n                        // Otherwise, if the input stream starts with an identifier, ...\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\n                            consumeIdentLikeToken();\n                        } else {\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\n                            type = TYPE.Delim;\n                            offset++;\n                        }\n                    }\n                }\n                break;\n\n            // U+002E FULL STOP (.)\n            case 0x002E:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+002F SOLIDUS (/)\n            case 0x002F:\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\n                if (getCharCode(offset + 1) === 0x002A) {\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\n                    type = TYPE.Comment;\n                    offset = source.indexOf('*/', offset + 2);\n                    offset = offset === -1 ? source.length : offset + 2;\n                } else {\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+003A COLON (:)\n            case 0x003A:\n                // Return a <colon-token>.\n                type = TYPE.Colon;\n                offset++;\n                break;\n\n            // U+003B SEMICOLON (;)\n            case 0x003B:\n                // Return a <semicolon-token>.\n                type = TYPE.Semicolon;\n                offset++;\n                break;\n\n            // U+003C LESS-THAN SIGN (<)\n            case 0x003C:\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\n                if (getCharCode(offset + 1) === 0x0021 &&\n                    getCharCode(offset + 2) === 0x002D &&\n                    getCharCode(offset + 3) === 0x002D) {\n                    // ... consume them and return a <CDO-token>.\n                    type = TYPE.CDO;\n                    offset = offset + 4;\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0040 COMMERCIAL AT (@)\n            case 0x0040:\n                // If the next 3 input code points would start an identifier, ...\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\n                    type = TYPE.AtKeyword;\n                    offset = consumeName(source, offset + 1);\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+005B LEFT SQUARE BRACKET ([)\n            case 0x005B:\n                // Return a <[-token>.\n                type = TYPE.LeftSquareBracket;\n                offset++;\n                break;\n\n            // U+005C REVERSE SOLIDUS (\\)\n            case 0x005C:\n                // If the input stream starts with a valid escape, ...\n                if (isValidEscape(code, getCharCode(offset + 1))) {\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\n                    consumeIdentLikeToken();\n                } else {\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+005D RIGHT SQUARE BRACKET (])\n            case 0x005D:\n                // Return a <]-token>.\n                type = TYPE.RightSquareBracket;\n                offset++;\n                break;\n\n            // U+007B LEFT CURLY BRACKET ({)\n            case 0x007B:\n                // Return a <{-token>.\n                type = TYPE.LeftCurlyBracket;\n                offset++;\n                break;\n\n            // U+007D RIGHT CURLY BRACKET (})\n            case 0x007D:\n                // Return a <}-token>.\n                type = TYPE.RightCurlyBracket;\n                offset++;\n                break;\n\n            // digit\n            case DigitCategory:\n                // Reconsume the current input code point, consume a numeric token, and return it.\n                consumeNumericToken();\n                break;\n\n            // name-start code point\n            case NameStartCategory:\n                // Reconsume the current input code point, consume an ident-like token, and return it.\n                consumeIdentLikeToken();\n                break;\n\n                // EOF\n                // case EofCategory:\n                // Return an <EOF-token>.\n                // break;\n\n            // anything else\n            default:\n                // Return a <delim-token> with its value set to the current input code point.\n                type = TYPE.Delim;\n                offset++;\n        }\n\n        // put token to stream\n        onToken(type, start, start = offset);\n    }\n}\n\nexport * from './types.js';\nexport * as tokenTypes from './types.js';\nexport { default as tokenNames } from './names.js';\nexport * from './char-code-definitions.js';\nexport * from './utils.js';\nexport * from './OffsetToLocation.js';\nexport * from './TokenStream.js';\n", "//\n//                              list\n//                            ┌──────┐\n//             ┌──────────────┼─head │\n//             │              │ tail─┼──────────────┐\n//             │              └──────┘              │\n//             ▼                                    ▼\n//            item        item        item        item\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\n//          │ data │    │ data │    │ data │    │ data │\n//          └──────┘    └──────┘    └──────┘    └──────┘\n//\n\nlet releasedCursors = null;\n\nexport class List {\n    static createItem(data) {\n        return {\n            prev: null,\n            next: null,\n            data\n        };\n    }\n\n    constructor() {\n        this.head = null;\n        this.tail = null;\n        this.cursor = null;\n    }\n    createItem(data) {\n        return List.createItem(data);\n    }\n\n    // cursor helpers\n    allocateCursor(prev, next) {\n        let cursor;\n\n        if (releasedCursors !== null) {\n            cursor = releasedCursors;\n            releasedCursors = releasedCursors.cursor;\n            cursor.prev = prev;\n            cursor.next = next;\n            cursor.cursor = this.cursor;\n        } else {\n            cursor = {\n                prev,\n                next,\n                cursor: this.cursor\n            };\n        }\n\n        this.cursor = cursor;\n\n        return cursor;\n    }\n    releaseCursor() {\n        const { cursor } = this;\n\n        this.cursor = cursor.cursor;\n        cursor.prev = null;\n        cursor.next = null;\n        cursor.cursor = releasedCursors;\n        releasedCursors = cursor;\n    }\n    updateCursors(prevOld, prevNew, nextOld, nextNew) {\n        let { cursor } = this;\n\n        while (cursor !== null) {\n            if (cursor.prev === prevOld) {\n                cursor.prev = prevNew;\n            }\n\n            if (cursor.next === nextOld) {\n                cursor.next = nextNew;\n            }\n\n            cursor = cursor.cursor;\n        }\n    }\n    *[Symbol.iterator]() {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            yield cursor.data;\n        }\n    }\n\n    // getters\n    get size() {\n        let size = 0;\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            size++;\n        }\n\n        return size;\n    }\n    get isEmpty() {\n        return this.head === null;\n    }\n    get first() {\n        return this.head && this.head.data;\n    }\n    get last() {\n        return this.tail && this.tail.data;\n    }\n\n    // convertors\n    fromArray(array) {\n        let cursor = null;\n        this.head = null;\n\n        for (let data of array) {\n            const item = List.createItem(data);\n\n            if (cursor !== null) {\n                cursor.next = item;\n            } else {\n                this.head = item;\n            }\n\n            item.prev = cursor;\n            cursor = item;\n        }\n\n        this.tail = cursor;\n        return this;\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return [...this];\n    }\n\n    // array-like methods\n    forEach(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(null, this.head);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    forEachRight(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(this.tail, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    reduce(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(null, this.head);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.next !== null) {\n            item = cursor.next;\n            cursor.next = item.next;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    reduceRight(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(this.tail, null);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.prev !== null) {\n            item = cursor.prev;\n            cursor.prev = item.prev;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    some(fn, thisArg = this) {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    map(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            result.appendData(fn.call(thisArg, cursor.data, cursor, this));\n        }\n\n        return result;\n    }\n    filter(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                result.appendData(cursor.data);\n            }\n        }\n\n        return result;\n    }\n\n    nextUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(null, start);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    prevUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(start, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n\n    // mutation\n    clear() {\n        this.head = null;\n        this.tail = null;\n    }\n    copy() {\n        const result = new List();\n\n        for (let data of this) {\n            result.appendData(data);\n        }\n\n        return result;\n    }\n    prepend(item) {\n        //      head\n        //    ^\n        // item\n        this.updateCursors(null, item, this.head, item);\n\n        // insert to the beginning of the list\n        if (this.head !== null) {\n            // new item <- first item\n            this.head.prev = item;\n            // new item -> first item\n            item.next = this.head;\n        } else {\n            // if list has no head, then it also has no tail\n            // in this case tail points to the new item\n            this.tail = item;\n        }\n\n        // head always points to new item\n        this.head = item;\n        return this;\n    }\n    prependData(data) {\n        return this.prepend(List.createItem(data));\n    }\n    append(item) {\n        return this.insert(item);\n    }\n    appendData(data) {\n        return this.insert(List.createItem(data));\n    }\n    insert(item, before = null) {\n        if (before !== null) {\n            // prev   before\n            //      ^\n            //     item\n            this.updateCursors(before.prev, item, before, item);\n\n            if (before.prev === null) {\n                // insert to the beginning of list\n                if (this.head !== before) {\n                    throw new Error('before doesn\\'t belong to list');\n                }\n                // since head points to before therefore list doesn't empty\n                // no need to check tail\n                this.head = item;\n                before.prev = item;\n                item.next = before;\n                this.updateCursors(null, item);\n            } else {\n                // insert between two items\n                before.prev.next = item;\n                item.prev = before.prev;\n                before.prev = item;\n                item.next = before;\n            }\n        } else {\n            // tail\n            //      ^\n            //      item\n            this.updateCursors(this.tail, item, null, item);\n\n            // insert to the ending of the list\n            if (this.tail !== null) {\n                // last item -> new item\n                this.tail.next = item;\n                // last item <- new item\n                item.prev = this.tail;\n            } else {\n                // if list has no tail, then it also has no head\n                // in this case head points to new item\n                this.head = item;\n            }\n\n            // tail always points to new item\n            this.tail = item;\n        }\n\n        return this;\n    }\n    insertData(data, before) {\n        return this.insert(List.createItem(data), before);\n    }\n    remove(item) {\n        //      item\n        //       ^\n        // prev     next\n        this.updateCursors(item, item.prev, item, item.next);\n\n        if (item.prev !== null) {\n            item.prev.next = item.next;\n        } else {\n            if (this.head !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.head = item.next;\n        }\n\n        if (item.next !== null) {\n            item.next.prev = item.prev;\n        } else {\n            if (this.tail !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.tail = item.prev;\n        }\n\n        item.prev = null;\n        item.next = null;\n\n        return item;\n    }\n    push(data) {\n        this.insert(List.createItem(data));\n    }\n    pop() {\n        return this.tail !== null ? this.remove(this.tail) : null;\n    }\n    unshift(data) {\n        this.prepend(List.createItem(data));\n    }\n    shift() {\n        return this.head !== null ? this.remove(this.head) : null;\n    }\n    prependList(list) {\n        return this.insertList(list, this.head);\n    }\n    appendList(list) {\n        return this.insertList(list);\n    }\n    insertList(list, before) {\n        // ignore empty lists\n        if (list.head === null) {\n            return this;\n        }\n\n        if (before !== undefined && before !== null) {\n            this.updateCursors(before.prev, list.tail, before, list.head);\n\n            // insert in the middle of dist list\n            if (before.prev !== null) {\n                // before.prev <-> list.head\n                before.prev.next = list.head;\n                list.head.prev = before.prev;\n            } else {\n                this.head = list.head;\n            }\n\n            before.prev = list.tail;\n            list.tail.next = before;\n        } else {\n            this.updateCursors(this.tail, list.tail, null, list.head);\n\n            // insert to end of the list\n            if (this.tail !== null) {\n                // if destination list has a tail, then it also has a head,\n                // but head doesn't change\n                // dest tail -> source head\n                this.tail.next = list.head;\n                // dest tail <- source head\n                list.head.prev = this.tail;\n            } else {\n                // if list has no a tail, then it also has no a head\n                // in this case points head to new item\n                this.head = list.head;\n            }\n\n            // tail always start point to new item\n            this.tail = list.tail;\n        }\n\n        list.head = null;\n        list.tail = null;\n        return this;\n    }\n    replace(oldItem, newItemOrList) {\n        if ('head' in newItemOrList) {\n            this.insertList(newItemOrList, oldItem);\n        } else {\n            this.insert(newItemOrList, oldItem);\n        }\n\n        this.remove(oldItem);\n    }\n}\n", "export function createCustomError(name, message) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    const error = Object.create(SyntaxError.prototype);\n    const errorStack = new Error();\n\n    return Object.assign(error, {\n        name,\n        message,\n        get stack() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, `${name}: ${message}\\n`);\n        }\n    });\n};\n", "import { createCustomError } from '../utils/create-custom-error.js';\n\nconst MAX_LINE_LENGTH = 100;\nconst OFFSET_CORRECTION = 60;\nconst TAB_REPLACEMENT = '    ';\n\nfunction sourceFragment({ source, line, column }, extraLines) {\n    function processLines(start, end) {\n        return lines\n            .slice(start, end)\n            .map((line, idx) =>\n                String(start + idx + 1).padStart(maxNumLength) + ' |' + line\n            ).join('\\n');\n    }\n\n    const lines = source.split(/\\r\\n?|\\n|\\f/);\n    const startLine = Math.max(1, line - extraLines) - 1;\n    const endLine = Math.min(line + extraLines, lines.length + 1);\n    const maxNumLength = Math.max(4, String(endLine).length) + 1;\n    let cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n        cutLeft = column - OFFSET_CORRECTION + 3;\n        column = OFFSET_CORRECTION - 2;\n    }\n\n    for (let i = startLine; i <= endLine; i++) {\n        if (i >= 0 && i < lines.length) {\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n            lines[i] =\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\n        }\n    }\n\n    return [\n        processLines(startLine, line),\n        new Array(column + maxNumLength + 2).join('-') + '^',\n        processLines(line, endLine)\n    ].filter(Boolean).join('\\n');\n}\n\nexport function SyntaxError(message, source, offset, line, column) {\n    const error = Object.assign(createCustomError('SyntaxError', message), {\n        source,\n        offset,\n        line,\n        column,\n        sourceFragment(extraLines) {\n            return sourceFragment({ source, line, column }, isNaN(extraLines) ? 0 : extraLines);\n        },\n        get formattedMessage() {\n            return (\n                `Parse error: ${message}\\n` +\n                sourceFragment({ source, line, column }, 2)\n            );\n        }\n    });\n\n    return error;\n}\n", "import { WhiteSpace, Comment } from '../tokenizer/index.js';\n\nexport function readSequence(recognizer) {\n    const children = this.createList();\n    let space = false;\n    const context = {\n        recognizer\n    };\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n                this.next();\n                continue;\n\n            case WhiteSpace:\n                space = true;\n                this.next();\n                continue;\n        }\n\n        let child = recognizer.getNode.call(this, context);\n\n        if (child === undefined) {\n            break;\n        }\n\n        if (space) {\n            if (recognizer.onWhiteSpace) {\n                recognizer.onWhiteSpace.call(this, child, children, context);\n            }\n            space = false;\n        }\n\n        children.push(child);\n    }\n\n    if (space && recognizer.onWhiteSpace) {\n        recognizer.onWhiteSpace.call(this, null, children, context);\n    }\n\n    return children;\n};\n", "import { List } from '../utils/List.js';\nimport { SyntaxError } from './SyntaxError.js';\nimport {\n    tokenize,\n    OffsetToLocation,\n    TokenStream,\n    tokenNames,\n\n    consumeNumber,\n    findWhiteSpaceStart,\n    cmpChar,\n    cmpStr,\n\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Percentage,\n    Number as NumberToken\n} from '../tokenizer/index.js';\nimport { readSequence } from './sequence.js';\n\nconst NOOP = () => {};\nconst EXCLAMATIONMARK = 0x0021;  // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;       // U+0023 NUMBER SIGN (#)\nconst SEMICOLON = 0x003B;        // U+003B SEMICOLON (;)\nconst LEFTCURLYBRACKET = 0x007B; // U+007B LEFT CURLY BRACKET ({)\nconst NULL = 0;\n\nfunction createParseContext(name) {\n    return function() {\n        return this[name]();\n    };\n}\n\nfunction fetchParseValues(dict) {\n    const result = Object.create(null);\n\n    for (const name in dict) {\n        const item = dict[name];\n        const fn = item.parse || item;\n\n        if (fn) {\n            result[name] = fn;\n        }\n    }\n\n    return result;\n}\n\nfunction processConfig(config) {\n    const parseConfig = {\n        context: Object.create(null),\n        scope: Object.assign(Object.create(null), config.scope),\n        atrule: fetchParseValues(config.atrule),\n        pseudo: fetchParseValues(config.pseudo),\n        node: fetchParseValues(config.node)\n    };\n\n    for (const name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n            case 'function':\n                parseConfig.context[name] = config.parseContext[name];\n                break;\n\n            case 'string':\n                parseConfig.context[name] = createParseContext(config.parseContext[name]);\n                break;\n        }\n    }\n\n    return {\n        config: parseConfig,\n        ...parseConfig,\n        ...parseConfig.node\n    };\n}\n\nexport function createParser(config) {\n    let source = '';\n    let filename = '<unknown>';\n    let needPositions = false;\n    let onParseError = NOOP;\n    let onParseErrorThrow = false;\n\n    const locationMap = new OffsetToLocation();\n    const parser = Object.assign(new TokenStream(), processConfig(config || {}), {\n        parseAtrulePrelude: true,\n        parseRulePrelude: true,\n        parseValue: true,\n        parseCustomProperty: false,\n\n        readSequence,\n\n        consumeUntilBalanceEnd: () => 0,\n        consumeUntilLeftCurlyBracket(code) {\n            return code === LEFTCURLYBRACKET ? 1 : 0;\n        },\n        consumeUntilLeftCurlyBracketOrSemicolon(code) {\n            return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilExclamationMarkOrSemicolon(code) {\n            return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilSemicolonIncluded(code) {\n            return code === SEMICOLON ? 2 : 0;\n        },\n\n        createList() {\n            return new List();\n        },\n        createSingleNodeList(node) {\n            return new List().appendData(node);\n        },\n        getFirstListNode(list) {\n            return list && list.first;\n        },\n        getLastListNode(list) {\n            return list && list.last;\n        },\n\n        parseWithFallback(consumer, fallback) {\n            const startToken = this.tokenIndex;\n\n            try {\n                return consumer.call(this);\n            } catch (e) {\n                if (onParseErrorThrow) {\n                    throw e;\n                }\n\n                const fallbackNode = fallback.call(this, startToken);\n\n                onParseErrorThrow = true;\n                onParseError(e, fallbackNode);\n                onParseErrorThrow = false;\n\n                return fallbackNode;\n            }\n        },\n\n        lookupNonWSType(offset) {\n            let type;\n\n            do {\n                type = this.lookupType(offset++);\n                if (type !== WhiteSpace) {\n                    return type;\n                }\n            } while (type !== NULL);\n\n            return NULL;\n        },\n\n        charCodeAt(offset) {\n            return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;\n        },\n        substring(offsetStart, offsetEnd) {\n            return source.substring(offsetStart, offsetEnd);\n        },\n        substrToCursor(start) {\n            return this.source.substring(start, this.tokenStart);\n        },\n\n        cmpChar(offset, charCode) {\n            return cmpChar(source, offset, charCode);\n        },\n        cmpStr(offsetStart, offsetEnd, str) {\n            return cmpStr(source, offsetStart, offsetEnd, str);\n        },\n\n        consume(tokenType) {\n            const start = this.tokenStart;\n\n            this.eat(tokenType);\n\n            return this.substrToCursor(start);\n        },\n        consumeFunctionName() {\n            const name = source.substring(this.tokenStart, this.tokenEnd - 1);\n\n            this.eat(FunctionToken);\n\n            return name;\n        },\n        consumeNumber(type) {\n            const number = source.substring(this.tokenStart, consumeNumber(source, this.tokenStart));\n\n            this.eat(type);\n\n            return number;\n        },\n\n        eat(tokenType) {\n            if (this.tokenType !== tokenType) {\n                const tokenName = tokenNames[tokenType].slice(0, -6).replace(/-/g, ' ').replace(/^./, m => m.toUpperCase());\n                let message = `${/[[\\](){}]/.test(tokenName) ? `\"${tokenName}\"` : tokenName} is expected`;\n                let offset = this.tokenStart;\n\n                // tweak message and offset\n                switch (tokenType) {\n                    case Ident:\n                        // when identifier is expected but there is a function or url\n                        if (this.tokenType === FunctionToken || this.tokenType === Url) {\n                            offset = this.tokenEnd - 1;\n                            message = 'Identifier is expected but function found';\n                        } else {\n                            message = 'Identifier is expected';\n                        }\n                        break;\n\n                    case Hash:\n                        if (this.isDelim(NUMBERSIGN)) {\n                            this.next();\n                            offset++;\n                            message = 'Name is expected';\n                        }\n                        break;\n\n                    case Percentage:\n                        if (this.tokenType === NumberToken) {\n                            offset = this.tokenEnd;\n                            message = 'Percent sign is expected';\n                        }\n                        break;\n                }\n\n                this.error(message, offset);\n            }\n\n            this.next();\n        },\n        eatIdent(name) {\n            if (this.tokenType !== Ident || this.lookupValue(0, name) === false) {\n                this.error(`Identifier \"${name}\" is expected`);\n            }\n\n            this.next();\n        },\n        eatDelim(code) {\n            if (!this.isDelim(code)) {\n                this.error(`Delim \"${String.fromCharCode(code)}\" is expected`);\n            }\n\n            this.next();\n        },\n\n        getLocation(start, end) {\n            if (needPositions) {\n                return locationMap.getLocationRange(\n                    start,\n                    end,\n                    filename\n                );\n            }\n\n            return null;\n        },\n        getLocationFromList(list) {\n            if (needPositions) {\n                const head = this.getFirstListNode(list);\n                const tail = this.getLastListNode(list);\n                return locationMap.getLocationRange(\n                    head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,\n                    tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,\n                    filename\n                );\n            }\n\n            return null;\n        },\n\n        error(message, offset) {\n            const location = typeof offset !== 'undefined' && offset < source.length\n                ? locationMap.getLocation(offset)\n                : this.eof\n                    ? locationMap.getLocation(findWhiteSpaceStart(source, source.length - 1))\n                    : locationMap.getLocation(this.tokenStart);\n\n            throw new SyntaxError(\n                message || 'Unexpected input',\n                source,\n                location.offset,\n                location.line,\n                location.column\n            );\n        }\n    });\n\n    const parse = function(source_, options) {\n        source = source_;\n        options = options || {};\n\n        parser.setSource(source, tokenize);\n        locationMap.setSource(\n            source,\n            options.offset,\n            options.line,\n            options.column\n        );\n\n        filename = options.filename || '<unknown>';\n        needPositions = Boolean(options.positions);\n        onParseError = typeof options.onParseError === 'function' ? options.onParseError : NOOP;\n        onParseErrorThrow = false;\n\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n        const { context = 'default', onComment } = options;\n\n        if (context in parser.context === false) {\n            throw new Error('Unknown context `' + context + '`');\n        }\n\n        if (typeof onComment === 'function') {\n            parser.forEachToken((type, start, end) => {\n                if (type === Comment) {\n                    const loc = parser.getLocation(start, end);\n                    const value = cmpStr(source, end - 2, end, '*/')\n                        ? source.slice(start + 2, end - 2)\n                        : source.slice(start + 2, end);\n\n                    onComment(value, loc);\n                }\n            });\n        }\n\n        const ast = parser.context[context].call(parser, options);\n\n        if (!parser.eof) {\n            parser.error();\n        }\n\n        return ast;\n    };\n\n    return Object.assign(parse, {\n        SyntaxError,\n        config: parser.config\n    });\n};\n", "import { SourceMapGenerator } from 'source-map-js/lib/source-map-generator.js';\n\nconst trackNodes = new Set(['Atrule', 'Selector', 'Declaration']);\n\nexport function generateSourceMap(handlers) {\n    const map = new SourceMapGenerator();\n    const generated = {\n        line: 1,\n        column: 0\n    };\n    const original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    const activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    const activatedMapping = {\n        generated: activatedGenerated\n    };\n    let line = 1;\n    let column = 0;\n    let sourceMappingActive = false;\n\n    const origHandlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.has(node.type)) {\n            const nodeLine = node.loc.start.line;\n            const nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original,\n                    generated\n                });\n            }\n        }\n\n        origHandlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.has(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    const origHandlersEmit = handlers.emit;\n    handlers.emit = function(value, type, auto) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        origHandlersEmit(value, type, auto);\n    };\n\n    const origHandlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: origHandlersResult(),\n            map\n        };\n    };\n\n    return handlers;\n};\n", "import {\n    WhiteSpace,\n    Delim,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    BadUrl,\n    AtKeyword,\n    Hash,\n    Percentage,\n    Dimension,\n    Number as NumberToken,\n    String as StringToken,\n    Colon,\n    LeftParenthesis,\n    RightParenthesis,\n    CDC\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n\nconst code = (type, value) => {\n    if (type === Delim) {\n        type = value;\n    }\n\n    if (typeof type === 'string') {\n        const charCode = type.charCodeAt(0);\n        return charCode > 0x7F ? 0x8000 : charCode << 8;\n    }\n\n    return type;\n};\n\n// https://www.w3.org/TR/css-syntax-3/#serialization\n// The only requirement for serialization is that it must \"round-trip\" with parsing,\n// that is, parsing the stylesheet must produce the same data structures as parsing,\n// serializing, and parsing again, except for consecutive <whitespace-token>s,\n// which may be collapsed into a single token.\n\nconst specPairs = [\n    [Ident, Ident],\n    [Ident, FunctionToken],\n    [Ident, Url],\n    [Ident, BadUrl],\n    [Ident, '-'],\n    [Ident, NumberToken],\n    [Ident, Percentage],\n    [Ident, Dimension],\n    [Ident, CDC],\n    [Ident, LeftParenthesis],\n\n    [AtKeyword, Ident],\n    [AtKeyword, FunctionToken],\n    [AtKeyword, Url],\n    [AtKeyword, BadUrl],\n    [AtKeyword, '-'],\n    [AtKeyword, NumberToken],\n    [AtKeyword, Percentage],\n    [AtKeyword, Dimension],\n    [AtKeyword, CDC],\n\n    [Hash, Ident],\n    [Hash, FunctionToken],\n    [Hash, Url],\n    [Hash, BadUrl],\n    [Hash, '-'],\n    [Hash, NumberToken],\n    [Hash, Percentage],\n    [Hash, Dimension],\n    [Hash, CDC],\n\n    [Dimension, Ident],\n    [Dimension, FunctionToken],\n    [Dimension, Url],\n    [Dimension, BadUrl],\n    [Dimension, '-'],\n    [Dimension, NumberToken],\n    [Dimension, Percentage],\n    [Dimension, Dimension],\n    [Dimension, CDC],\n\n    ['#', Ident],\n    ['#', FunctionToken],\n    ['#', Url],\n    ['#', BadUrl],\n    ['#', '-'],\n    ['#', NumberToken],\n    ['#', Percentage],\n    ['#', Dimension],\n    ['#', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['-', Ident],\n    ['-', FunctionToken],\n    ['-', Url],\n    ['-', BadUrl],\n    ['-', '-'],\n    ['-', NumberToken],\n    ['-', Percentage],\n    ['-', Dimension],\n    ['-', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    [NumberToken, Ident],\n    [NumberToken, FunctionToken],\n    [NumberToken, Url],\n    [NumberToken, BadUrl],\n    [NumberToken, NumberToken],\n    [NumberToken, Percentage],\n    [NumberToken, Dimension],\n    [NumberToken, '%'],\n    [NumberToken, CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['@', Ident],\n    ['@', FunctionToken],\n    ['@', Url],\n    ['@', BadUrl],\n    ['@', '-'],\n    ['@', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['.', NumberToken],\n    ['.', Percentage],\n    ['.', Dimension],\n\n    ['+', NumberToken],\n    ['+', Percentage],\n    ['+', Dimension],\n\n    ['/', '*']\n];\n// validate with scripts/generate-safe\nconst safePairs = specPairs.concat([\n    [Ident, Hash],\n\n    [Dimension, Hash],\n\n    [Hash, Hash],\n\n    [AtKeyword, LeftParenthesis],\n    [AtKeyword, StringToken],\n    [AtKeyword, Colon],\n\n    [Percentage, Percentage],\n    [Percentage, Dimension],\n    [Percentage, FunctionToken],\n    [Percentage, '-'],\n\n    [RightParenthesis, Ident],\n    [RightParenthesis, FunctionToken],\n    [RightParenthesis, Percentage],\n    [RightParenthesis, Dimension],\n    [RightParenthesis, Hash],\n    [RightParenthesis, '-']\n]);\n\nfunction createMap(pairs) {\n    const isWhiteSpaceRequired = new Set(\n        pairs.map(([prev, next]) => (code(prev) << 16 | code(next)))\n    );\n\n    return function(prevCode, type, value) {\n        const nextCode = code(type, value);\n        const nextCharCode = value.charCodeAt(0);\n        const emitWs =\n            (nextCharCode === HYPHENMINUS &&\n                type !== Ident &&\n                type !== FunctionToken &&\n                type !== CDC) ||\n            (nextCharCode === PLUSSIGN)\n                ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8)\n                : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);\n\n        if (emitWs) {\n            this.emit(' ', WhiteSpace, true);\n        }\n\n        return nextCode;\n    };\n}\n\nexport const spec = createMap(specPairs);\nexport const safe = createMap(safePairs);\n", "import { tokenize, Delim, WhiteSpace } from '../tokenizer/index.js';\nimport { generateSourceMap } from './sourceMap.js';\nimport * as tokenBefore from './token-before.js';\n\nconst REVERSESOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nfunction processChildren(node, delimeter) {\n    if (typeof delimeter === 'function') {\n        let prev = null;\n\n        node.children.forEach(node => {\n            if (prev !== null) {\n                delimeter.call(this, prev);\n            }\n\n            this.node(node);\n            prev = node;\n        });\n\n        return;\n    }\n\n    node.children.forEach(this.node, this);\n}\n\nfunction processChunk(chunk) {\n    tokenize(chunk, (type, start, end) => {\n        this.token(type, chunk.slice(start, end));\n    });\n}\n\nexport function createGenerator(config) {\n    const types = new Map();\n\n    for (let name in config.node) {\n        const item = config.node[name];\n        const fn = item.generate || item;\n\n        if (typeof fn === 'function') {\n            types.set(name, item.generate || item);\n        }\n    }\n\n    return function(node, options) {\n        let buffer = '';\n        let prevCode = 0;\n        let handlers = {\n            node(node) {\n                if (types.has(node.type)) {\n                    types.get(node.type).call(publicApi, node);\n                } else {\n                    throw new Error('Unknown node type: ' + node.type);\n                }\n            },\n            tokenBefore: tokenBefore.safe,\n            token(type, value) {\n                prevCode = this.tokenBefore(prevCode, type, value);\n\n                this.emit(value, type, false);\n\n                if (type === Delim && value.charCodeAt(0) === REVERSESOLIDUS) {\n                    this.emit('\\n', WhiteSpace, true);\n                }\n            },\n            emit(value) {\n                buffer += value;\n            },\n            result() {\n                return buffer;\n            }\n        };\n\n        if (options) {\n            if (typeof options.decorator === 'function') {\n                handlers = options.decorator(handlers);\n            }\n\n            if (options.sourceMap) {\n                handlers = generateSourceMap(handlers);\n            }\n\n            if (options.mode in tokenBefore) {\n                handlers.tokenBefore = tokenBefore[options.mode];\n            }\n        }\n\n        const publicApi = {\n            node: (node) => handlers.node(node),\n            children: processChildren,\n            token: (type, value) => handlers.token(type, value),\n            tokenize: processChunk\n        };\n\n        handlers.node(node);\n\n        return handlers.result();\n    };\n};\n", "import { List } from '../utils/List.js';\n\nexport function createConvertor(walk) {\n    return {\n        fromPlainObject(ast) {\n            walk(ast, {\n                enter(node) {\n                    if (node.children && node.children instanceof List === false) {\n                        node.children = new List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject(ast) {\n            walk(ast, {\n                leave(node) {\n                    if (node.children && node.children instanceof List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n};\n", "const { hasOwnProperty } = Object.prototype;\nconst noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const walkers = [];\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        let fieldTypes = structure[key];\n        const walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(fieldTypes)) {\n            fieldTypes = [fieldTypes];\n        }\n\n        for (const fieldType of fieldTypes) {\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    const types = {};\n\n    for (const name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            const nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    const fields = config.fields.slice();\n    const contextName = config.context;\n    const useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk, walkReducer) {\n        let prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (const field of fields) {\n            const ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    const breakWalk = reverse\n                        ? ref.reduceRight(walkReducer, false)\n                        : ref.reduce(walkReducer, false);\n\n                    if (breakWalk) {\n                        return true;\n                    }\n                } else if (walk(ref)) {\n                    return true;\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap({\n    StyleSheet,\n    Atrule,\n    Rule,\n    Block,\n    DeclarationList\n}) {\n    return {\n        Atrule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Rule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Declaration: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block,\n            DeclarationList\n        }\n    };\n}\n\nexport function createWalker(config) {\n    const types = getTypesFromConfig(config);\n    const iteratorsNatural = {};\n    const iteratorsReverse = {};\n    const breakWalk = Symbol('break-walk');\n    const skipNode = Symbol('skip-node');\n\n    for (const name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    const walk = function(root, options) {\n        function walkNode(node, item, list) {\n            const enterRet = enter.call(context, node, item, list);\n\n            if (enterRet === breakWalk) {\n                return true;\n            }\n\n            if (enterRet === skipNode) {\n                return false;\n            }\n\n            if (iterators.hasOwnProperty(node.type)) {\n                if (iterators[node.type](node, context, walkNode, walkReducer)) {\n                    return true;\n                }\n            }\n\n            if (leave.call(context, node, item, list) === breakWalk) {\n                return true;\n            }\n\n            return false;\n        }\n\n        let enter = noop;\n        let leave = noop;\n        let iterators = iteratorsNatural;\n        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n        const context = {\n            break: breakWalk,\n            skip: skipNode,\n\n            root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).sort().join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        walkNode(root);\n    };\n\n    walk.break = breakWalk;\n    walk.skip = skipNode;\n\n    walk.find = function(ast, fn) {\n        let found = null;\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found = node;\n                return breakWalk;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        let found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter(node, item, list) {\n                if (fn.call(this, node, item, list)) {\n                    found = node;\n                    return breakWalk;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        const found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n", "function noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    const { min, max, comma } = multiplier;\n\n    if (min === 0 && max === 0) {\n        return comma ? '#?' : '*';\n    }\n\n    if (min === 0 && max === 1) {\n        return '?';\n    }\n\n    if (min === 1 && max === 0) {\n        return comma ? '#' : '+';\n    }\n\n    if (min === 1 && max === 1) {\n        return '';\n    }\n\n    return (\n        (comma ? '#' : '') +\n        (min === max\n            ? '{' + min + '}'\n            : '{' + min + ',' + (max !== 0 ? max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-∞' : node.min) +\n                ',' +\n                (node.max === null ? '∞' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    const combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    const result = node.terms\n        .map(term => internalGenerate(term, decorate, forceBraces, compact))\n        .join(combinator);\n\n    if (node.explicit || forceBraces) {\n        return (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction internalGenerate(node, decorate, forceBraces, compact) {\n    let result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                internalGenerate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nexport function generate(node, options) {\n    let decorate = noop;\n    let forceBraces = false;\n    let compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return internalGenerate(node, decorate, forceBraces, compact);\n};\n", "import { createCustomError } from '../utils/create-custom-error.js';\nimport { generate } from '../definition-syntax/generate.js';\n\nconst defaultLoc = { offset: 0, line: 1, column: 1 };\n\nfunction locateMismatch(matchResult, node) {\n    const tokens = matchResult.tokens;\n    const longestMatch = matchResult.longestMatch;\n    const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    const badNode = mismatchNode !== node ? mismatchNode : null;\n    let mismatchOffset = 0;\n    let mismatchLength = 0;\n    let entries = 0;\n    let css = '';\n    let start;\n    let end;\n\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i].value;\n\n        if (i === longestMatch) {\n            mismatchLength = token.length;\n            mismatchOffset = css.length;\n        }\n\n        if (badNode !== null && tokens[i].node === badNode) {\n            if (i <= longestMatch) {\n                entries++;\n            } else {\n                entries = 0;\n            }\n        }\n\n        css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) { // last\n        start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n        end = buildLoc(start);\n    } else {\n        start = fromLoc(badNode, 'start') ||\n            buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n        end = fromLoc(badNode, 'end') ||\n            buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    };\n}\n\nfunction fromLoc(node, point) {\n    const value = node && node.loc && node.loc[point];\n\n    if (value) {\n        return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n}\n\nfunction buildLoc({ offset, line, column }, extra) {\n    const loc = {\n        offset,\n        line,\n        column\n    };\n\n    if (extra) {\n        const lines = extra.split(/\\n|\\r\\n?|\\f/);\n\n        loc.offset += extra.length;\n        loc.line += lines.length - 1;\n        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n}\n\nexport const SyntaxReferenceError = function(type, referenceName) {\n    const error = createCustomError(\n        'SyntaxReferenceError',\n        type + (referenceName ? ' `' + referenceName + '`' : '')\n    );\n\n    error.reference = referenceName;\n\n    return error;\n};\n\nexport const SyntaxMatchError = function(message, syntax, node, matchResult) {\n    const error = createCustomError('SyntaxMatchError', message);\n    const {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    } = locateMismatch(matchResult, node);\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' +\n        '  syntax: ' + error.syntax + '\\n' +\n        '   value: ' + (css || '<empty string>') + '\\n' +\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    Object.assign(error, start);\n    error.loc = {\n        source: (node && node.loc && node.loc.source) || '<unknown>',\n        start,\n        end\n    };\n\n    return error;\n};\n", "const keywords = new Map();\nconst properties = new Map();\nconst HYPHENMINUS = 45; // '-'.charCodeAt()\n\nexport const keyword = getKeywordDescriptor;\nexport const property = getPropertyDescriptor;\nexport const vendorPrefix = getVendorPrefix;\nexport function isCustomProperty(str, offset) {\n    offset = offset || 0;\n\n    return str.length - offset >= 2 &&\n           str.charCodeAt(offset) === HYPHENMINUS &&\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\n\nfunction getVendorPrefix(str, offset) {\n    offset = offset || 0;\n\n    // verdor prefix should be at least 3 chars length\n    if (str.length - offset >= 3) {\n        // vendor prefix starts with hyper minus following non-hyper minus\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n            // vendor prefix should contain a hyper minus at the ending\n            const secondDashIndex = str.indexOf('-', offset + 2);\n\n            if (secondDashIndex !== -1) {\n                return str.substring(offset, secondDashIndex + 1);\n            }\n        }\n    }\n\n    return '';\n}\n\nfunction getKeywordDescriptor(keyword) {\n    if (keywords.has(keyword)) {\n        return keywords.get(keyword);\n    }\n\n    const name = keyword.toLowerCase();\n    let descriptor = keywords.get(name);\n\n    if (descriptor === undefined) {\n        const custom = isCustomProperty(name, 0);\n        const vendor = !custom ? getVendorPrefix(name, 0) : '';\n        descriptor = Object.freeze({\n            basename: name.substr(vendor.length),\n            name,\n            prefix: vendor,\n            vendor,\n            custom\n        });\n    }\n\n    keywords.set(keyword, descriptor);\n\n    return descriptor;\n}\n\nfunction getPropertyDescriptor(property) {\n    if (properties.has(property)) {\n        return properties.get(property);\n    }\n\n    let name = property;\n    let hack = property[0];\n\n    if (hack === '/') {\n        hack = property[1] === '/' ? '//' : '/';\n    } else if (hack !== '_' &&\n               hack !== '*' &&\n               hack !== '$' &&\n               hack !== '#' &&\n               hack !== '+' &&\n               hack !== '&') {\n        hack = '';\n    }\n\n    const custom = isCustomProperty(name, hack.length);\n\n    // re-use result when possible (the same as for lower case)\n    if (!custom) {\n        name = name.toLowerCase();\n        if (properties.has(name)) {\n            const descriptor = properties.get(name);\n            properties.set(property, descriptor);\n            return descriptor;\n        }\n    }\n\n    const vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n    const prefix = name.substr(0, hack.length + vendor.length);\n    const descriptor = Object.freeze({\n        basename: name.substr(prefix.length),\n        name: name.substr(hack.length),\n        hack,\n        vendor,\n        prefix,\n        custom\n    });\n\n    properties.set(property, descriptor);\n\n    return descriptor;\n}\n", "// https://drafts.csswg.org/css-cascade-5/\nexport const cssWideKeywords = [\n    'initial',\n    'inherit',\n    'unset',\n    'revert',\n    'revert-layer'\n];\n", "import {\n    isDigit,\n    cmpChar,\n    Delim,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WhiteSpace || token.type === Comment)) {\n        token = getNextToken(++offset);\n    }\n\n    return offset;\n}\n\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n        return 0;\n    }\n\n    const code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            // Number sign is not allowed\n            return 0;\n        }\n        valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\n            // Integer is expected\n            return 0;\n        }\n    }\n\n    return offset + 1;\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB(token, offset_, getNextToken) {\n    let sign = false;\n    let offset = skipSC(token, offset_, getNextToken);\n\n    token = getNextToken(offset);\n\n    if (token === null) {\n        return offset_;\n    }\n\n    if (token.type !== NumberToken) {\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n            sign = true;\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\n            token = getNextToken(offset);\n\n            if (token === null || token.type !== NumberToken) {\n                return 0;\n            }\n        } else {\n            return offset_;\n        }\n    }\n\n    if (!sign) {\n        const code = token.value.charCodeAt(0);\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n            // Number sign is expected\n            return 0;\n        }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport default function anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    let offset = 0;\n\n    if (!token) {\n        return 0;\n    }\n\n    // <integer>\n    if (token.type === NumberToken) {\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === Ident && token.value.charCodeAt(0) === HYPHENMINUS) {\n        // expect 1st char is N\n        if (!cmpChar(token.value, 1, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // -n- <signless-integer>\n            case 3:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // <dashndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === Ident || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === Ident)) {\n        // just ignore a plus\n        if (token.type !== Ident) {\n            token = getNextToken(++offset);\n        }\n\n        if (token === null || !cmpChar(token.value, 0, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // '+'? n- <signless-integer>\n            case 2:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // '+'? <ndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === Dimension) {\n        let code = token.value.charCodeAt(0);\n        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n        let i = sign;\n\n        for (; i < token.value.length; i++) {\n            if (!isDigit(token.value.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === sign) {\n            // Integer is expected\n            return 0;\n        }\n\n        if (!cmpChar(token.value, i, N)) {\n            return 0;\n        }\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === token.value.length) {\n            return consumeB(getNextToken(++offset), offset, getNextToken);\n        } else {\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n                return 0;\n            }\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === token.value.length) {\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n            }\n            // <ndashdigit-dimension>\n            else {\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n            }\n        }\n    }\n\n    return 0;\n};\n", "import {\n    isHexDigit,\n    cmpChar,\n    Ident,\n    Delim,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nconst U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n}\n\nfunction hexSequence(token, offset, allowDash) {\n    let hexlen = 0;\n\n    for (let pos = offset; pos < token.value.length; pos++) {\n        const code = token.value.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n            hexSequence(token, offset + hexlen + 1, false);\n            return 6; // dissallow following question marks\n        }\n\n        if (!isHexDigit(code)) {\n            return 0; // not a hex digit\n        }\n\n        if (++hexlen > 6) {\n            return 0; // too many hex digits\n        };\n    }\n\n    return hexlen;\n}\n\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n        return 0; // nothing consumed\n    }\n\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n        if (++consumed > 6) {\n            return 0; // too many question marks\n        }\n\n        length++;\n    }\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nexport default function urange(token, getNextToken) {\n    let length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== Ident || !cmpChar(token.value, 0, U)) {\n        return 0;\n    }\n\n    token = getNextToken(++length);\n    if (token === null) {\n        return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n        token = getNextToken(++length);\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === Ident) {\n            // u '+' <ident-token> '?'*\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n        }\n\n        if (isDelim(token, QUESTIONMARK)) {\n            // u '+' '?'+\n            return withQuestionMarkSequence(1, ++length, getNextToken);\n        }\n\n        // Hex digit or question mark is expected\n        return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === NumberToken) {\n        const consumedHexLength = hexSequence(token, 1, true);\n        if (consumedHexLength === 0) {\n            return 0;\n        }\n\n        token = getNextToken(++length);\n        if (token === null) {\n            // u <number-token> <eof>\n            return length;\n        }\n\n        if (token.type === Dimension || token.type === NumberToken) {\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n                return 0;\n            }\n\n            return length + 1;\n        }\n\n        // u <number-token> '?'*\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === Dimension) {\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n\n    return 0;\n};\n", "import { cssWideKeywords } from './generic-const.js';\nimport anPlusB from './generic-an-plus-b.js';\nimport urange from './generic-urange.js';\nimport {\n    isIdentifierStart,\n    isHexDigit,\n    isDigit,\n    cmpStr,\n    consumeNumber,\n\n    Ident,\n    Function as FunctionToken,\n    AtKeyword,\n    Hash,\n    String as StringToken,\n    BadString,\n    Url,\n    BadUrl,\n    Delim,\n    Number as NumberToken,\n    Percentage,\n    Dimension,\n    WhiteSpace,\n    CDO,\n    CDC,\n    Colon,\n    Semicolon,\n    Comma,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../tokenizer/index.js';\n\nconst calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\n// safe char code getter\nfunction charCodeAt(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (let i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        charCodeAt(str, offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(charCodeAt(str, offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        const num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        // FIXME: when opts.min is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.min !== null && num < opts.min && typeof opts.min !== 'string') {\n            return true;\n        }\n\n        // FIXME: when opts.max is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.max !== null && num > opts.max && typeof opts.max !== 'string') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // balanced token consuming\n    scan:\n    do {\n        switch (token.type) {\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n\n                if (balanceStash.length === 0) {\n                    length++;\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === FunctionToken && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    const name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCodeAt(token.value, 0) !== 0x002D || charCodeAt(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    const length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (let i = 1; i < length; i++) {\n        if (!isHexDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCodeAt(token.value, 1), charCodeAt(token.value, 2), charCodeAt(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence does not contain ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case Semicolon:\n                if (balanceCloseType === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case Delim:\n                if (balanceCloseType === 0 && token.value === '!') {\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    if (type) {\n        type = new Set(type);\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== Dimension) {\n            return 0;\n        }\n\n        const numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            const reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.has(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === NumberToken) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    const numberEnd = consumeNumber(token.value, 0);\n    const isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== NumberToken) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    let i = charCodeAt(token.value, 0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            charCodeAt(token.value, 0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// token types\nexport const tokenTypes = {\n    'ident-token': tokenType(Ident),\n    'function-token': tokenType(FunctionToken),\n    'at-keyword-token': tokenType(AtKeyword),\n    'hash-token': tokenType(Hash),\n    'string-token': tokenType(StringToken),\n    'bad-string-token': tokenType(BadString),\n    'url-token': tokenType(Url),\n    'bad-url-token': tokenType(BadUrl),\n    'delim-token': tokenType(Delim),\n    'number-token': tokenType(NumberToken),\n    'percentage-token': tokenType(Percentage),\n    'dimension-token': tokenType(Dimension),\n    'whitespace-token': tokenType(WhiteSpace),\n    'CDO-token': tokenType(CDO),\n    'CDC-token': tokenType(CDC),\n    'colon-token': tokenType(Colon),\n    'semicolon-token': tokenType(Semicolon),\n    'comma-token': tokenType(Comma),\n    '[-token': tokenType(LeftSquareBracket),\n    ']-token': tokenType(RightSquareBracket),\n    '(-token': tokenType(LeftParenthesis),\n    ')-token': tokenType(RightParenthesis),\n    '{-token': tokenType(LeftCurlyBracket),\n    '}-token': tokenType(RightCurlyBracket)\n};\n\n// token production types\nexport const productionTypes = {\n    // token type aliases\n    'string': tokenType(StringToken),\n    'ident': tokenType(Ident),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue\n};\n\nexport const unitGroups = [\n    'length',\n    'angle',\n    'time',\n    'frequency',\n    'resolution',\n    'flex',\n    'decibel',\n    'semitones'\n];\n\n// dimensions types depend on units set\nexport function createDemensionTypes(units) {\n    const {\n        angle,\n        decibel,\n        frequency,\n        flex,\n        length,\n        resolution,\n        semitones,\n        time\n    } = units || {};\n\n    return {\n        'dimension': calc(dimension(null)),\n        'angle': calc(dimension(angle)),\n        'decibel': calc(dimension(decibel)),\n        'frequency': calc(dimension(frequency)),\n        'flex': calc(dimension(flex)),\n        'length': calc(zero(dimension(length))),\n        'resolution': calc(dimension(resolution)),\n        'semitones': calc(dimension(semitones)),\n        'time': calc(dimension(time))\n    };\n}\n\nexport function createGenericTypes(units) {\n    return {\n        ...tokenTypes,\n        ...productionTypes,\n        ...createDemensionTypes(units)\n    };\n};\n", "export const length = [\n    // absolute length units https://www.w3.org/TR/css-values-3/#lengths\n    'cm', 'mm', 'q', 'in', 'pt', 'pc', 'px',\n    // font-relative length units https://drafts.csswg.org/css-values-4/#font-relative-lengths\n    'em', 'rem',\n    'ex', 'rex',\n    'cap', 'rcap',\n    'ch', 'rch',\n    'ic', 'ric',\n    'lh', 'rlh',\n    // viewport-percentage lengths https://drafts.csswg.org/css-values-4/#viewport-relative-lengths\n    'vw', 'svw', 'lvw', 'dvw',\n    'vh', 'svh', 'lvh', 'dvh',\n    'vi', 'svi', 'lvi', 'dvi',\n    'vb', 'svb', 'lvb', 'dvb',\n    'vmin', 'svmin', 'lvmin', 'dvmin',\n    'vmax', 'svmax', 'lvmax', 'dvmax',\n    // container relative lengths https://drafts.csswg.org/css-contain-3/#container-lengths\n    'cqw', 'cqh', 'cqi', 'cqb', 'cqmin', 'cqmax'\n];\nexport const angle = ['deg', 'grad', 'rad', 'turn'];    // https://www.w3.org/TR/css-values-3/#angles\nexport const time = ['s', 'ms'];                        // https://www.w3.org/TR/css-values-3/#time\nexport const frequency = ['hz', 'khz'];                 // https://www.w3.org/TR/css-values-3/#frequency\nexport const resolution = ['dpi', 'dpcm', 'dppx', 'x']; // https://www.w3.org/TR/css-values-3/#resolution\nexport const flex = ['fr'];                             // https://drafts.csswg.org/css-grid/#fr-unit\nexport const decibel = ['db'];                          // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nexport const semitones = ['st'];                        // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n", "export { SyntaxError } from './SyntaxError.js';\nexport { generate } from './generate.js';\nexport { parse } from './parse.js';\nexport { walk } from './walk.js';\n", "import { createCustomError } from '../utils/create-custom-error.js';\n\nexport function SyntaxError(message, input, offset) {\n    return Object.assign(createCustomError('SyntaxError', message), {\n        input,\n        offset,\n        rawMessage: message,\n        message: message + '\\n' +\n            '  ' + input + '\\n' +\n            '--' + new Array((offset || input.length) + 1).join('-') + '^'\n    });\n};\n", "import { SyntaxError } from './SyntaxError.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\n\nexport class Tokenizer {\n    constructor(str) {\n        this.str = str;\n        this.pos = 0;\n    }\n    charCodeAt(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    }\n    charCode() {\n        return this.charCodeAt(this.pos);\n    }\n    nextCharCode() {\n        return this.charCodeAt(this.pos + 1);\n    }\n    nextNonWsCode(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    }\n    findWsEnd(pos) {\n        for (; pos < this.str.length; pos++) {\n            const code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    }\n    substringToPos(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    }\n    eat(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    }\n    peek() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    }\n    error(message) {\n        throw new SyntaxError(message, this.str, this.pos);\n    }\n};\n", "import { Tokenizer } from './tokenizer.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\nconst EXCLAMATIONMARK = 33;    // !\nconst NUMBERSIGN = 35;         // #\nconst AMPERSAND = 38;          // &\nconst APOSTROPHE = 39;         // '\nconst LEFTPARENTHESIS = 40;    // (\nconst RIGHTPARENTHESIS = 41;   // )\nconst ASTERISK = 42;           // *\nconst PLUSSIGN = 43;           // +\nconst COMMA = 44;              // ,\nconst HYPERMINUS = 45;         // -\nconst LESSTHANSIGN = 60;       // <\nconst GREATERTHANSIGN = 62;    // >\nconst QUESTIONMARK = 63;       // ?\nconst COMMERCIALAT = 64;       // @\nconst LEFTSQUAREBRACKET = 91;  // [\nconst RIGHTSQUAREBRACKET = 93; // ]\nconst LEFTCURLYBRACKET = 123;  // {\nconst VERTICALLINE = 124;      // |\nconst RIGHTCURLYBRACKET = 125; // }\nconst INFINITY = 8734;         // ∞\nconst NAME_CHAR = new Uint8Array(128).map((_, idx) =>\n    /[a-zA-Z0-9\\-]/.test(String.fromCharCode(idx)) ? 1 : 0\n);\nconst COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n};\n\nfunction scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(\n        tokenizer.findWsEnd(tokenizer.pos)\n    );\n}\n\nfunction scanWord(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code >= 128 || NAME_CHAR[code] === 0) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a keyword');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanNumber(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code < 48 || code > 57) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a number');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanString(tokenizer) {\n    const end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n\n    if (end === -1) {\n        tokenizer.pos = tokenizer.str.length;\n        tokenizer.error('Expect an apostrophe');\n    }\n\n    return tokenizer.substringToPos(end + 1);\n}\n\nfunction readMultiplierRange(tokenizer) {\n    let min = null;\n    let max = null;\n\n    tokenizer.eat(LEFTCURLYBRACKET);\n\n    min = scanNumber(tokenizer);\n\n    if (tokenizer.charCode() === COMMA) {\n        tokenizer.pos++;\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n            max = scanNumber(tokenizer);\n        }\n    } else {\n        max = min;\n    }\n\n    tokenizer.eat(RIGHTCURLYBRACKET);\n\n    return {\n        min: Number(min),\n        max: max ? Number(max) : 0\n    };\n}\n\nfunction readMultiplier(tokenizer) {\n    let range = null;\n    let comma = false;\n\n    switch (tokenizer.charCode()) {\n        case ASTERISK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 0\n            };\n\n            break;\n\n        case PLUSSIGN:\n            tokenizer.pos++;\n\n            range = {\n                min: 1,\n                max: 0\n            };\n\n            break;\n\n        case QUESTIONMARK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 1\n            };\n\n            break;\n\n        case NUMBERSIGN:\n            tokenizer.pos++;\n\n            comma = true;\n\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n                range = readMultiplierRange(tokenizer);\n            } else if (tokenizer.charCode() === QUESTIONMARK) {\n                // https://www.w3.org/TR/css-values-4/#component-multipliers\n                // > the # and ? multipliers may be stacked as #?\n                // In this case just treat \"#?\" as a single multiplier\n                // { min: 0, max: 0, comma: true }\n                tokenizer.pos++;\n                range = {\n                    min: 0,\n                    max: 0\n                };\n            } else {\n                range = {\n                    min: 1,\n                    max: 0\n                };\n            }\n\n            break;\n\n        case LEFTCURLYBRACKET:\n            range = readMultiplierRange(tokenizer);\n            break;\n\n        default:\n            return null;\n    }\n\n    return {\n        type: 'Multiplier',\n        comma,\n        min: range.min,\n        max: range.max,\n        term: null\n    };\n}\n\nfunction maybeMultiplied(tokenizer, node) {\n    const multiplier = readMultiplier(tokenizer);\n\n    if (multiplier !== null) {\n        multiplier.term = node;\n\n        // https://www.w3.org/TR/css-values-4/#component-multipliers\n        // > The + and # multipliers may be stacked as +#;\n        // Represent \"+#\" as nested multipliers:\n        // { ...<multiplier #>,\n        //   term: {\n        //     ...<multipler +>,\n        //     term: node\n        //   }\n        // }\n        if (tokenizer.charCode() === NUMBERSIGN &&\n            tokenizer.charCodeAt(tokenizer.pos - 1) === PLUSSIGN) {\n            return maybeMultiplied(tokenizer, multiplier);\n        }\n\n        return multiplier;\n    }\n\n    return node;\n}\n\nfunction maybeToken(tokenizer) {\n    const ch = tokenizer.peek();\n\n    if (ch === '') {\n        return null;\n    }\n\n    return {\n        type: 'Token',\n        value: ch\n    };\n}\n\nfunction readProperty(tokenizer) {\n    let name;\n\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n\n    name = scanWord(tokenizer);\n\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Property',\n        name\n    });\n}\n\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\n// 4.1. Range Restrictions and Range Definition Notation\n//\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\n// indicating a closed range between (and including) min and max.\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\nfunction readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    let min = null; // -Infinity\n    let max = null; // Infinity\n    let sign = 1;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n\n    if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n    }\n\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        min = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            min += scanWord(tokenizer);\n        }\n    }\n\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n\n    if (tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        sign = 1;\n\n        if (tokenizer.charCode() === HYPERMINUS) {\n            tokenizer.peek();\n            sign = -1;\n        }\n\n        max = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            max += scanWord(tokenizer);\n        }\n    }\n\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    return {\n        type: 'Range',\n        min,\n        max\n    };\n}\n\nfunction readType(tokenizer) {\n    let name;\n    let opts = null;\n\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n        tokenizer.pos += 2;\n        name += '()';\n    }\n\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n        scanSpaces(tokenizer);\n        opts = readTypeRange(tokenizer);\n    }\n\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Type',\n        name,\n        opts\n    });\n}\n\nfunction readKeywordOrFunction(tokenizer) {\n    const name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n        tokenizer.pos++;\n\n        return {\n            type: 'Function',\n            name\n        };\n    }\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Keyword',\n        name\n    });\n}\n\nfunction regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n        return {\n            type: 'Group',\n            terms,\n            combinator,\n            disallowEmpty: false,\n            explicit: false\n        };\n    }\n\n    let combinator;\n\n    combinators = Object.keys(combinators)\n        .sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);\n\n    while (combinators.length > 0) {\n        combinator = combinators.shift();\n\n        let i = 0;\n        let subgroupStart = 0;\n\n        for (; i < terms.length; i++) {\n            const term = terms[i];\n\n            if (term.type === 'Combinator') {\n                if (term.value === combinator) {\n                    if (subgroupStart === -1) {\n                        subgroupStart = i - 1;\n                    }\n                    terms.splice(i, 1);\n                    i--;\n                } else {\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\n                        terms.splice(\n                            subgroupStart,\n                            i - subgroupStart,\n                            createGroup(terms.slice(subgroupStart, i), combinator)\n                        );\n                        i = subgroupStart + 1;\n                    }\n                    subgroupStart = -1;\n                }\n            }\n        }\n\n        if (subgroupStart !== -1 && combinators.length) {\n            terms.splice(\n                subgroupStart,\n                i - subgroupStart,\n                createGroup(terms.slice(subgroupStart, i), combinator)\n            );\n        }\n    }\n\n    return combinator;\n}\n\nfunction readImplicitGroup(tokenizer) {\n    const terms = [];\n    const combinators = {};\n    let token;\n    let prevToken = null;\n    let prevTokenPos = tokenizer.pos;\n\n    while (token = peek(tokenizer)) {\n        if (token.type !== 'Spaces') {\n            if (token.type === 'Combinator') {\n                // check for combinator in group beginning and double combinator sequence\n                if (prevToken === null || prevToken.type === 'Combinator') {\n                    tokenizer.pos = prevTokenPos;\n                    tokenizer.error('Unexpected combinator');\n                }\n\n                combinators[token.value] = true;\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n                combinators[' '] = true;  // a b\n                terms.push({\n                    type: 'Combinator',\n                    value: ' '\n                });\n            }\n\n            terms.push(token);\n            prevToken = token;\n            prevTokenPos = tokenizer.pos;\n        }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n        tokenizer.pos -= prevTokenPos;\n        tokenizer.error('Unexpected combinator');\n    }\n\n    return {\n        type: 'Group',\n        terms,\n        combinator: regroupTerms(terms, combinators) || ' ',\n        disallowEmpty: false,\n        explicit: false\n    };\n}\n\nfunction readGroup(tokenizer) {\n    let result;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    result.explicit = true;\n\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n        tokenizer.pos++;\n        result.disallowEmpty = true;\n    }\n\n    return result;\n}\n\nfunction peek(tokenizer) {\n    let code = tokenizer.charCode();\n\n    if (code < 128 && NAME_CHAR[code] === 1) {\n        return readKeywordOrFunction(tokenizer);\n    }\n\n    switch (code) {\n        case RIGHTSQUAREBRACKET:\n            // don't eat, stop scan a group\n            break;\n\n        case LEFTSQUAREBRACKET:\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\n\n        case LESSTHANSIGN:\n            return tokenizer.nextCharCode() === APOSTROPHE\n                ? readProperty(tokenizer)\n                : readType(tokenizer);\n\n        case VERTICALLINE:\n            return {\n                type: 'Combinator',\n                value: tokenizer.substringToPos(\n                    tokenizer.pos + (tokenizer.nextCharCode() === VERTICALLINE ? 2 : 1)\n                )\n            };\n\n        case AMPERSAND:\n            tokenizer.pos++;\n            tokenizer.eat(AMPERSAND);\n\n            return {\n                type: 'Combinator',\n                value: '&&'\n            };\n\n        case COMMA:\n            tokenizer.pos++;\n            return {\n                type: 'Comma'\n            };\n\n        case APOSTROPHE:\n            return maybeMultiplied(tokenizer, {\n                type: 'String',\n                value: scanString(tokenizer)\n            });\n\n        case SPACE:\n        case TAB:\n        case N:\n        case R:\n        case F:\n            return {\n                type: 'Spaces',\n                value: scanSpaces(tokenizer)\n            };\n\n        case COMMERCIALAT:\n            code = tokenizer.nextCharCode();\n\n            if (code < 128 && NAME_CHAR[code] === 1) {\n                tokenizer.pos++;\n                return {\n                    type: 'AtKeyword',\n                    name: scanWord(tokenizer)\n                };\n            }\n\n            return maybeToken(tokenizer);\n\n        case ASTERISK:\n        case PLUSSIGN:\n        case QUESTIONMARK:\n        case NUMBERSIGN:\n        case EXCLAMATIONMARK:\n            // prohibited tokens (used as a multiplier start)\n            break;\n\n        case LEFTCURLYBRACKET:\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n            // check next char isn't a number, because it's likely a disjoined multiplier\n            code = tokenizer.nextCharCode();\n\n            if (code < 48 || code > 57) {\n                return maybeToken(tokenizer);\n            }\n\n            break;\n\n        default:\n            return maybeToken(tokenizer);\n    }\n}\n\nexport function parse(source) {\n    const tokenizer = new Tokenizer(source);\n    const result = readImplicitGroup(tokenizer);\n\n    if (tokenizer.pos !== source.length) {\n        tokenizer.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n        return result.terms[0];\n    }\n\n    return result;\n};\n", "const noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nexport function walk(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    let enter = noop;\n    let leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n", "import { tokenize } from '../tokenizer/index.js';\n\nconst astToTokens = {\n    decorator(handlers) {\n        const tokens = [];\n        let curNode = null;\n\n        return {\n            ...handlers,\n            node(node) {\n                const tmp = curNode;\n                curNode = node;\n                handlers.node.call(this, node);\n                curNode = tmp;\n            },\n            emit(value, type, auto) {\n                tokens.push({\n                    type,\n                    value,\n                    node: auto ? null : curNode\n                });\n            },\n            result() {\n                return tokens;\n            }\n        };\n    }\n};\n\nfunction stringToTokens(str) {\n    const tokens = [];\n\n    tokenize(str, (type, start, end) =>\n        tokens.push({\n            type,\n            value: str.slice(start, end),\n            node: null\n        })\n    );\n\n    return tokens;\n}\n\nexport default function(value, syntax) {\n    if (typeof value === 'string') {\n        return stringToTokens(value);\n    }\n\n    return syntax.generate(value, astToTokens);\n};\n", "import { parse } from '../definition-syntax/parse.js';\n\nexport const MATCH = { type: 'Match' };\nexport const MISMATCH = { type: 'Mismatch' };\nexport const DISALLOW_EMPTY = { type: 'DisallowEmpty' };\n\nconst LEFTPARENTHESIS = 40;  // (\nconst RIGHTPARENTHESIS = 41; // )\n\nfunction createCondition(match, thenBranch, elseBranch) {\n    // reduce node count\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\n        return match;\n    }\n\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\n        return match;\n    }\n\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\n        thenBranch = match.then;\n        match = match.match;\n    }\n\n    return {\n        type: 'If',\n        match,\n        then: thenBranch,\n        else: elseBranch\n    };\n}\n\nfunction isFunctionType(name) {\n    return (\n        name.length > 2 &&\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\n    );\n}\n\nfunction isEnumCapatible(term) {\n    return (\n        term.type === 'Keyword' ||\n        term.type === 'AtKeyword' ||\n        term.type === 'Function' ||\n        term.type === 'Type' && isFunctionType(term.name)\n    );\n}\n\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\n    switch (combinator) {\n        case ' ': {\n            // Juxtaposing components means that all of them must occur, in the given order.\n            //\n            // a b c\n            // =\n            // match a\n            //   then match b\n            //     then match c\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            //   else MISMATCH\n            let result = MATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n\n                result = createCondition(\n                    term,\n                    result,\n                    MISMATCH\n                );\n            };\n\n            return result;\n        }\n\n        case '|': {\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\n            //\n            // a | b | c\n            // =\n            // match a\n            //   then MATCH\n            //   else match b\n            //     then MATCH\n            //     else match c\n            //       then MATCH\n            //       else MISMATCH\n\n            let result = MISMATCH;\n            let map = null;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                let term = terms[i];\n\n                // reduce sequence of keywords into a Enum\n                if (isEnumCapatible(term)) {\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\n                        map = Object.create(null);\n                        result = createCondition(\n                            {\n                                type: 'Enum',\n                                map\n                            },\n                            MATCH,\n                            result\n                        );\n                    }\n\n                    if (map !== null) {\n                        const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\n                        if (key in map === false) {\n                            map[key] = term;\n                            continue;\n                        }\n                    }\n                }\n\n                map = null;\n\n                // create a new conditonal node\n                result = createCondition(\n                    term,\n                    MATCH,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '&&': {\n            // A double ampersand (&&) separates two or more components,\n            // all of which must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since &&-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: true\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a && b && c\n            // =\n            // match a\n            //   then [b && c]\n            //   else match b\n            //     then [a && c]\n            //     else match c\n            //       then [a && b]\n            //       else MISMATCH\n            //\n            // a && b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MISMATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            let result = MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        false\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '||': {\n            // A double bar (||) separates two or more options:\n            // one or more of them must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since ||-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: false\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a || b || c\n            // =\n            // match a\n            //   then [b || c]\n            //   else match b\n            //     then [a || c]\n            //     else match c\n            //       then [a || b]\n            //       else MISMATCH\n            //\n            // a || b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MATCH\n            //     else MISMATCH\n            let result = atLeastOneTermMatched ? MATCH : MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        true\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n    }\n}\n\nfunction buildMultiplierMatchGraph(node) {\n    let result = MATCH;\n    let matchTerm = buildMatchGraphInternal(node.term);\n\n    if (node.max === 0) {\n        // disable repeating of empty match to prevent infinite loop\n        matchTerm = createCondition(\n            matchTerm,\n            DISALLOW_EMPTY,\n            MISMATCH\n        );\n\n        // an occurrence count is not limited, make a cycle;\n        // to collect more terms on each following matching mismatch\n        result = createCondition(\n            matchTerm,\n            null, // will be a loop\n            MISMATCH\n        );\n\n        result.then = createCondition(\n            MATCH,\n            MATCH,\n            result // make a loop\n        );\n\n        if (node.comma) {\n            result.then.else = createCondition(\n                { type: 'Comma', syntax: node },\n                result,\n                MISMATCH\n            );\n        }\n    } else {\n        // create a match node chain for [min .. max] interval with optional matches\n        for (let i = node.min || 1; i <= node.max; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                createCondition(\n                    MATCH,\n                    MATCH,\n                    result\n                ),\n                MISMATCH\n            );\n        }\n    }\n\n    if (node.min === 0) {\n        // allow zero match\n        result = createCondition(\n            MATCH,\n            MATCH,\n            result\n        );\n    } else {\n        // create a match node chain to collect [0 ... min - 1] required matches\n        for (let i = 0; i < node.min - 1; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                result,\n                MISMATCH\n            );\n        }\n    }\n\n    return result;\n}\n\nfunction buildMatchGraphInternal(node) {\n    if (typeof node === 'function') {\n        return {\n            type: 'Generic',\n            fn: node\n        };\n    }\n\n    switch (node.type) {\n        case 'Group': {\n            let result = buildGroupMatchGraph(\n                node.combinator,\n                node.terms.map(buildMatchGraphInternal),\n                false\n            );\n\n            if (node.disallowEmpty) {\n                result = createCondition(\n                    result,\n                    DISALLOW_EMPTY,\n                    MISMATCH\n                );\n            }\n\n            return result;\n        }\n\n        case 'Multiplier':\n            return buildMultiplierMatchGraph(node);\n\n        case 'Type':\n        case 'Property':\n            return {\n                type: node.type,\n                name: node.name,\n                syntax: node\n            };\n\n        case 'Keyword':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'AtKeyword':\n            return {\n                type: node.type,\n                name: '@' + node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'Function':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase() + '(',\n                syntax: node\n            };\n\n        case 'String':\n            // convert a one char length String to a Token\n            if (node.value.length === 3) {\n                return {\n                    type: 'Token',\n                    value: node.value.charAt(1),\n                    syntax: node\n                };\n            }\n\n            // otherwise use it as is\n            return {\n                type: node.type,\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\n                syntax: node\n            };\n\n        case 'Token':\n            return {\n                type: node.type,\n                value: node.value,\n                syntax: node\n            };\n\n        case 'Comma':\n            return {\n                type: node.type,\n                syntax: node\n            };\n\n        default:\n            throw new Error('Unknown node type:', node.type);\n    }\n}\n\nexport function buildMatchGraph(syntaxTree, ref) {\n    if (typeof syntaxTree === 'string') {\n        syntaxTree = parse(syntaxTree);\n    }\n\n    return {\n        type: 'MatchGraph',\n        match: buildMatchGraphInternal(syntaxTree),\n        syntax: ref || null,\n        source: syntaxTree\n    };\n}\n", "import { MATCH, MISMATCH, DISALLOW_EMPTY } from './match-graph.js';\nimport * as TYPE from '../tokenizer/types.js';\n\nconst { hasOwnProperty } = Object.prototype;\nconst STUB = 0;\nconst TOKEN = 1;\nconst OPEN_SYNTAX = 2;\nconst CLOSE_SYNTAX = 3;\n\nconst EXIT_REASON_MATCH = 'Match';\nconst EXIT_REASON_MISMATCH = 'Mismatch';\nconst EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\n\nconst ITERATION_LIMIT = 15000;\nexport let totalIterationCount = 0;\n\nfunction reverseList(list) {\n    let prev = null;\n    let next = null;\n    let item = list;\n\n    while (item !== null) {\n        next = item.prev;\n        item.prev = prev;\n        prev = item;\n        item = next;\n    }\n\n    return prev;\n}\n\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\n    if (testStr.length !== referenceStr.length) {\n        return false;\n    }\n\n    for (let i = 0; i < testStr.length; i++) {\n        const referenceCode = referenceStr.charCodeAt(i);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isContextEdgeDelim(token) {\n    if (token.type !== TYPE.Delim) {\n        return false;\n    }\n\n    // Fix matching for unicode-range: U+30??, U+FF00-FF9F\n    // Probably we need to check out previous match instead\n    return token.value !== '?';\n}\n\nfunction isCommaContextStart(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.Comma ||\n        token.type === TYPE.Function ||\n        token.type === TYPE.LeftParenthesis ||\n        token.type === TYPE.LeftSquareBracket ||\n        token.type === TYPE.LeftCurlyBracket ||\n        isContextEdgeDelim(token)\n    );\n}\n\nfunction isCommaContextEnd(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.RightParenthesis ||\n        token.type === TYPE.RightSquareBracket ||\n        token.type === TYPE.RightCurlyBracket ||\n        (token.type === TYPE.Delim && token.value === '/')\n    );\n}\n\nfunction internalMatch(tokens, state, syntaxes) {\n    function moveToNextToken() {\n        do {\n            tokenIndex++;\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\n    }\n\n    function getNextToken(offset) {\n        const nextIndex = tokenIndex + offset;\n\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\n    }\n\n    function stateSnapshotFromSyntax(nextState, prev) {\n        return {\n            nextState,\n            matchStack,\n            syntaxStack,\n            thenStack,\n            tokenIndex,\n            prev\n        };\n    }\n\n    function pushThenStack(nextState) {\n        thenStack = {\n            nextState,\n            matchStack,\n            syntaxStack,\n            prev: thenStack\n        };\n    }\n\n    function pushElseStack(nextState) {\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\n    }\n\n    function addTokenToMatch() {\n        matchStack = {\n            type: TOKEN,\n            syntax: state.syntax,\n            token,\n            prev: matchStack\n        };\n\n        moveToNextToken();\n        syntaxStash = null;\n\n        if (tokenIndex > longestMatch) {\n            longestMatch = tokenIndex;\n        }\n    }\n\n    function openSyntax() {\n        syntaxStack = {\n            syntax: state.syntax,\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\n            prev: syntaxStack\n        };\n\n        matchStack = {\n            type: OPEN_SYNTAX,\n            syntax: state.syntax,\n            token: matchStack.token,\n            prev: matchStack\n        };\n    }\n\n    function closeSyntax() {\n        if (matchStack.type === OPEN_SYNTAX) {\n            matchStack = matchStack.prev;\n        } else {\n            matchStack = {\n                type: CLOSE_SYNTAX,\n                syntax: syntaxStack.syntax,\n                token: matchStack.token,\n                prev: matchStack\n            };\n        }\n\n        syntaxStack = syntaxStack.prev;\n    }\n\n    let syntaxStack = null;\n    let thenStack = null;\n    let elseStack = null;\n\n    // null – stashing allowed, nothing stashed\n    // false – stashing disabled, nothing stashed\n    // anithing else – fail stashable syntaxes, some syntax stashed\n    let syntaxStash = null;\n\n    let iterationCount = 0; // count iterations and prevent infinite loop\n    let exitReason = null;\n\n    let token = null;\n    let tokenIndex = -1;\n    let longestMatch = 0;\n    let matchStack = {\n        type: STUB,\n        syntax: null,\n        token: null,\n        prev: null\n    };\n\n    moveToNextToken();\n\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\n        // function mapList(list, fn) {\n        //     const result = [];\n        //     while (list) {\n        //         result.unshift(fn(list));\n        //         list = list.prev;\n        //     }\n        //     return result;\n        // }\n        // console.log('--\\n',\n        //     '#' + iterationCount,\n        //     require('util').inspect({\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\n        //         token: token && token.value,\n        //         tokenIndex,\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\n        //     }, { depth: null })\n        // );\n        switch (state.type) {\n            case 'Match':\n                if (thenStack === null) {\n                    // turn to MISMATCH when some tokens left unmatched\n                    if (token !== null) {\n                        // doesn't mismatch if just one token left and it's an IE hack\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\n                            state = MISMATCH;\n                            break;\n                        }\n                    }\n\n                    // break the main loop, return a result - MATCH\n                    exitReason = EXIT_REASON_MATCH;\n                    break;\n                }\n\n                // go to next syntax (`then` branch)\n                state = thenStack.nextState;\n\n                // check match is not empty\n                if (state === DISALLOW_EMPTY) {\n                    if (thenStack.matchStack === matchStack) {\n                        state = MISMATCH;\n                        break;\n                    } else {\n                        state = MATCH;\n                    }\n                }\n\n                // close syntax if needed\n                while (thenStack.syntaxStack !== syntaxStack) {\n                    closeSyntax();\n                }\n\n                // pop stack\n                thenStack = thenStack.prev;\n                break;\n\n            case 'Mismatch':\n                // when some syntax is stashed\n                if (syntaxStash !== null && syntaxStash !== false) {\n                    // there is no else branches or a branch reduce match stack\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\n                        // restore state from the stash\n                        elseStack = syntaxStash;\n                        syntaxStash = false; // disable stashing\n                    }\n                } else if (elseStack === null) {\n                    // no else branches -> break the main loop\n                    // return a result - MISMATCH\n                    exitReason = EXIT_REASON_MISMATCH;\n                    break;\n                }\n\n                // go to next syntax (`else` branch)\n                state = elseStack.nextState;\n\n                // restore all the rest stack states\n                thenStack = elseStack.thenStack;\n                syntaxStack = elseStack.syntaxStack;\n                matchStack = elseStack.matchStack;\n                tokenIndex = elseStack.tokenIndex;\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n\n                // pop stack\n                elseStack = elseStack.prev;\n                break;\n\n            case 'MatchGraph':\n                state = state.match;\n                break;\n\n            case 'If':\n                // IMPORTANT: else stack push must go first,\n                // since it stores the state of thenStack before changes\n                if (state.else !== MISMATCH) {\n                    pushElseStack(state.else);\n                }\n\n                if (state.then !== MATCH) {\n                    pushThenStack(state.then);\n                }\n\n                state = state.match;\n                break;\n\n            case 'MatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state,\n                    index: 0,\n                    mask: 0\n                };\n                break;\n\n            case 'MatchOnceBuffer': {\n                const terms = state.syntax.terms;\n\n                if (state.index === terms.length) {\n                    // no matches at all or it's required all terms to be matched\n                    if (state.mask === 0 || state.syntax.all) {\n                        state = MISMATCH;\n                        break;\n                    }\n\n                    // a partial match is ok\n                    state = MATCH;\n                    break;\n                }\n\n                // all terms are matched\n                if (state.mask === (1 << terms.length) - 1) {\n                    state = MATCH;\n                    break;\n                }\n\n                for (; state.index < terms.length; state.index++) {\n                    const matchFlag = 1 << state.index;\n\n                    if ((state.mask & matchFlag) === 0) {\n                        // IMPORTANT: else stack push must go first,\n                        // since it stores the state of thenStack before changes\n                        pushElseStack(state);\n                        pushThenStack({\n                            type: 'AddMatchOnce',\n                            syntax: state.syntax,\n                            mask: state.mask | matchFlag\n                        });\n\n                        // match\n                        state = terms[state.index++];\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case 'AddMatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state.syntax,\n                    index: 0,\n                    mask: state.mask\n                };\n                break;\n\n            case 'Enum':\n                if (token !== null) {\n                    let name = token.value.toLowerCase();\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (name.indexOf('\\\\') !== -1) {\n                        name = name.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (hasOwnProperty.call(state.map, name)) {\n                        state = state.map[name];\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Generic': {\n                const opts = syntaxStack !== null ? syntaxStack.opts : null;\n                const lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\n\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n            }\n\n            case 'Type':\n            case 'Property': {\n                const syntaxDict = state.type === 'Type' ? 'types' : 'properties';\n                const dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\n\n                if (!dictSyntax || !dictSyntax.match) {\n                    throw new Error(\n                        'Bad syntax reference: ' +\n                        (state.type === 'Type'\n                            ? '<' + state.name + '>'\n                            : '<\\'' + state.name + '\\'>')\n                    );\n                }\n\n                // stash a syntax for types with low priority\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\n                    const lowPriorityMatching =\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\n                        // can only claim the keyword if no other unfulfilled production can claim it.\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\n\n                        // https://drafts.csswg.org/css-values-4/#lengths\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\n                        // it must parse as a <number>\n                        (state.name === 'length' && token.value === '0');\n\n                    if (lowPriorityMatching) {\n                        if (syntaxStash === null) {\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\n                        }\n\n                        state = MISMATCH;\n                        break;\n                    }\n                }\n\n                openSyntax();\n                state = dictSyntax.match;\n                break;\n            }\n\n            case 'Keyword': {\n                const name = state.name;\n\n                if (token !== null) {\n                    let keywordName = token.value;\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (keywordName.indexOf('\\\\') !== -1) {\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\n                        addTokenToMatch();\n                        state = MATCH;\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n            }\n\n            case 'AtKeyword':\n            case 'Function':\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Token':\n                if (token !== null && token.value === state.value) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Comma':\n                if (token !== null && token.type === TYPE.Comma) {\n                    if (isCommaContextStart(matchStack.token)) {\n                        state = MISMATCH;\n                    } else {\n                        addTokenToMatch();\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\n                    }\n                } else {\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\n                }\n\n                break;\n\n            case 'String':\n                let string = '';\n                let lastTokenIndex = tokenIndex;\n\n                for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\n                    string += tokens[lastTokenIndex].value;\n                }\n\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n\n            default:\n                throw new Error('Unknown node type: ' + state.type);\n        }\n    }\n\n    totalIterationCount += iterationCount;\n\n    switch (exitReason) {\n        case null:\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\n            matchStack = null;\n            break;\n\n        case EXIT_REASON_MATCH:\n            while (syntaxStack !== null) {\n                closeSyntax();\n            }\n            break;\n\n        default:\n            matchStack = null;\n    }\n\n    return {\n        tokens,\n        reason: exitReason,\n        iterations: iterationCount,\n        match: matchStack,\n        longestMatch\n    };\n}\n\nexport function matchAsList(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match !== null) {\n        let item = reverseList(matchResult.match).prev;\n\n        matchResult.match = [];\n\n        while (item !== null) {\n            switch (item.type) {\n                case OPEN_SYNTAX:\n                case CLOSE_SYNTAX:\n                    matchResult.match.push({\n                        type: item.type,\n                        syntax: item.syntax\n                    });\n                    break;\n\n                default:\n                    matchResult.match.push({\n                        token: item.token.value,\n                        node: item.token.node\n                    });\n                    break;\n            }\n\n            item = item.prev;\n        }\n    }\n\n    return matchResult;\n}\n\nexport function matchAsTree(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match === null) {\n        return matchResult;\n    }\n\n    let item = matchResult.match;\n    let host = matchResult.match = {\n        syntax: matchGraph.syntax || null,\n        match: []\n    };\n    const hostStack = [host];\n\n    // revert a list and start with 2nd item since 1st is a stub item\n    item = reverseList(item).prev;\n\n    // build a tree\n    while (item !== null) {\n        switch (item.type) {\n            case OPEN_SYNTAX:\n                host.match.push(host = {\n                    syntax: item.syntax,\n                    match: []\n                });\n                hostStack.push(host);\n                break;\n\n            case CLOSE_SYNTAX:\n                hostStack.pop();\n                host = hostStack[hostStack.length - 1];\n                break;\n\n            default:\n                host.match.push({\n                    syntax: item.syntax || null,\n                    token: item.token.value,\n                    node: item.token.node\n                });\n        }\n\n        item = item.prev;\n    }\n\n    return matchResult;\n}\n", "export function getTrace(node) {\n    function shouldPutToTrace(syntax) {\n        if (syntax === null) {\n            return false;\n        }\n\n        return (\n            syntax.type === 'Type' ||\n            syntax.type === 'Property' ||\n            syntax.type === 'Keyword'\n        );\n    }\n\n    function hasMatch(matchNode) {\n        if (Array.isArray(matchNode.match)) {\n            // use for-loop for better perfomance\n            for (let i = 0; i < matchNode.match.length; i++) {\n                if (hasMatch(matchNode.match[i])) {\n                    if (shouldPutToTrace(matchNode.syntax)) {\n                        result.unshift(matchNode.syntax);\n                    }\n\n                    return true;\n                }\n            }\n        } else if (matchNode.node === node) {\n            result = shouldPutToTrace(matchNode.syntax)\n                ? [matchNode.syntax]\n                : [];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    let result = null;\n\n    if (this.matched !== null) {\n        hasMatch(this.matched);\n    }\n\n    return result;\n}\n\nexport function isType(node, type) {\n    return testNode(this, node, match => match.type === 'Type' && match.name === type);\n}\n\nexport function isProperty(node, property) {\n    return testNode(this, node, match => match.type === 'Property' && match.name === property);\n}\n\nexport function isKeyword(node) {\n    return testNode(this, node, match => match.type === 'Keyword');\n}\n\nfunction testNode(match, node, fn) {\n    const trace = getTrace.call(match, node);\n\n    if (trace === null) {\n        return false;\n    }\n\n    return trace.some(fn);\n}\n", "import { List } from '../utils/List.js';\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nexport function matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            const start = getFirstMatchNode(matchNode);\n            const end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    const nodes = new List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    const fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n", "import { List } from '../utils/List.js';\n\nconst { hasOwnProperty } = Object.prototype;\n\nfunction isValidNumber(value) {\n    // Number.isInteger(value) && value >= 0\n    return (\n        typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value &&\n        value >= 0\n    );\n}\n\nfunction isValidLocation(loc) {\n    return (\n        Boolean(loc) &&\n        isValidNumber(loc.offset) &&\n        isValidNumber(loc.line) &&\n        isValidNumber(loc.column)\n    );\n}\n\nfunction createNodeStructureChecker(type, fields) {\n    return function checkNode(node, warn) {\n        if (!node || node.constructor !== Object) {\n            return warn(node, 'Type of node should be an Object');\n        }\n\n        for (let key in node) {\n            let valid = true;\n\n            if (hasOwnProperty.call(node, key) === false) {\n                continue;\n            }\n\n            if (key === 'type') {\n                if (node.type !== type) {\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\n                }\n            } else if (key === 'loc') {\n                if (node.loc === null) {\n                    continue;\n                } else if (node.loc && node.loc.constructor === Object) {\n                    if (typeof node.loc.source !== 'string') {\n                        key += '.source';\n                    } else if (!isValidLocation(node.loc.start)) {\n                        key += '.start';\n                    } else if (!isValidLocation(node.loc.end)) {\n                        key += '.end';\n                    } else {\n                        continue;\n                    }\n                }\n\n                valid = false;\n            } else if (fields.hasOwnProperty(key)) {\n                valid = false;\n\n                for (let i = 0; !valid && i < fields[key].length; i++) {\n                    const fieldType = fields[key][i];\n\n                    switch (fieldType) {\n                        case String:\n                            valid = typeof node[key] === 'string';\n                            break;\n\n                        case Boolean:\n                            valid = typeof node[key] === 'boolean';\n                            break;\n\n                        case null:\n                            valid = node[key] === null;\n                            break;\n\n                        default:\n                            if (typeof fieldType === 'string') {\n                                valid = node[key] && node[key].type === fieldType;\n                            } else if (Array.isArray(fieldType)) {\n                                valid = node[key] instanceof List;\n                            }\n                    }\n                }\n            } else {\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\n            }\n\n            if (!valid) {\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\n            }\n        }\n\n        for (const key in fields) {\n            if (hasOwnProperty.call(fields, key) &&\n                hasOwnProperty.call(node, key) === false) {\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\n            }\n        }\n    };\n}\n\nfunction processStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const fields = {\n        type: String,\n        loc: true\n    };\n    const docs = {\n        type: '\"' + name + '\"'\n    };\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        const docsTypes = [];\n        const fieldTypes = fields[key] = Array.isArray(structure[key])\n            ? structure[key].slice()\n            : [structure[key]];\n\n        for (let i = 0; i < fieldTypes.length; i++) {\n            const fieldType = fieldTypes[i];\n            if (fieldType === String || fieldType === Boolean) {\n                docsTypes.push(fieldType.name);\n            } else if (fieldType === null) {\n                docsTypes.push('null');\n            } else if (typeof fieldType === 'string') {\n                docsTypes.push('<' + fieldType + '>');\n            } else if (Array.isArray(fieldType)) {\n                docsTypes.push('List'); // TODO: use type enum\n            } else {\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\n            }\n        }\n\n        docs[key] = docsTypes.join(' | ');\n    }\n\n    return {\n        docs,\n        check: createNodeStructureChecker(name, fields)\n    };\n}\n\nexport function getStructureFromConfig(config) {\n    const structure = {};\n\n    if (config.node) {\n        for (const name in config.node) {\n            if (hasOwnProperty.call(config.node, name)) {\n                const nodeType = config.node[name];\n\n                if (nodeType.structure) {\n                    structure[name] = processStructure(name, nodeType);\n                } else {\n                    throw new Error('Missed `structure` field in `' + name + '` node type definition');\n                }\n            }\n        }\n    }\n\n    return structure;\n};\n", "import { SyntaxReferenceError, SyntaxMatchError } from './error.js';\nimport * as names from '../utils/names.js';\nimport { cssWideKeywords } from './generic-const.js';\nimport { createGenericTypes } from './generic.js';\nimport * as units from './units.js';\nimport { parse, generate, walk } from '../definition-syntax/index.js';\nimport prepareTokens from './prepare-tokens.js';\nimport { buildMatchGraph } from './match-graph.js';\nimport { matchAsTree } from './match.js';\nimport * as trace from './trace.js';\nimport { matchFragments } from './search.js';\nimport { getStructureFromConfig } from './structure.js';\n\nconst cssWideKeywordsSyntax = buildMatchGraph(cssWideKeywords.join(' | '));\n\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const name in map) {\n        if (map[name].syntax) {\n            result[name] = syntaxAsAst\n                ? map[name].syntax\n                : generate(map[name].syntax, { compact });\n        }\n    }\n\n    return result;\n}\n\nfunction dumpAtruleMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const [name, atrule] of Object.entries(map)) {\n        result[name] = {\n            prelude: atrule.prelude && (\n                syntaxAsAst\n                    ? atrule.prelude.syntax\n                    : generate(atrule.prelude.syntax, { compact })\n            ),\n            descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)\n        };\n    }\n\n    return result;\n}\n\nfunction valueHasVar(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].value.toLowerCase() === 'var(') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction buildMatchResult(matched, error, iterations) {\n    return {\n        matched,\n        iterations,\n        error,\n        ...trace\n    };\n}\n\nfunction matchSyntax(lexer, syntax, value, useCssWideKeywords) {\n    const tokens = prepareTokens(value, lexer.syntax);\n    let result;\n\n    if (valueHasVar(tokens)) {\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\n    }\n\n    if (useCssWideKeywords) {\n        result = matchAsTree(tokens, lexer.cssWideKeywordsSyntax, lexer);\n    }\n\n    if (!useCssWideKeywords || !result.match) {\n        result = matchAsTree(tokens, syntax.match, lexer);\n        if (!result.match) {\n            return buildMatchResult(\n                null,\n                new SyntaxMatchError(result.reason, syntax.syntax, value, result),\n                result.iterations\n            );\n        }\n    }\n\n    return buildMatchResult(result.match, null, result.iterations);\n}\n\nexport class Lexer {\n    constructor(config, syntax, structure) {\n        this.cssWideKeywordsSyntax = cssWideKeywordsSyntax;\n        this.syntax = syntax;\n        this.generic = false;\n        this.units = { ...units };\n        this.atrules = Object.create(null);\n        this.properties = Object.create(null);\n        this.types = Object.create(null);\n        this.structure = structure || getStructureFromConfig(config);\n\n        if (config) {\n            if (config.units) {\n                for (const group of Object.keys(units)) {\n                    if (Array.isArray(config.units[group])) {\n                        this.units[group] = config.units[group];\n                    }\n                }\n            }\n\n            if (config.types) {\n                for (const name in config.types) {\n                    this.addType_(name, config.types[name]);\n                }\n            }\n\n            if (config.generic) {\n                this.generic = true;\n                for (const [name, value] of Object.entries(createGenericTypes(this.units))) {\n                    this.addType_(name, value);\n                }\n            }\n\n            if (config.atrules) {\n                for (const name in config.atrules) {\n                    this.addAtrule_(name, config.atrules[name]);\n                }\n            }\n\n            if (config.properties) {\n                for (const name in config.properties) {\n                    this.addProperty_(name, config.properties[name]);\n                }\n            }\n        }\n    }\n\n    checkStructure(ast) {\n        function collectWarning(node, message) {\n            warns.push({ node, message });\n        }\n\n        const structure = this.structure;\n        const warns = [];\n\n        this.syntax.walk(ast, function(node) {\n            if (structure.hasOwnProperty(node.type)) {\n                structure[node.type].check(node, collectWarning);\n            } else {\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\n            }\n        });\n\n        return warns.length ? warns : false;\n    }\n\n    createDescriptor(syntax, type, name, parent = null) {\n        const ref = {\n            type,\n            name\n        };\n        const descriptor = {\n            type,\n            name,\n            parent,\n            serializable: typeof syntax === 'string' || (syntax && typeof syntax.type === 'string'),\n            syntax: null,\n            match: null\n        };\n\n        if (typeof syntax === 'function') {\n            descriptor.match = buildMatchGraph(syntax, ref);\n        } else {\n            if (typeof syntax === 'string') {\n                // lazy parsing on first access\n                Object.defineProperty(descriptor, 'syntax', {\n                    get() {\n                        Object.defineProperty(descriptor, 'syntax', {\n                            value: parse(syntax)\n                        });\n\n                        return descriptor.syntax;\n                    }\n                });\n            } else {\n                descriptor.syntax = syntax;\n            }\n\n            // lazy graph build on first access\n            Object.defineProperty(descriptor, 'match', {\n                get() {\n                    Object.defineProperty(descriptor, 'match', {\n                        value: buildMatchGraph(descriptor.syntax, ref)\n                    });\n\n                    return descriptor.match;\n                }\n            });\n        }\n\n        return descriptor;\n    }\n    addAtrule_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.atrules[name] = {\n            type: 'Atrule',\n            name: name,\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\n            descriptors: syntax.descriptors\n                ? Object.keys(syntax.descriptors).reduce(\n                    (map, descName) => {\n                        map[descName] = this.createDescriptor(syntax.descriptors[descName], 'AtruleDescriptor', descName, name);\n                        return map;\n                    },\n                    Object.create(null)\n                )\n                : null\n        };\n    }\n    addProperty_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\n    }\n    addType_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\n    }\n\n    checkAtruleName(atruleName) {\n        if (!this.getAtrule(atruleName)) {\n            return new SyntaxReferenceError('Unknown at-rule', '@' + atruleName);\n        }\n    }\n    checkAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude && prelude) {\n            return new SyntaxError('At-rule `@' + atruleName + '` should not contain a prelude');\n        }\n\n        if (atrule.prelude && !prelude) {\n            if (!matchSyntax(this, atrule.prelude, '', false).matched) {\n                return new SyntaxError('At-rule `@' + atruleName + '` should contain a prelude');\n            }\n        }\n    }\n    checkAtruleDescriptorName(atruleName, descriptorName) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        if (!atrule.descriptors) {\n            return new SyntaxError('At-rule `@' + atruleName + '` has no known descriptors');\n        }\n\n        if (!atrule.descriptors[descriptor.name] &&\n            !atrule.descriptors[descriptor.basename]) {\n            return new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName);\n        }\n    }\n    checkPropertyName(propertyName) {\n        if (!this.getProperty(propertyName)) {\n            return new SyntaxReferenceError('Unknown property', propertyName);\n        }\n    }\n\n    matchAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtrulePrelude(atruleName, prelude);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude) {\n            return buildMatchResult(null, null);\n        }\n\n        return matchSyntax(this, atrule.prelude, prelude || '', false);\n    }\n    matchAtruleDescriptor(atruleName, descriptorName, value) {\n        const error = this.checkAtruleDescriptorName(atruleName, descriptorName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);\n    }\n    matchDeclaration(node) {\n        if (node.type !== 'Declaration') {\n            return buildMatchResult(null, new Error('Not a Declaration node'));\n        }\n\n        return this.matchProperty(node.property, node.value);\n    }\n    matchProperty(propertyName, value) {\n        // don't match syntax for a custom property at the moment\n        if (names.property(propertyName).custom) {\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\n        }\n\n        const error = this.checkPropertyName(propertyName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        return matchSyntax(this, this.getProperty(propertyName), value, true);\n    }\n    matchType(typeName, value) {\n        const typeSyntax = this.getType(typeName);\n\n        if (!typeSyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\n        }\n\n        return matchSyntax(this, typeSyntax, value, false);\n    }\n    match(syntax, value) {\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\n        }\n\n        if (typeof syntax === 'string' || !syntax.match) {\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\n        }\n\n        return matchSyntax(this, syntax, value, false);\n    }\n\n    findValueFragments(propertyName, value, type, name) {\n        return matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\n    }\n    findDeclarationValueFragments(declaration, type, name) {\n        return matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\n    }\n    findAllFragments(ast, type, name) {\n        const result = [];\n\n        this.syntax.walk(ast, {\n            visit: 'Declaration',\n            enter: (declaration) => {\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\n            }\n        });\n\n        return result;\n    }\n\n    getAtrule(atruleName, fallbackBasename = true) {\n        const atrule = names.keyword(atruleName);\n        const atruleEntry = atrule.vendor && fallbackBasename\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\n            : this.atrules[atrule.name];\n\n        return atruleEntry || null;\n    }\n    getAtrulePrelude(atruleName, fallbackBasename = true) {\n        const atrule = this.getAtrule(atruleName, fallbackBasename);\n\n        return atrule && atrule.prelude || null;\n    }\n    getAtruleDescriptor(atruleName, name) {\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\n            ? this.atrules[atruleName].declarators[name] || null\n            : null;\n    }\n    getProperty(propertyName, fallbackBasename = true) {\n        const property = names.property(propertyName);\n        const propertyEntry = property.vendor && fallbackBasename\n            ? this.properties[property.name] || this.properties[property.basename]\n            : this.properties[property.name];\n\n        return propertyEntry || null;\n    }\n    getType(name) {\n        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;\n    }\n\n    validate() {\n        function validate(syntax, name, broken, descriptor) {\n            if (broken.has(name)) {\n                return broken.get(name);\n            }\n\n            broken.set(name, false);\n            if (descriptor.syntax !== null) {\n                walk(descriptor.syntax, function(node) {\n                    if (node.type !== 'Type' && node.type !== 'Property') {\n                        return;\n                    }\n\n                    const map = node.type === 'Type' ? syntax.types : syntax.properties;\n                    const brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\n\n                    if (!hasOwnProperty.call(map, node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\n                        broken.set(name, true);\n                    }\n                }, this);\n            }\n        }\n\n        let brokenTypes = new Map();\n        let brokenProperties = new Map();\n\n        for (const key in this.types) {\n            validate(this, key, brokenTypes, this.types[key]);\n        }\n\n        for (const key in this.properties) {\n            validate(this, key, brokenProperties, this.properties[key]);\n        }\n\n        brokenTypes = [...brokenTypes.keys()].filter(name => brokenTypes.get(name));\n        brokenProperties = [...brokenProperties.keys()].filter(name => brokenProperties.get(name));\n\n        if (brokenTypes.length || brokenProperties.length) {\n            return {\n                types: brokenTypes,\n                properties: brokenProperties\n            };\n        }\n\n        return null;\n    }\n    dump(syntaxAsAst, pretty) {\n        return {\n            generic: this.generic,\n            units: this.units,\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),\n            atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)\n        };\n    }\n    toString() {\n        return JSON.stringify(this.dump());\n    }\n};\n", "function appendOrSet(a, b) {\n    if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n        return typeof a === 'string'\n            ? a + b\n            : b.replace(/^\\s*\\|\\s*/, '');\n    }\n\n    return b || null;\n}\n\nfunction sliceProps(obj, props) {\n    const result = Object.create(null);\n\n    for (const [key, value] of Object.entries(obj)) {\n        if (value) {\n            result[key] = {};\n            for (const prop of Object.keys(value)) {\n                if (props.includes(prop)) {\n                    result[key][prop] = value[prop];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default function mix(dest, src) {\n    const result = { ...dest };\n\n    for (const [prop, value] of Object.entries(src)) {\n        switch (prop) {\n            case 'generic':\n                result[prop] = Boolean(value);\n                break;\n\n            case 'units':\n                result[prop] = { ...dest[prop] };\n                for (const [name, patch] of Object.entries(value)) {\n                    result[prop][name] = Array.isArray(patch) ? patch : [];\n                }\n                break;\n\n            case 'atrules':\n                result[prop] = { ...dest[prop] };\n\n                for (const [name, atrule] of Object.entries(value)) {\n                    const exists = result[prop][name] || {};\n                    const current = result[prop][name] = {\n                        prelude: exists.prelude || null,\n                        descriptors: {\n                            ...exists.descriptors\n                        }\n                    };\n\n                    if (!atrule) {\n                        continue;\n                    }\n\n                    current.prelude = atrule.prelude\n                        ? appendOrSet(current.prelude, atrule.prelude)\n                        : current.prelude || null;\n\n                    for (const [descriptorName, descriptorValue] of Object.entries(atrule.descriptors || {})) {\n                        current.descriptors[descriptorName] = descriptorValue\n                            ? appendOrSet(current.descriptors[descriptorName], descriptorValue)\n                            : null;\n                    }\n\n                    if (!Object.keys(current.descriptors).length) {\n                        current.descriptors = null;\n                    }\n                }\n                break;\n\n            case 'types':\n            case 'properties':\n                result[prop] = { ...dest[prop] };\n                for (const [name, syntax] of Object.entries(value)) {\n                    result[prop][name] = appendOrSet(result[prop][name], syntax);\n                }\n                break;\n\n            case 'scope':\n                result[prop] = { ...dest[prop] };\n                for (const [name, props] of Object.entries(value)) {\n                    result[prop][name] = { ...result[prop][name], ...props };\n                }\n                break;\n\n            case 'parseContext':\n                result[prop] = {\n                    ...dest[prop],\n                    ...value\n                };\n                break;\n\n            case 'atrule':\n            case 'pseudo':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['parse']) };\n                break;\n\n            case 'node':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['name', 'structure', 'parse', 'generate', 'walkContext'])\n                };\n                break;\n        }\n    }\n\n    return result;\n}\n", "import { tokenize } from '../tokenizer/index.js';\nimport { createParser } from '../parser/create.js';\nimport { createGenerator } from '../generator/create.js';\nimport { createConvertor } from '../convertor/create.js';\nimport { createWalker } from '../walker/create.js';\nimport { Lexer } from '../lexer/Lexer.js';\nimport mix from './config/mix.js';\n\nfunction createSyntax(config) {\n    const parse = createParser(config);\n    const walk = createWalker(config);\n    const generate = createGenerator(config);\n    const { fromPlainObject, toPlainObject } = createConvertor(walk);\n\n    const syntax = {\n        lexer: null,\n        createLexer: config => new Lexer(config, syntax, syntax.lexer.structure),\n\n        tokenize,\n        parse,\n        generate,\n\n        walk,\n        find: walk.find,\n        findLast: walk.findLast,\n        findAll: walk.findAll,\n\n        fromPlainObject,\n        toPlainObject,\n\n        fork(extension) {\n            const base = mix({}, config); // copy of config\n\n            return createSyntax(\n                typeof extension === 'function'\n                    ? extension(base, Object.assign)\n                    : mix(base, extension)\n            );\n        }\n    };\n\n    syntax.lexer = new Lexer({\n        generic: true,\n        units: config.units,\n        types: config.types,\n        atrules: config.atrules,\n        properties: config.properties,\n        node: config.node\n    }, syntax);\n\n    return syntax;\n};\n\nexport default config => createSyntax(mix({}, config));\n", "export default {\n    \"generic\": true,\n    \"units\": {\n        \"angle\": [\n            \"deg\",\n            \"grad\",\n            \"rad\",\n            \"turn\"\n        ],\n        \"decibel\": [\n            \"db\"\n        ],\n        \"flex\": [\n            \"fr\"\n        ],\n        \"frequency\": [\n            \"hz\",\n            \"khz\"\n        ],\n        \"length\": [\n            \"cm\",\n            \"mm\",\n            \"q\",\n            \"in\",\n            \"pt\",\n            \"pc\",\n            \"px\",\n            \"em\",\n            \"rem\",\n            \"ex\",\n            \"rex\",\n            \"cap\",\n            \"rcap\",\n            \"ch\",\n            \"rch\",\n            \"ic\",\n            \"ric\",\n            \"lh\",\n            \"rlh\",\n            \"vw\",\n            \"svw\",\n            \"lvw\",\n            \"dvw\",\n            \"vh\",\n            \"svh\",\n            \"lvh\",\n            \"dvh\",\n            \"vi\",\n            \"svi\",\n            \"lvi\",\n            \"dvi\",\n            \"vb\",\n            \"svb\",\n            \"lvb\",\n            \"dvb\",\n            \"vmin\",\n            \"svmin\",\n            \"lvmin\",\n            \"dvmin\",\n            \"vmax\",\n            \"svmax\",\n            \"lvmax\",\n            \"dvmax\",\n            \"cqw\",\n            \"cqh\",\n            \"cqi\",\n            \"cqb\",\n            \"cqmin\",\n            \"cqmax\"\n        ],\n        \"resolution\": [\n            \"dpi\",\n            \"dpcm\",\n            \"dppx\",\n            \"x\"\n        ],\n        \"semitones\": [\n            \"st\"\n        ],\n        \"time\": [\n            \"s\",\n            \"ms\"\n        ]\n    },\n    \"types\": {\n        \"abs()\": \"abs( <calc-sum> )\",\n        \"absolute-size\": \"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large\",\n        \"acos()\": \"acos( <calc-sum> )\",\n        \"alpha-value\": \"<number>|<percentage>\",\n        \"angle-percentage\": \"<angle>|<percentage>\",\n        \"angular-color-hint\": \"<angle-percentage>\",\n        \"angular-color-stop\": \"<color>&&<color-stop-angle>?\",\n        \"angular-color-stop-list\": \"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>\",\n        \"animateable-feature\": \"scroll-position|contents|<custom-ident>\",\n        \"asin()\": \"asin( <calc-sum> )\",\n        \"atan()\": \"atan( <calc-sum> )\",\n        \"atan2()\": \"atan2( <calc-sum> , <calc-sum> )\",\n        \"attachment\": \"scroll|fixed|local\",\n        \"attr()\": \"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )\",\n        \"attr-matcher\": \"['~'|'|'|'^'|'$'|'*']? '='\",\n        \"attr-modifier\": \"i|s\",\n        \"attribute-selector\": \"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'\",\n        \"auto-repeat\": \"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"auto-track-list\": \"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?\",\n        \"axis\": \"block|inline|vertical|horizontal\",\n        \"baseline-position\": \"[first|last]? baseline\",\n        \"basic-shape\": \"<inset()>|<circle()>|<ellipse()>|<polygon()>|<path()>\",\n        \"bg-image\": \"none|<image>\",\n        \"bg-layer\": \"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"bg-position\": \"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]\",\n        \"bg-size\": \"[<length-percentage>|auto]{1,2}|cover|contain\",\n        \"blur()\": \"blur( <length> )\",\n        \"blend-mode\": \"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity\",\n        \"box\": \"border-box|padding-box|content-box\",\n        \"brightness()\": \"brightness( <number-percentage> )\",\n        \"calc()\": \"calc( <calc-sum> )\",\n        \"calc-sum\": \"<calc-product> [['+'|'-'] <calc-product>]*\",\n        \"calc-product\": \"<calc-value> ['*' <calc-value>|'/' <number>]*\",\n        \"calc-value\": \"<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )\",\n        \"calc-constant\": \"e|pi|infinity|-infinity|NaN\",\n        \"cf-final-image\": \"<image>|<color>\",\n        \"cf-mixing-image\": \"<percentage>?&&<image>\",\n        \"circle()\": \"circle( [<shape-radius>]? [at <position>]? )\",\n        \"clamp()\": \"clamp( <calc-sum>#{3} )\",\n        \"class-selector\": \"'.' <ident-token>\",\n        \"clip-source\": \"<url>\",\n        \"color\": \"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<hex-color>|<named-color>|currentcolor|<deprecated-system-color>\",\n        \"color-stop\": \"<color-stop-length>|<color-stop-angle>\",\n        \"color-stop-angle\": \"<angle-percentage>{1,2}\",\n        \"color-stop-length\": \"<length-percentage>{1,2}\",\n        \"color-stop-list\": \"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>\",\n        \"combinator\": \"'>'|'+'|'~'|['||']\",\n        \"common-lig-values\": \"[common-ligatures|no-common-ligatures]\",\n        \"compat-auto\": \"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button\",\n        \"composite-style\": \"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor\",\n        \"compositing-operator\": \"add|subtract|intersect|exclude\",\n        \"compound-selector\": \"[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!\",\n        \"compound-selector-list\": \"<compound-selector>#\",\n        \"complex-selector\": \"<compound-selector> [<combinator>? <compound-selector>]*\",\n        \"complex-selector-list\": \"<complex-selector>#\",\n        \"conic-gradient()\": \"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"contextual-alt-values\": \"[contextual|no-contextual]\",\n        \"content-distribution\": \"space-between|space-around|space-evenly|stretch\",\n        \"content-list\": \"[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+\",\n        \"content-position\": \"center|start|end|flex-start|flex-end\",\n        \"content-replacement\": \"<image>\",\n        \"contrast()\": \"contrast( [<number-percentage>] )\",\n        \"cos()\": \"cos( <calc-sum> )\",\n        \"counter\": \"<counter()>|<counters()>\",\n        \"counter()\": \"counter( <counter-name> , <counter-style>? )\",\n        \"counter-name\": \"<custom-ident>\",\n        \"counter-style\": \"<counter-style-name>|symbols( )\",\n        \"counter-style-name\": \"<custom-ident>\",\n        \"counters()\": \"counters( <counter-name> , <string> , <counter-style>? )\",\n        \"cross-fade()\": \"cross-fade( <cf-mixing-image> , <cf-final-image>? )\",\n        \"cubic-bezier-timing-function\": \"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )\",\n        \"deprecated-system-color\": \"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText\",\n        \"discretionary-lig-values\": \"[discretionary-ligatures|no-discretionary-ligatures]\",\n        \"display-box\": \"contents|none\",\n        \"display-inside\": \"flow|flow-root|table|flex|grid|ruby\",\n        \"display-internal\": \"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container\",\n        \"display-legacy\": \"inline-block|inline-list-item|inline-table|inline-flex|inline-grid\",\n        \"display-listitem\": \"<display-outside>?&&[flow|flow-root]?&&list-item\",\n        \"display-outside\": \"block|inline|run-in\",\n        \"drop-shadow()\": \"drop-shadow( <length>{2,3} <color>? )\",\n        \"east-asian-variant-values\": \"[jis78|jis83|jis90|jis04|simplified|traditional]\",\n        \"east-asian-width-values\": \"[full-width|proportional-width]\",\n        \"element()\": \"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )\",\n        \"ellipse()\": \"ellipse( [<shape-radius>{2}]? [at <position>]? )\",\n        \"ending-shape\": \"circle|ellipse\",\n        \"env()\": \"env( <custom-ident> , <declaration-value>? )\",\n        \"exp()\": \"exp( <calc-sum> )\",\n        \"explicit-track-list\": \"[<line-names>? <track-size>]+ <line-names>?\",\n        \"family-name\": \"<string>|<custom-ident>+\",\n        \"feature-tag-value\": \"<string> [<integer>|on|off]?\",\n        \"feature-type\": \"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation\",\n        \"feature-value-block\": \"<feature-type> '{' <feature-value-declaration-list> '}'\",\n        \"feature-value-block-list\": \"<feature-value-block>+\",\n        \"feature-value-declaration\": \"<custom-ident> : <integer>+ ;\",\n        \"feature-value-declaration-list\": \"<feature-value-declaration>\",\n        \"feature-value-name\": \"<custom-ident>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"filter-function\": \"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>\",\n        \"filter-function-list\": \"[<filter-function>|<url>]+\",\n        \"final-bg-layer\": \"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"fixed-breadth\": \"<length-percentage>\",\n        \"fixed-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"fixed-size\": \"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )\",\n        \"font-stretch-absolute\": \"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>\",\n        \"font-variant-css21\": \"[normal|small-caps]\",\n        \"font-weight-absolute\": \"normal|bold|<number [1,1000]>\",\n        \"frequency-percentage\": \"<frequency>|<percentage>\",\n        \"general-enclosed\": \"[<function-token> <any-value> )]|( <ident> <any-value> )\",\n        \"generic-family\": \"serif|sans-serif|cursive|fantasy|monospace|-apple-system\",\n        \"generic-name\": \"serif|sans-serif|cursive|fantasy|monospace\",\n        \"geometry-box\": \"<shape-box>|fill-box|stroke-box|view-box\",\n        \"gradient\": \"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>\",\n        \"grayscale()\": \"grayscale( <number-percentage> )\",\n        \"grid-line\": \"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]\",\n        \"historical-lig-values\": \"[historical-ligatures|no-historical-ligatures]\",\n        \"hsl()\": \"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hsla()\": \"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hue\": \"<number>|<angle>\",\n        \"hue-rotate()\": \"hue-rotate( <angle> )\",\n        \"hwb()\": \"hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )\",\n        \"hypot()\": \"hypot( <calc-sum># )\",\n        \"image\": \"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>\",\n        \"image()\": \"image( <image-tags>? [<image-src>? , <color>?]! )\",\n        \"image-set()\": \"image-set( <image-set-option># )\",\n        \"image-set-option\": \"[<image>|<string>] [<resolution>||type( <string> )]\",\n        \"image-src\": \"<url>|<string>\",\n        \"image-tags\": \"ltr|rtl\",\n        \"inflexible-breadth\": \"<length-percentage>|min-content|max-content|auto\",\n        \"inset()\": \"inset( <length-percentage>{1,4} [round <'border-radius'>]? )\",\n        \"invert()\": \"invert( <number-percentage> )\",\n        \"keyframes-name\": \"<custom-ident>|<string>\",\n        \"keyframe-block\": \"<keyframe-selector># { <declaration-list> }\",\n        \"keyframe-block-list\": \"<keyframe-block>+\",\n        \"keyframe-selector\": \"from|to|<percentage>\",\n        \"lab()\": \"lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )\",\n        \"layer()\": \"layer( <layer-name> )\",\n        \"layer-name\": \"<ident> ['.' <ident>]*\",\n        \"lch()\": \"lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )\",\n        \"leader()\": \"leader( <leader-type> )\",\n        \"leader-type\": \"dotted|solid|space|<string>\",\n        \"length-percentage\": \"<length>|<percentage>\",\n        \"line-names\": \"'[' <custom-ident>* ']'\",\n        \"line-name-list\": \"[<line-names>|<name-repeat>]+\",\n        \"line-style\": \"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n        \"line-width\": \"<length>|thin|medium|thick\",\n        \"linear-color-hint\": \"<length-percentage>\",\n        \"linear-color-stop\": \"<color> <color-stop-length>?\",\n        \"linear-gradient()\": \"linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"log()\": \"log( <calc-sum> , <calc-sum>? )\",\n        \"mask-layer\": \"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>\",\n        \"mask-position\": \"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?\",\n        \"mask-reference\": \"none|<image>|<mask-source>\",\n        \"mask-source\": \"<url>\",\n        \"masking-mode\": \"alpha|luminance|match-source\",\n        \"matrix()\": \"matrix( <number>#{6} )\",\n        \"matrix3d()\": \"matrix3d( <number>#{16} )\",\n        \"max()\": \"max( <calc-sum># )\",\n        \"media-and\": \"<media-in-parens> [and <media-in-parens>]+\",\n        \"media-condition\": \"<media-not>|<media-and>|<media-or>|<media-in-parens>\",\n        \"media-condition-without-or\": \"<media-not>|<media-and>|<media-in-parens>\",\n        \"media-feature\": \"( [<mf-plain>|<mf-boolean>|<mf-range>] )\",\n        \"media-in-parens\": \"( <media-condition> )|<media-feature>|<general-enclosed>\",\n        \"media-not\": \"not <media-in-parens>\",\n        \"media-or\": \"<media-in-parens> [or <media-in-parens>]+\",\n        \"media-query\": \"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?\",\n        \"media-query-list\": \"<media-query>#\",\n        \"media-type\": \"<ident>\",\n        \"mf-boolean\": \"<mf-name>\",\n        \"mf-name\": \"<ident>\",\n        \"mf-plain\": \"<mf-name> : <mf-value>\",\n        \"mf-range\": \"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\",\n        \"mf-value\": \"<number>|<dimension>|<ident>|<ratio>\",\n        \"min()\": \"min( <calc-sum># )\",\n        \"minmax()\": \"minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )\",\n        \"mod()\": \"mod( <calc-sum> , <calc-sum> )\",\n        \"name-repeat\": \"repeat( [<integer [1,∞]>|auto-fill] , <line-names>+ )\",\n        \"named-color\": \"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|<-non-standard-color>\",\n        \"namespace-prefix\": \"<ident>\",\n        \"ns-prefix\": \"[<ident-token>|'*']? '|'\",\n        \"number-percentage\": \"<number>|<percentage>\",\n        \"numeric-figure-values\": \"[lining-nums|oldstyle-nums]\",\n        \"numeric-fraction-values\": \"[diagonal-fractions|stacked-fractions]\",\n        \"numeric-spacing-values\": \"[proportional-nums|tabular-nums]\",\n        \"nth\": \"<an-plus-b>|even|odd\",\n        \"opacity()\": \"opacity( [<number-percentage>] )\",\n        \"overflow-position\": \"unsafe|safe\",\n        \"outline-radius\": \"<length>|<percentage>\",\n        \"page-body\": \"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>\",\n        \"page-margin-box\": \"<page-margin-box-type> '{' <declaration-list> '}'\",\n        \"page-margin-box-type\": \"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom\",\n        \"page-selector-list\": \"[<page-selector>#]?\",\n        \"page-selector\": \"<pseudo-page>+|<ident> <pseudo-page>*\",\n        \"page-size\": \"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger\",\n        \"path()\": \"path( [<fill-rule> ,]? <string> )\",\n        \"paint()\": \"paint( <ident> , <declaration-value>? )\",\n        \"perspective()\": \"perspective( [<length [0,∞]>|none] )\",\n        \"polygon()\": \"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )\",\n        \"position\": \"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]\",\n        \"pow()\": \"pow( <calc-sum> , <calc-sum> )\",\n        \"pseudo-class-selector\": \"':' <ident-token>|':' <function-token> <any-value> ')'\",\n        \"pseudo-element-selector\": \"':' <pseudo-class-selector>\",\n        \"pseudo-page\": \": [left|right|first|blank]\",\n        \"quote\": \"open-quote|close-quote|no-open-quote|no-close-quote\",\n        \"radial-gradient()\": \"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"ratio\": \"<number [0,∞]> [/ <number [0,∞]>]?\",\n        \"relative-selector\": \"<combinator>? <complex-selector>\",\n        \"relative-selector-list\": \"<relative-selector>#\",\n        \"relative-size\": \"larger|smaller\",\n        \"rem()\": \"rem( <calc-sum> , <calc-sum> )\",\n        \"repeat-style\": \"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}\",\n        \"repeating-conic-gradient()\": \"repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"repeating-linear-gradient()\": \"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"repeating-radial-gradient()\": \"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"reversed-counter-name\": \"reversed( <counter-name> )\",\n        \"rgb()\": \"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )\",\n        \"rgba()\": \"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )\",\n        \"rotate()\": \"rotate( [<angle>|<zero>] )\",\n        \"rotate3d()\": \"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )\",\n        \"rotateX()\": \"rotateX( [<angle>|<zero>] )\",\n        \"rotateY()\": \"rotateY( [<angle>|<zero>] )\",\n        \"rotateZ()\": \"rotateZ( [<angle>|<zero>] )\",\n        \"round()\": \"round( <rounding-strategy>? , <calc-sum> , <calc-sum> )\",\n        \"rounding-strategy\": \"nearest|up|down|to-zero\",\n        \"saturate()\": \"saturate( <number-percentage> )\",\n        \"scale()\": \"scale( [<number>|<percentage>]#{1,2} )\",\n        \"scale3d()\": \"scale3d( [<number>|<percentage>]#{3} )\",\n        \"scaleX()\": \"scaleX( [<number>|<percentage>] )\",\n        \"scaleY()\": \"scaleY( [<number>|<percentage>] )\",\n        \"scaleZ()\": \"scaleZ( [<number>|<percentage>] )\",\n        \"scroller\": \"root|nearest\",\n        \"self-position\": \"center|start|end|self-start|self-end|flex-start|flex-end\",\n        \"shape-radius\": \"<length-percentage>|closest-side|farthest-side\",\n        \"sign()\": \"sign( <calc-sum> )\",\n        \"skew()\": \"skew( [<angle>|<zero>] , [<angle>|<zero>]? )\",\n        \"skewX()\": \"skewX( [<angle>|<zero>] )\",\n        \"skewY()\": \"skewY( [<angle>|<zero>] )\",\n        \"sepia()\": \"sepia( <number-percentage> )\",\n        \"shadow\": \"inset?&&<length>{2,4}&&<color>?\",\n        \"shadow-t\": \"[<length>{2,3}&&<color>?]\",\n        \"shape\": \"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )\",\n        \"shape-box\": \"<box>|margin-box\",\n        \"side-or-corner\": \"[left|right]||[top|bottom]\",\n        \"sin()\": \"sin( <calc-sum> )\",\n        \"single-animation\": \"<time>||<easing-function>||<time>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]\",\n        \"single-animation-direction\": \"normal|reverse|alternate|alternate-reverse\",\n        \"single-animation-fill-mode\": \"none|forwards|backwards|both\",\n        \"single-animation-iteration-count\": \"infinite|<number>\",\n        \"single-animation-play-state\": \"running|paused\",\n        \"single-animation-timeline\": \"auto|none|<timeline-name>|scroll( <axis>? <scroller>? )\",\n        \"single-transition\": \"[none|<single-transition-property>]||<time>||<easing-function>||<time>\",\n        \"single-transition-property\": \"all|<custom-ident>\",\n        \"size\": \"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}\",\n        \"sqrt()\": \"sqrt( <calc-sum> )\",\n        \"step-position\": \"jump-start|jump-end|jump-none|jump-both|start|end\",\n        \"step-timing-function\": \"step-start|step-end|steps( <integer> [, <step-position>]? )\",\n        \"subclass-selector\": \"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>\",\n        \"supports-condition\": \"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*\",\n        \"supports-in-parens\": \"( <supports-condition> )|<supports-feature>|<general-enclosed>\",\n        \"supports-feature\": \"<supports-decl>|<supports-selector-fn>\",\n        \"supports-decl\": \"( <declaration> )\",\n        \"supports-selector-fn\": \"selector( <complex-selector> )\",\n        \"symbol\": \"<string>|<image>|<custom-ident>\",\n        \"tan()\": \"tan( <calc-sum> )\",\n        \"target\": \"<target-counter()>|<target-counters()>|<target-text()>\",\n        \"target-counter()\": \"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )\",\n        \"target-counters()\": \"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )\",\n        \"target-text()\": \"target-text( [<string>|<url>] , [content|before|after|first-letter]? )\",\n        \"time-percentage\": \"<time>|<percentage>\",\n        \"timeline-name\": \"<custom-ident>|<string>\",\n        \"easing-function\": \"linear|<cubic-bezier-timing-function>|<step-timing-function>\",\n        \"track-breadth\": \"<length-percentage>|<flex>|min-content|max-content|auto\",\n        \"track-list\": \"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?\",\n        \"track-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <track-size>]+ <line-names>? )\",\n        \"track-size\": \"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )\",\n        \"transform-function\": \"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>\",\n        \"transform-list\": \"<transform-function>+\",\n        \"translate()\": \"translate( <length-percentage> , <length-percentage>? )\",\n        \"translate3d()\": \"translate3d( <length-percentage> , <length-percentage> , <length> )\",\n        \"translateX()\": \"translateX( <length-percentage> )\",\n        \"translateY()\": \"translateY( <length-percentage> )\",\n        \"translateZ()\": \"translateZ( <length> )\",\n        \"type-or-unit\": \"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%\",\n        \"type-selector\": \"<wq-name>|<ns-prefix>? '*'\",\n        \"var()\": \"var( <custom-property-name> , <declaration-value>? )\",\n        \"viewport-length\": \"auto|<length-percentage>\",\n        \"visual-box\": \"content-box|padding-box|border-box\",\n        \"wq-name\": \"<ns-prefix>? <ident-token>\",\n        \"-legacy-gradient\": \"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>\",\n        \"-legacy-linear-gradient\": \"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-repeating-linear-gradient\": \"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-linear-gradient-arguments\": \"[<angle>|<side-or-corner>]? , <color-stop-list>\",\n        \"-legacy-radial-gradient\": \"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-repeating-radial-gradient\": \"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-radial-gradient-arguments\": \"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>\",\n        \"-legacy-radial-gradient-size\": \"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover\",\n        \"-legacy-radial-gradient-shape\": \"circle|ellipse\",\n        \"-non-standard-font\": \"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body\",\n        \"-non-standard-color\": \"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text\",\n        \"-non-standard-image-rendering\": \"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast\",\n        \"-non-standard-overflow\": \"-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable\",\n        \"-non-standard-width\": \"fill-available|min-intrinsic|intrinsic|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content|-webkit-min-content|-webkit-max-content\",\n        \"-webkit-gradient()\": \"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )\",\n        \"-webkit-gradient-color-stop\": \"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )\",\n        \"-webkit-gradient-point\": \"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]\",\n        \"-webkit-gradient-radius\": \"<length>|<percentage>\",\n        \"-webkit-gradient-type\": \"linear|radial\",\n        \"-webkit-mask-box-repeat\": \"repeat|stretch|round\",\n        \"-webkit-mask-clip-style\": \"border|border-box|padding|padding-box|content|content-box|text\",\n        \"-ms-filter-function-list\": \"<-ms-filter-function>+\",\n        \"-ms-filter-function\": \"<-ms-filter-function-progid>|<-ms-filter-function-legacy>\",\n        \"-ms-filter-function-progid\": \"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]\",\n        \"-ms-filter-function-legacy\": \"<ident-token>|<function-token> <any-value>? )\",\n        \"-ms-filter\": \"<string>\",\n        \"age\": \"child|young|old\",\n        \"attr-name\": \"<wq-name>\",\n        \"attr-fallback\": \"<any-value>\",\n        \"bg-clip\": \"<box>|border|text\",\n        \"bottom\": \"<length>|auto\",\n        \"generic-voice\": \"[<age>? <gender> <integer>?]\",\n        \"gender\": \"male|female|neutral\",\n        \"left\": \"<length>|auto\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"paint\": \"none|<color>|<url> [none|<color>]?|context-fill|context-stroke\",\n        \"right\": \"<length>|auto\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"single-animation-composition\": \"replace|add|accumulate\",\n        \"svg-length\": \"<percentage>|<length>|<number>\",\n        \"svg-writing-mode\": \"lr-tb|rl-tb|tb-rl|lr|rl|tb\",\n        \"top\": \"<length>|auto\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\",\n        \"declaration\": \"<ident-token> : <declaration-value>? ['!' important]?\",\n        \"declaration-list\": \"[<declaration>? ';']* <declaration>?\",\n        \"url\": \"url( <string> <url-modifier>* )|<url-token>\",\n        \"url-modifier\": \"<ident>|<function-token> <any-value> )\",\n        \"number-zero-one\": \"<number [0,1]>\",\n        \"number-one-or-greater\": \"<number [1,∞]>\",\n        \"-non-standard-display\": \"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box\"\n    },\n    \"properties\": {\n        \"--*\": \"<declaration-value>\",\n        \"-ms-accelerator\": \"false|true\",\n        \"-ms-block-progression\": \"tb|rl|bt|lr\",\n        \"-ms-content-zoom-chaining\": \"none|chained\",\n        \"-ms-content-zooming\": \"none|zoom\",\n        \"-ms-content-zoom-limit\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n        \"-ms-content-zoom-limit-max\": \"<percentage>\",\n        \"-ms-content-zoom-limit-min\": \"<percentage>\",\n        \"-ms-content-zoom-snap\": \"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>\",\n        \"-ms-content-zoom-snap-points\": \"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )\",\n        \"-ms-content-zoom-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-filter\": \"<string>\",\n        \"-ms-flow-from\": \"[none|<custom-ident>]#\",\n        \"-ms-flow-into\": \"[none|<custom-ident>]#\",\n        \"-ms-grid-columns\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-grid-rows\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-high-contrast-adjust\": \"auto|none\",\n        \"-ms-hyphenate-limit-chars\": \"auto|<integer>{1,3}\",\n        \"-ms-hyphenate-limit-lines\": \"no-limit|<integer>\",\n        \"-ms-hyphenate-limit-zone\": \"<percentage>|<length>\",\n        \"-ms-ime-align\": \"auto|after\",\n        \"-ms-overflow-style\": \"auto|none|scrollbar|-ms-autohiding-scrollbar\",\n        \"-ms-scrollbar-3dlight-color\": \"<color>\",\n        \"-ms-scrollbar-arrow-color\": \"<color>\",\n        \"-ms-scrollbar-base-color\": \"<color>\",\n        \"-ms-scrollbar-darkshadow-color\": \"<color>\",\n        \"-ms-scrollbar-face-color\": \"<color>\",\n        \"-ms-scrollbar-highlight-color\": \"<color>\",\n        \"-ms-scrollbar-shadow-color\": \"<color>\",\n        \"-ms-scrollbar-track-color\": \"<color>\",\n        \"-ms-scroll-chaining\": \"chained|none\",\n        \"-ms-scroll-limit\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n        \"-ms-scroll-limit-x-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-x-min\": \"<length>\",\n        \"-ms-scroll-limit-y-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-y-min\": \"<length>\",\n        \"-ms-scroll-rails\": \"none|railed\",\n        \"-ms-scroll-snap-points-x\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-points-y\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-scroll-snap-x\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n        \"-ms-scroll-snap-y\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n        \"-ms-scroll-translation\": \"none|vertical-to-horizontal\",\n        \"-ms-text-autospace\": \"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\",\n        \"-ms-touch-select\": \"grippers|none\",\n        \"-ms-user-select\": \"none|element|text\",\n        \"-ms-wrap-flow\": \"auto|both|start|end|maximum|clear\",\n        \"-ms-wrap-margin\": \"<length>\",\n        \"-ms-wrap-through\": \"wrap|none\",\n        \"-moz-appearance\": \"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized\",\n        \"-moz-binding\": \"<url>|none\",\n        \"-moz-border-bottom-colors\": \"<color>+|none\",\n        \"-moz-border-left-colors\": \"<color>+|none\",\n        \"-moz-border-right-colors\": \"<color>+|none\",\n        \"-moz-border-top-colors\": \"<color>+|none\",\n        \"-moz-context-properties\": \"none|[fill|fill-opacity|stroke|stroke-opacity]#\",\n        \"-moz-float-edge\": \"border-box|content-box|margin-box|padding-box\",\n        \"-moz-force-broken-image-icon\": \"0|1\",\n        \"-moz-image-region\": \"<shape>|auto\",\n        \"-moz-orient\": \"inline|block|horizontal|vertical\",\n        \"-moz-outline-radius\": \"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?\",\n        \"-moz-outline-radius-bottomleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-bottomright\": \"<outline-radius>\",\n        \"-moz-outline-radius-topleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-topright\": \"<outline-radius>\",\n        \"-moz-stack-sizing\": \"ignore|stretch-to-fit\",\n        \"-moz-text-blink\": \"none|blink\",\n        \"-moz-user-focus\": \"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none\",\n        \"-moz-user-input\": \"auto|none|enabled|disabled\",\n        \"-moz-user-modify\": \"read-only|read-write|write-only\",\n        \"-moz-window-dragging\": \"drag|no-drag\",\n        \"-moz-window-shadow\": \"default|menu|tooltip|sheet|none\",\n        \"-webkit-appearance\": \"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button\",\n        \"-webkit-border-before\": \"<'border-width'>||<'border-style'>||<color>\",\n        \"-webkit-border-before-color\": \"<color>\",\n        \"-webkit-border-before-style\": \"<'border-style'>\",\n        \"-webkit-border-before-width\": \"<'border-width'>\",\n        \"-webkit-box-reflect\": \"[above|below|right|left]? <length>? <image>?\",\n        \"-webkit-line-clamp\": \"none|<integer>\",\n        \"-webkit-mask\": \"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#\",\n        \"-webkit-mask-attachment\": \"<attachment>#\",\n        \"-webkit-mask-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-mask-composite\": \"<composite-style>#\",\n        \"-webkit-mask-image\": \"<mask-reference>#\",\n        \"-webkit-mask-origin\": \"[<box>|border|padding|content]#\",\n        \"-webkit-mask-position\": \"<position>#\",\n        \"-webkit-mask-position-x\": \"[<length-percentage>|left|center|right]#\",\n        \"-webkit-mask-position-y\": \"[<length-percentage>|top|center|bottom]#\",\n        \"-webkit-mask-repeat\": \"<repeat-style>#\",\n        \"-webkit-mask-repeat-x\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-repeat-y\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-size\": \"<bg-size>#\",\n        \"-webkit-overflow-scrolling\": \"auto|touch\",\n        \"-webkit-tap-highlight-color\": \"<color>\",\n        \"-webkit-text-fill-color\": \"<color>\",\n        \"-webkit-text-stroke\": \"<length>||<color>\",\n        \"-webkit-text-stroke-color\": \"<color>\",\n        \"-webkit-text-stroke-width\": \"<length>\",\n        \"-webkit-touch-callout\": \"default|none\",\n        \"-webkit-user-modify\": \"read-only|read-write|read-write-plaintext-only\",\n        \"accent-color\": \"auto|<color>\",\n        \"align-content\": \"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>\",\n        \"align-items\": \"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]\",\n        \"align-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>\",\n        \"align-tracks\": \"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#\",\n        \"all\": \"initial|inherit|unset|revert|revert-layer\",\n        \"animation\": \"<single-animation>#\",\n        \"animation-composition\": \"<single-animation-composition>#\",\n        \"animation-delay\": \"<time>#\",\n        \"animation-direction\": \"<single-animation-direction>#\",\n        \"animation-duration\": \"<time>#\",\n        \"animation-fill-mode\": \"<single-animation-fill-mode>#\",\n        \"animation-iteration-count\": \"<single-animation-iteration-count>#\",\n        \"animation-name\": \"[none|<keyframes-name>]#\",\n        \"animation-play-state\": \"<single-animation-play-state>#\",\n        \"animation-timing-function\": \"<easing-function>#\",\n        \"animation-timeline\": \"<single-animation-timeline>#\",\n        \"appearance\": \"none|auto|textfield|menulist-button|<compat-auto>\",\n        \"aspect-ratio\": \"auto|<ratio>\",\n        \"azimuth\": \"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards\",\n        \"backdrop-filter\": \"none|<filter-function-list>\",\n        \"backface-visibility\": \"visible|hidden\",\n        \"background\": \"[<bg-layer> ,]* <final-bg-layer>\",\n        \"background-attachment\": \"<attachment>#\",\n        \"background-blend-mode\": \"<blend-mode>#\",\n        \"background-clip\": \"<bg-clip>#\",\n        \"background-color\": \"<color>\",\n        \"background-image\": \"<bg-image>#\",\n        \"background-origin\": \"<box>#\",\n        \"background-position\": \"<bg-position>#\",\n        \"background-position-x\": \"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#\",\n        \"background-position-y\": \"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#\",\n        \"background-repeat\": \"<repeat-style>#\",\n        \"background-size\": \"<bg-size>#\",\n        \"block-overflow\": \"clip|ellipsis|<string>\",\n        \"block-size\": \"<'width'>\",\n        \"border\": \"<line-width>||<line-style>||<color>\",\n        \"border-block\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-color\": \"<'border-top-color'>{1,2}\",\n        \"border-block-style\": \"<'border-top-style'>\",\n        \"border-block-width\": \"<'border-top-width'>\",\n        \"border-block-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-end-color\": \"<'border-top-color'>\",\n        \"border-block-end-style\": \"<'border-top-style'>\",\n        \"border-block-end-width\": \"<'border-top-width'>\",\n        \"border-block-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-start-color\": \"<'border-top-color'>\",\n        \"border-block-start-style\": \"<'border-top-style'>\",\n        \"border-block-start-width\": \"<'border-top-width'>\",\n        \"border-bottom\": \"<line-width>||<line-style>||<color>\",\n        \"border-bottom-color\": \"<'border-top-color'>\",\n        \"border-bottom-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-style\": \"<line-style>\",\n        \"border-bottom-width\": \"<line-width>\",\n        \"border-collapse\": \"collapse|separate\",\n        \"border-color\": \"<color>{1,4}\",\n        \"border-end-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-end-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-image\": \"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>\",\n        \"border-image-outset\": \"[<length>|<number>]{1,4}\",\n        \"border-image-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"border-image-slice\": \"<number-percentage>{1,4}&&fill?\",\n        \"border-image-source\": \"none|<image>\",\n        \"border-image-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"border-inline\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-color\": \"<'border-top-color'>{1,2}\",\n        \"border-inline-style\": \"<'border-top-style'>\",\n        \"border-inline-width\": \"<'border-top-width'>\",\n        \"border-inline-end-color\": \"<'border-top-color'>\",\n        \"border-inline-end-style\": \"<'border-top-style'>\",\n        \"border-inline-end-width\": \"<'border-top-width'>\",\n        \"border-inline-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-start-color\": \"<'border-top-color'>\",\n        \"border-inline-start-style\": \"<'border-top-style'>\",\n        \"border-inline-start-width\": \"<'border-top-width'>\",\n        \"border-left\": \"<line-width>||<line-style>||<color>\",\n        \"border-left-color\": \"<color>\",\n        \"border-left-style\": \"<line-style>\",\n        \"border-left-width\": \"<line-width>\",\n        \"border-radius\": \"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?\",\n        \"border-right\": \"<line-width>||<line-style>||<color>\",\n        \"border-right-color\": \"<color>\",\n        \"border-right-style\": \"<line-style>\",\n        \"border-right-width\": \"<line-width>\",\n        \"border-spacing\": \"<length> <length>?\",\n        \"border-start-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-start-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-style\": \"<line-style>{1,4}\",\n        \"border-top\": \"<line-width>||<line-style>||<color>\",\n        \"border-top-color\": \"<color>\",\n        \"border-top-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-style\": \"<line-style>\",\n        \"border-top-width\": \"<line-width>\",\n        \"border-width\": \"<line-width>{1,4}\",\n        \"bottom\": \"<length>|<percentage>|auto\",\n        \"box-align\": \"start|center|end|baseline|stretch\",\n        \"box-decoration-break\": \"slice|clone\",\n        \"box-direction\": \"normal|reverse|inherit\",\n        \"box-flex\": \"<number>\",\n        \"box-flex-group\": \"<integer>\",\n        \"box-lines\": \"single|multiple\",\n        \"box-ordinal-group\": \"<integer>\",\n        \"box-orient\": \"horizontal|vertical|inline-axis|block-axis|inherit\",\n        \"box-pack\": \"start|center|end|justify\",\n        \"box-shadow\": \"none|<shadow>#\",\n        \"box-sizing\": \"content-box|border-box\",\n        \"break-after\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-before\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-inside\": \"auto|avoid|avoid-page|avoid-column|avoid-region\",\n        \"caption-side\": \"top|bottom|block-start|block-end|inline-start|inline-end\",\n        \"caret\": \"<'caret-color'>||<'caret-shape'>\",\n        \"caret-color\": \"auto|<color>\",\n        \"caret-shape\": \"auto|bar|block|underscore\",\n        \"clear\": \"none|left|right|both|inline-start|inline-end\",\n        \"clip\": \"<shape>|auto\",\n        \"clip-path\": \"<clip-source>|[<basic-shape>||<geometry-box>]|none\",\n        \"color\": \"<color>\",\n        \"print-color-adjust\": \"economy|exact\",\n        \"color-scheme\": \"normal|[light|dark|<custom-ident>]+&&only?\",\n        \"column-count\": \"<integer>|auto\",\n        \"column-fill\": \"auto|balance|balance-all\",\n        \"column-gap\": \"normal|<length-percentage>\",\n        \"column-rule\": \"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>\",\n        \"column-rule-color\": \"<color>\",\n        \"column-rule-style\": \"<'border-style'>\",\n        \"column-rule-width\": \"<'border-width'>\",\n        \"column-span\": \"none|all\",\n        \"column-width\": \"<length>|auto\",\n        \"columns\": \"<'column-width'>||<'column-count'>\",\n        \"contain\": \"none|strict|content|[[size||inline-size]||layout||style||paint]\",\n        \"contain-intrinsic-size\": \"[none|<length>|auto <length>]{1,2}\",\n        \"contain-intrinsic-block-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-height\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-inline-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-width\": \"none|<length>|auto <length>\",\n        \"content\": \"normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?\",\n        \"content-visibility\": \"visible|auto|hidden\",\n        \"counter-increment\": \"[<counter-name> <integer>?]+|none\",\n        \"counter-reset\": \"[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none\",\n        \"counter-set\": \"[<counter-name> <integer>?]+|none\",\n        \"cursor\": \"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]\",\n        \"direction\": \"ltr|rtl\",\n        \"display\": \"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>\",\n        \"empty-cells\": \"show|hide\",\n        \"filter\": \"none|<filter-function-list>|<-ms-filter-function-list>\",\n        \"flex\": \"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]\",\n        \"flex-basis\": \"content|<'width'>\",\n        \"flex-direction\": \"row|row-reverse|column|column-reverse\",\n        \"flex-flow\": \"<'flex-direction'>||<'flex-wrap'>\",\n        \"flex-grow\": \"<number>\",\n        \"flex-shrink\": \"<number>\",\n        \"flex-wrap\": \"nowrap|wrap|wrap-reverse\",\n        \"float\": \"left|right|none|inline-start|inline-end\",\n        \"font\": \"[[<'font-style'>||<font-variant-css21>||<'font-weight'>||<'font-stretch'>]? <'font-size'> [/ <'line-height'>]? <'font-family'>]|caption|icon|menu|message-box|small-caption|status-bar\",\n        \"font-family\": \"[<family-name>|<generic-family>]#\",\n        \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n        \"font-kerning\": \"auto|normal|none\",\n        \"font-language-override\": \"normal|<string>\",\n        \"font-optical-sizing\": \"auto|none\",\n        \"font-variation-settings\": \"normal|[<string> <number>]#\",\n        \"font-size\": \"<absolute-size>|<relative-size>|<length-percentage>\",\n        \"font-size-adjust\": \"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]\",\n        \"font-smooth\": \"auto|never|always|<absolute-size>|<length>\",\n        \"font-stretch\": \"<font-stretch-absolute>\",\n        \"font-style\": \"normal|italic|oblique <angle>?\",\n        \"font-synthesis\": \"none|[weight||style||small-caps]\",\n        \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-alternates\": \"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]\",\n        \"font-variant-caps\": \"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps\",\n        \"font-variant-east-asian\": \"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-ligatures\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]\",\n        \"font-variant-numeric\": \"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]\",\n        \"font-variant-position\": \"normal|sub|super\",\n        \"font-weight\": \"<font-weight-absolute>|bolder|lighter\",\n        \"forced-color-adjust\": \"auto|none\",\n        \"gap\": \"<'row-gap'> <'column-gap'>?\",\n        \"grid\": \"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n        \"grid-area\": \"<grid-line> [/ <grid-line>]{0,3}\",\n        \"grid-auto-columns\": \"<track-size>+\",\n        \"grid-auto-flow\": \"[row|column]||dense\",\n        \"grid-auto-rows\": \"<track-size>+\",\n        \"grid-column\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-column-end\": \"<grid-line>\",\n        \"grid-column-gap\": \"<length-percentage>\",\n        \"grid-column-start\": \"<grid-line>\",\n        \"grid-gap\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n        \"grid-row\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-row-end\": \"<grid-line>\",\n        \"grid-row-gap\": \"<length-percentage>\",\n        \"grid-row-start\": \"<grid-line>\",\n        \"grid-template\": \"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?\",\n        \"grid-template-areas\": \"none|<string>+\",\n        \"grid-template-columns\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"grid-template-rows\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"hanging-punctuation\": \"none|[first||[force-end|allow-end]||last]\",\n        \"height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"hyphenate-character\": \"auto|<string>\",\n        \"hyphens\": \"none|manual|auto\",\n        \"image-orientation\": \"from-image|<angle>|[<angle>? flip]\",\n        \"image-rendering\": \"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>\",\n        \"image-resolution\": \"[from-image||<resolution>]&&snap?\",\n        \"ime-mode\": \"auto|normal|active|inactive|disabled\",\n        \"initial-letter\": \"normal|[<number> <integer>?]\",\n        \"initial-letter-align\": \"[auto|alphabetic|hanging|ideographic]\",\n        \"inline-size\": \"<'width'>\",\n        \"input-security\": \"auto|none\",\n        \"inset\": \"<'top'>{1,4}\",\n        \"inset-block\": \"<'top'>{1,2}\",\n        \"inset-block-end\": \"<'top'>\",\n        \"inset-block-start\": \"<'top'>\",\n        \"inset-inline\": \"<'top'>{1,2}\",\n        \"inset-inline-end\": \"<'top'>\",\n        \"inset-inline-start\": \"<'top'>\",\n        \"isolation\": \"auto|isolate\",\n        \"justify-content\": \"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]\",\n        \"justify-items\": \"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]\",\n        \"justify-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]\",\n        \"justify-tracks\": \"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#\",\n        \"left\": \"<length>|<percentage>|auto\",\n        \"letter-spacing\": \"normal|<length-percentage>\",\n        \"line-break\": \"auto|loose|normal|strict|anywhere\",\n        \"line-clamp\": \"none|<integer>\",\n        \"line-height\": \"normal|<number>|<length>|<percentage>\",\n        \"line-height-step\": \"<length>\",\n        \"list-style\": \"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>\",\n        \"list-style-image\": \"<image>|none\",\n        \"list-style-position\": \"inside|outside\",\n        \"list-style-type\": \"<counter-style>|<string>|none\",\n        \"margin\": \"[<length>|<percentage>|auto]{1,4}\",\n        \"margin-block\": \"<'margin-left'>{1,2}\",\n        \"margin-block-end\": \"<'margin-left'>\",\n        \"margin-block-start\": \"<'margin-left'>\",\n        \"margin-bottom\": \"<length>|<percentage>|auto\",\n        \"margin-inline\": \"<'margin-left'>{1,2}\",\n        \"margin-inline-end\": \"<'margin-left'>\",\n        \"margin-inline-start\": \"<'margin-left'>\",\n        \"margin-left\": \"<length>|<percentage>|auto\",\n        \"margin-right\": \"<length>|<percentage>|auto\",\n        \"margin-top\": \"<length>|<percentage>|auto\",\n        \"margin-trim\": \"none|in-flow|all\",\n        \"mask\": \"<mask-layer>#\",\n        \"mask-border\": \"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>\",\n        \"mask-border-mode\": \"luminance|alpha\",\n        \"mask-border-outset\": \"[<length>|<number>]{1,4}\",\n        \"mask-border-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"mask-border-slice\": \"<number-percentage>{1,4} fill?\",\n        \"mask-border-source\": \"none|<image>\",\n        \"mask-border-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"mask-clip\": \"[<geometry-box>|no-clip]#\",\n        \"mask-composite\": \"<compositing-operator>#\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"mask-mode\": \"<masking-mode>#\",\n        \"mask-origin\": \"<geometry-box>#\",\n        \"mask-position\": \"<position>#\",\n        \"mask-repeat\": \"<repeat-style>#\",\n        \"mask-size\": \"<bg-size>#\",\n        \"mask-type\": \"luminance|alpha\",\n        \"masonry-auto-flow\": \"[pack|next]||[definite-first|ordered]\",\n        \"math-depth\": \"auto-add|add( <integer> )|<integer>\",\n        \"math-shift\": \"normal|compact\",\n        \"math-style\": \"normal|compact\",\n        \"max-block-size\": \"<'max-width'>\",\n        \"max-height\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"max-inline-size\": \"<'max-width'>\",\n        \"max-lines\": \"none|<integer>\",\n        \"max-width\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"min-block-size\": \"<'min-width'>\",\n        \"min-height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"min-inline-size\": \"<'min-width'>\",\n        \"min-width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"mix-blend-mode\": \"<blend-mode>|plus-lighter\",\n        \"object-fit\": \"fill|contain|cover|none|scale-down\",\n        \"object-position\": \"<position>\",\n        \"offset\": \"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?\",\n        \"offset-anchor\": \"auto|<position>\",\n        \"offset-distance\": \"<length-percentage>\",\n        \"offset-path\": \"none|ray( [<angle>&&<size>&&contain?] )|<path()>|<url>|[<basic-shape>||<geometry-box>]\",\n        \"offset-position\": \"auto|<position>\",\n        \"offset-rotate\": \"[auto|reverse]||<angle>\",\n        \"opacity\": \"<alpha-value>\",\n        \"order\": \"<integer>\",\n        \"orphans\": \"<integer>\",\n        \"outline\": \"[<'outline-color'>||<'outline-style'>||<'outline-width'>]\",\n        \"outline-color\": \"<color>|invert\",\n        \"outline-offset\": \"<length>\",\n        \"outline-style\": \"auto|<'border-style'>\",\n        \"outline-width\": \"<line-width>\",\n        \"overflow\": \"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>\",\n        \"overflow-anchor\": \"auto|none\",\n        \"overflow-block\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-clip-box\": \"padding-box|content-box\",\n        \"overflow-clip-margin\": \"<visual-box>||<length [0,∞]>\",\n        \"overflow-inline\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-wrap\": \"normal|break-word|anywhere\",\n        \"overflow-x\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-y\": \"visible|hidden|clip|scroll|auto\",\n        \"overscroll-behavior\": \"[contain|none|auto]{1,2}\",\n        \"overscroll-behavior-block\": \"contain|none|auto\",\n        \"overscroll-behavior-inline\": \"contain|none|auto\",\n        \"overscroll-behavior-x\": \"contain|none|auto\",\n        \"overscroll-behavior-y\": \"contain|none|auto\",\n        \"padding\": \"[<length>|<percentage>]{1,4}\",\n        \"padding-block\": \"<'padding-left'>{1,2}\",\n        \"padding-block-end\": \"<'padding-left'>\",\n        \"padding-block-start\": \"<'padding-left'>\",\n        \"padding-bottom\": \"<length>|<percentage>\",\n        \"padding-inline\": \"<'padding-left'>{1,2}\",\n        \"padding-inline-end\": \"<'padding-left'>\",\n        \"padding-inline-start\": \"<'padding-left'>\",\n        \"padding-left\": \"<length>|<percentage>\",\n        \"padding-right\": \"<length>|<percentage>\",\n        \"padding-top\": \"<length>|<percentage>\",\n        \"page-break-after\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-before\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-inside\": \"auto|avoid\",\n        \"paint-order\": \"normal|[fill||stroke||markers]\",\n        \"perspective\": \"none|<length>\",\n        \"perspective-origin\": \"<position>\",\n        \"place-content\": \"<'align-content'> <'justify-content'>?\",\n        \"place-items\": \"<'align-items'> <'justify-items'>?\",\n        \"place-self\": \"<'align-self'> <'justify-self'>?\",\n        \"pointer-events\": \"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit\",\n        \"position\": \"static|relative|absolute|sticky|fixed|-webkit-sticky\",\n        \"quotes\": \"none|auto|[<string> <string>]+\",\n        \"resize\": \"none|both|horizontal|vertical|block|inline\",\n        \"right\": \"<length>|<percentage>|auto\",\n        \"rotate\": \"none|<angle>|[x|y|z|<number>{3}]&&<angle>\",\n        \"row-gap\": \"normal|<length-percentage>\",\n        \"ruby-align\": \"start|center|space-between|space-around\",\n        \"ruby-merge\": \"separate|collapse|auto\",\n        \"ruby-position\": \"[alternate||[over|under]]|inter-character\",\n        \"scale\": \"none|<number>{1,3}\",\n        \"scrollbar-color\": \"auto|<color>{2}\",\n        \"scrollbar-gutter\": \"auto|stable&&both-edges?\",\n        \"scrollbar-width\": \"auto|thin|none\",\n        \"scroll-behavior\": \"auto|smooth\",\n        \"scroll-margin\": \"<length>{1,4}\",\n        \"scroll-margin-block\": \"<length>{1,2}\",\n        \"scroll-margin-block-start\": \"<length>\",\n        \"scroll-margin-block-end\": \"<length>\",\n        \"scroll-margin-bottom\": \"<length>\",\n        \"scroll-margin-inline\": \"<length>{1,2}\",\n        \"scroll-margin-inline-start\": \"<length>\",\n        \"scroll-margin-inline-end\": \"<length>\",\n        \"scroll-margin-left\": \"<length>\",\n        \"scroll-margin-right\": \"<length>\",\n        \"scroll-margin-top\": \"<length>\",\n        \"scroll-padding\": \"[auto|<length-percentage>]{1,4}\",\n        \"scroll-padding-block\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-block-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-block-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-bottom\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-inline-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-left\": \"auto|<length-percentage>\",\n        \"scroll-padding-right\": \"auto|<length-percentage>\",\n        \"scroll-padding-top\": \"auto|<length-percentage>\",\n        \"scroll-snap-align\": \"[none|start|end|center]{1,2}\",\n        \"scroll-snap-coordinate\": \"none|<position>#\",\n        \"scroll-snap-destination\": \"<position>\",\n        \"scroll-snap-points-x\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-points-y\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-stop\": \"normal|always\",\n        \"scroll-snap-type\": \"none|[x|y|block|inline|both] [mandatory|proximity]?\",\n        \"scroll-snap-type-x\": \"none|mandatory|proximity\",\n        \"scroll-snap-type-y\": \"none|mandatory|proximity\",\n        \"scroll-timeline\": \"<scroll-timeline-name>||<scroll-timeline-axis>\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"shape-image-threshold\": \"<alpha-value>\",\n        \"shape-margin\": \"<length-percentage>\",\n        \"shape-outside\": \"none|[<shape-box>||<basic-shape>]|<image>\",\n        \"tab-size\": \"<integer>|<length>\",\n        \"table-layout\": \"auto|fixed\",\n        \"text-align\": \"start|end|left|right|center|justify|match-parent\",\n        \"text-align-last\": \"auto|start|end|left|right|center|justify\",\n        \"text-combine-upright\": \"none|all|[digits <integer>?]\",\n        \"text-decoration\": \"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>\",\n        \"text-decoration-color\": \"<color>\",\n        \"text-decoration-line\": \"none|[underline||overline||line-through||blink]|spelling-error|grammar-error\",\n        \"text-decoration-skip\": \"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]\",\n        \"text-decoration-skip-ink\": \"auto|all|none\",\n        \"text-decoration-style\": \"solid|double|dotted|dashed|wavy\",\n        \"text-decoration-thickness\": \"auto|from-font|<length>|<percentage>\",\n        \"text-emphasis\": \"<'text-emphasis-style'>||<'text-emphasis-color'>\",\n        \"text-emphasis-color\": \"<color>\",\n        \"text-emphasis-position\": \"[over|under]&&[right|left]\",\n        \"text-emphasis-style\": \"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>\",\n        \"text-indent\": \"<length-percentage>&&hanging?&&each-line?\",\n        \"text-justify\": \"auto|inter-character|inter-word|none\",\n        \"text-orientation\": \"mixed|upright|sideways\",\n        \"text-overflow\": \"[clip|ellipsis|<string>]{1,2}\",\n        \"text-rendering\": \"auto|optimizeSpeed|optimizeLegibility|geometricPrecision\",\n        \"text-shadow\": \"none|<shadow-t>#\",\n        \"text-size-adjust\": \"none|auto|<percentage>\",\n        \"text-transform\": \"none|capitalize|uppercase|lowercase|full-width|full-size-kana\",\n        \"text-underline-offset\": \"auto|<length>|<percentage>\",\n        \"text-underline-position\": \"auto|from-font|[under||[left|right]]\",\n        \"top\": \"<length>|<percentage>|auto\",\n        \"touch-action\": \"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation\",\n        \"transform\": \"none|<transform-list>\",\n        \"transform-box\": \"content-box|border-box|fill-box|stroke-box|view-box\",\n        \"transform-origin\": \"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?\",\n        \"transform-style\": \"flat|preserve-3d\",\n        \"transition\": \"<single-transition>#\",\n        \"transition-delay\": \"<time>#\",\n        \"transition-duration\": \"<time>#\",\n        \"transition-property\": \"none|<single-transition-property>#\",\n        \"transition-timing-function\": \"<easing-function>#\",\n        \"translate\": \"none|<length-percentage> [<length-percentage> <length>?]?\",\n        \"unicode-bidi\": \"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext\",\n        \"user-select\": \"auto|text|none|contain|all\",\n        \"vertical-align\": \"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>\",\n        \"visibility\": \"visible|hidden|collapse\",\n        \"white-space\": \"normal|pre|nowrap|pre-wrap|pre-line|break-spaces\",\n        \"widows\": \"<integer>\",\n        \"width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|fill|stretch|intrinsic|-moz-max-content|-webkit-max-content|-moz-fit-content|-webkit-fit-content\",\n        \"will-change\": \"auto|<animateable-feature>#\",\n        \"word-break\": \"normal|break-all|keep-all|break-word\",\n        \"word-spacing\": \"normal|<length>\",\n        \"word-wrap\": \"normal|break-word\",\n        \"writing-mode\": \"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>\",\n        \"z-index\": \"auto|<integer>\",\n        \"zoom\": \"normal|reset|<number>|<percentage>\",\n        \"-moz-background-clip\": \"padding|border\",\n        \"-moz-border-radius-bottomleft\": \"<'border-bottom-left-radius'>\",\n        \"-moz-border-radius-bottomright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-border-radius-topleft\": \"<'border-top-left-radius'>\",\n        \"-moz-border-radius-topright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-control-character-visibility\": \"visible|hidden\",\n        \"-moz-osx-font-smoothing\": \"auto|grayscale\",\n        \"-moz-user-select\": \"none|text|all|-moz-none\",\n        \"-ms-flex-align\": \"start|end|center|baseline|stretch\",\n        \"-ms-flex-item-align\": \"auto|start|end|center|baseline|stretch\",\n        \"-ms-flex-line-pack\": \"start|end|center|justify|distribute|stretch\",\n        \"-ms-flex-negative\": \"<'flex-shrink'>\",\n        \"-ms-flex-pack\": \"start|end|center|justify|distribute\",\n        \"-ms-flex-order\": \"<integer>\",\n        \"-ms-flex-positive\": \"<'flex-grow'>\",\n        \"-ms-flex-preferred-size\": \"<'flex-basis'>\",\n        \"-ms-interpolation-mode\": \"nearest-neighbor|bicubic\",\n        \"-ms-grid-column-align\": \"start|end|center|stretch\",\n        \"-ms-grid-row-align\": \"start|end|center|stretch\",\n        \"-ms-hyphenate-limit-last\": \"none|always|column|page|spread\",\n        \"-webkit-background-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-column-break-after\": \"always|auto|avoid\",\n        \"-webkit-column-break-before\": \"always|auto|avoid\",\n        \"-webkit-column-break-inside\": \"always|auto|avoid\",\n        \"-webkit-font-smoothing\": \"auto|none|antialiased|subpixel-antialiased\",\n        \"-webkit-mask-box-image\": \"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?\",\n        \"-webkit-print-color-adjust\": \"economy|exact\",\n        \"-webkit-text-security\": \"none|circle|disc|square\",\n        \"-webkit-user-drag\": \"none|element|auto\",\n        \"-webkit-user-select\": \"auto|none|text|all\",\n        \"alignment-baseline\": \"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical\",\n        \"baseline-shift\": \"baseline|sub|super|<svg-length>\",\n        \"behavior\": \"<url>+\",\n        \"clip-rule\": \"nonzero|evenodd\",\n        \"cue\": \"<'cue-before'> <'cue-after'>?\",\n        \"cue-after\": \"<url> <decibel>?|none\",\n        \"cue-before\": \"<url> <decibel>?|none\",\n        \"dominant-baseline\": \"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\",\n        \"fill\": \"<paint>\",\n        \"fill-opacity\": \"<number-zero-one>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"glyph-orientation-horizontal\": \"<angle>\",\n        \"glyph-orientation-vertical\": \"<angle>\",\n        \"kerning\": \"auto|<svg-length>\",\n        \"marker\": \"none|<url>\",\n        \"marker-end\": \"none|<url>\",\n        \"marker-mid\": \"none|<url>\",\n        \"marker-start\": \"none|<url>\",\n        \"pause\": \"<'pause-before'> <'pause-after'>?\",\n        \"pause-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"pause-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest\": \"<'rest-before'> <'rest-after'>?\",\n        \"rest-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"shape-rendering\": \"auto|optimizeSpeed|crispEdges|geometricPrecision\",\n        \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n        \"speak\": \"auto|none|normal\",\n        \"speak-as\": \"normal|spell-out||digits||[literal-punctuation|no-punctuation]\",\n        \"stroke\": \"<paint>\",\n        \"stroke-dasharray\": \"none|[<svg-length>+]#\",\n        \"stroke-dashoffset\": \"<svg-length>\",\n        \"stroke-linecap\": \"butt|round|square\",\n        \"stroke-linejoin\": \"miter|round|bevel\",\n        \"stroke-miterlimit\": \"<number-one-or-greater>\",\n        \"stroke-opacity\": \"<number-zero-one>\",\n        \"stroke-width\": \"<svg-length>\",\n        \"text-anchor\": \"start|middle|end\",\n        \"unicode-range\": \"<urange>#\",\n        \"voice-balance\": \"<number>|left|center|right|leftwards|rightwards\",\n        \"voice-duration\": \"auto|<time>\",\n        \"voice-family\": \"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve\",\n        \"voice-pitch\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-range\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-rate\": \"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>\",\n        \"voice-stress\": \"normal|strong|moderate|none|reduced\",\n        \"voice-volume\": \"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]\"\n    },\n    \"atrules\": {\n        \"charset\": {\n            \"prelude\": \"<string>\",\n            \"descriptors\": null\n        },\n        \"counter-style\": {\n            \"prelude\": \"<counter-style-name>\",\n            \"descriptors\": {\n                \"additive-symbols\": \"[<integer>&&<symbol>]#\",\n                \"fallback\": \"<counter-style-name>\",\n                \"negative\": \"<symbol> <symbol>?\",\n                \"pad\": \"<integer>&&<symbol>\",\n                \"prefix\": \"<symbol>\",\n                \"range\": \"[[<integer>|infinite]{2}]#|auto\",\n                \"speak-as\": \"auto|bullets|numbers|words|spell-out|<counter-style-name>\",\n                \"suffix\": \"<symbol>\",\n                \"symbols\": \"<symbol>+\",\n                \"system\": \"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]\"\n            }\n        },\n        \"document\": {\n            \"prelude\": \"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#\",\n            \"descriptors\": null\n        },\n        \"font-face\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"ascent-override\": \"normal|<percentage>\",\n                \"descent-override\": \"normal|<percentage>\",\n                \"font-display\": \"[auto|block|swap|fallback|optional]\",\n                \"font-family\": \"<family-name>\",\n                \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n                \"font-variation-settings\": \"normal|[<string> <number>]#\",\n                \"font-stretch\": \"<font-stretch-absolute>{1,2}\",\n                \"font-style\": \"normal|italic|oblique <angle>{0,2}\",\n                \"font-weight\": \"<font-weight-absolute>{1,2}\",\n                \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n                \"line-gap-override\": \"normal|<percentage>\",\n                \"size-adjust\": \"<percentage>\",\n                \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n                \"unicode-range\": \"<urange>#\"\n            }\n        },\n        \"font-feature-values\": {\n            \"prelude\": \"<family-name>#\",\n            \"descriptors\": null\n        },\n        \"import\": {\n            \"prelude\": \"[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?\",\n            \"descriptors\": null\n        },\n        \"keyframes\": {\n            \"prelude\": \"<keyframes-name>\",\n            \"descriptors\": null\n        },\n        \"layer\": {\n            \"prelude\": \"[<layer-name>#|<layer-name>?]\",\n            \"descriptors\": null\n        },\n        \"media\": {\n            \"prelude\": \"<media-query-list>\",\n            \"descriptors\": null\n        },\n        \"namespace\": {\n            \"prelude\": \"<namespace-prefix>? [<string>|<url>]\",\n            \"descriptors\": null\n        },\n        \"page\": {\n            \"prelude\": \"<page-selector-list>\",\n            \"descriptors\": {\n                \"bleed\": \"auto|<length>\",\n                \"marks\": \"none|[crop||cross]\",\n                \"size\": \"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]\"\n            }\n        },\n        \"property\": {\n            \"prelude\": \"<custom-property-name>\",\n            \"descriptors\": {\n                \"syntax\": \"<string>\",\n                \"inherits\": \"true|false\",\n                \"initial-value\": \"<string>\"\n            }\n        },\n        \"scroll-timeline\": {\n            \"prelude\": \"<timeline-name>\",\n            \"descriptors\": null\n        },\n        \"supports\": {\n            \"prelude\": \"<supports-condition>\",\n            \"descriptors\": null\n        },\n        \"viewport\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"height\": \"<viewport-length>{1,2}\",\n                \"max-height\": \"<viewport-length>\",\n                \"max-width\": \"<viewport-length>\",\n                \"max-zoom\": \"auto|<number>|<percentage>\",\n                \"min-height\": \"<viewport-length>\",\n                \"min-width\": \"<viewport-length>\",\n                \"min-zoom\": \"auto|<number>|<percentage>\",\n                \"orientation\": \"auto|portrait|landscape\",\n                \"user-zoom\": \"zoom|fixed\",\n                \"viewport-fit\": \"auto|contain|cover\",\n                \"width\": \"<viewport-length>{1,2}\",\n                \"zoom\": \"auto|<number>|<percentage>\"\n            }\n        },\n        \"nest\": {\n            \"prelude\": \"<complex-selector-list>\",\n            \"descriptors\": null\n        }\n    }\n};", "export * as AnPlusB from './AnPlusB.js';\nexport * as Atrule from './Atrule.js';\nexport * as AtrulePrelude from './AtrulePrelude.js';\nexport * as AttributeSelector from './AttributeSelector.js';\nexport * as Block from './Block.js';\nexport * as Brackets from './Brackets.js';\nexport * as CDC from './CDC.js';\nexport * as CDO from './CDO.js';\nexport * as ClassSelector from './ClassSelector.js';\nexport * as Combinator from './Combinator.js';\nexport * as Comment from './Comment.js';\nexport * as Declaration from './Declaration.js';\nexport * as DeclarationList from './DeclarationList.js';\nexport * as Dimension from './Dimension.js';\nexport * as Function from './Function.js';\nexport * as Hash from './Hash.js';\nexport * as Identifier from './Identifier.js';\nexport * as IdSelector from './IdSelector.js';\nexport * as MediaFeature from './MediaFeature.js';\nexport * as MediaQuery from './MediaQuery.js';\nexport * as MediaQueryList from './MediaQueryList.js';\nexport * as NestingSelector from './NestingSelector.js';\nexport * as Nth from './Nth.js';\nexport * as Number from './Number.js';\nexport * as Operator from './Operator.js';\nexport * as Parentheses from './Parentheses.js';\nexport * as Percentage from './Percentage.js';\nexport * as PseudoClassSelector from './PseudoClassSelector.js';\nexport * as PseudoElementSelector from './PseudoElementSelector.js';\nexport * as Ratio from './Ratio.js';\nexport * as Raw from './Raw.js';\nexport * as Rule from './Rule.js';\nexport * as Selector from './Selector.js';\nexport * as SelectorList from './SelectorList.js';\nexport * as String from './String.js';\nexport * as StyleSheet from './StyleSheet.js';\nexport * as TypeSelector from './TypeSelector.js';\nexport * as UnicodeRange from './UnicodeRange.js';\nexport * as Url from './Url.js';\nexport * as Value from './Value.js';\nexport * as WhiteSpace from './WhiteSpace.js';\n", "import {\n    isDigit,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction checkInteger(offset, disallowSign) {\n    let pos = this.tokenStart + offset;\n    const code = this.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            this.error('Number sign is not allowed');\n        }\n        pos++;\n    }\n\n    for (; pos < this.tokenEnd; pos++) {\n        if (!isDigit(this.charCodeAt(pos))) {\n            this.error('Integer is expected', pos);\n        }\n    }\n}\n\nfunction checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n}\n\nfunction expectCharCode(offset, code) {\n    if (!this.cmpChar(this.tokenStart + offset, code)) {\n        let msg = '';\n\n        switch (code) {\n            case N:\n                msg = 'N is expected';\n                break;\n            case HYPHENMINUS:\n                msg = 'HyphenMinus is expected';\n                break;\n        }\n\n        this.error(msg, this.tokenStart + offset);\n    }\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB() {\n    let offset = 0;\n    let sign = 0;\n    let type = this.tokenType;\n\n    while (type === WhiteSpace || type === Comment) {\n        type = this.lookupType(++offset);\n    }\n\n    if (type !== Number) {\n        if (this.isDelim(PLUSSIGN, offset) ||\n            this.isDelim(HYPHENMINUS, offset)) {\n            sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n            do {\n                type = this.lookupType(++offset);\n            } while (type === WhiteSpace || type === Comment);\n\n            if (type !== Number) {\n                this.skip(offset);\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (offset > 0) {\n        this.skip(offset);\n    }\n\n    if (sign === 0) {\n        type = this.charCodeAt(this.tokenStart);\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n            this.error('Number sign is expected');\n        }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(Number) : this.consume(Number);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport const name = 'AnPlusB';\nexport const structure = {\n    a: [String, null],\n    b: [String, null]\n};\n\nexport function parse() {\n    /* eslint-disable brace-style*/\n    const start = this.tokenStart;\n    let a = null;\n    let b = null;\n\n    // <integer>\n    if (this.tokenType === Number) {\n        checkTokenIsInteger.call(this, ALLOW_SIGN);\n        b = this.consume(Number);\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (this.tokenType === Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {\n        a = '-1';\n\n        expectCharCode.call(this, 1, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // -n- <signless-integer>\n            case 3:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // <dashndashdigit-ident>\n            default:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n                checkInteger.call(this, 3, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + 2);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (this.tokenType === Ident || (this.isDelim(PLUSSIGN) && this.lookupType(1) === Ident)) {\n        let sign = 0;\n        a = '1';\n\n        // just ignore a plus\n        if (this.isDelim(PLUSSIGN)) {\n            sign = 1;\n            this.next();\n        }\n\n        expectCharCode.call(this, 0, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // '+'? n- <signless-integer>\n            case 2:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // '+'? <ndashdigit-ident>\n            default:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n                checkInteger.call(this, 2, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + sign + 1);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (this.tokenType === Dimension) {\n        const code = this.charCodeAt(this.tokenStart);\n        const sign = code === PLUSSIGN || code === HYPHENMINUS;\n        let i = this.tokenStart + sign;\n\n        for (; i < this.tokenEnd; i++) {\n            if (!isDigit(this.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === this.tokenStart + sign) {\n            this.error('Integer is expected', this.tokenStart + sign);\n        }\n\n        expectCharCode.call(this, i - this.tokenStart, N);\n        a = this.substring(start, i);\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === this.tokenEnd) {\n            this.next();\n            b = consumeB.call(this);\n        } else {\n            expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === this.tokenEnd) {\n                this.next();\n                this.skipSC();\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n                b = '-' + this.consume(Number);\n            }\n            // <ndashdigit-dimension>\n            else {\n                checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);\n                this.next();\n                b = this.substrToCursor(i + 1);\n            }\n        }\n    } else {\n        this.error();\n    }\n\n    if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n        a = a.substr(1);\n    }\n\n    if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n        b = b.substr(1);\n    }\n\n    return {\n        type: 'AnPlusB',\n        loc: this.getLocation(start, this.tokenStart),\n        a,\n        b\n    };\n}\n\nexport function generate(node) {\n    if (node.a) {\n        const a =\n            node.a === '+1' && 'n' ||\n            node.a ===  '1' && 'n' ||\n            node.a === '-1' && '-n' ||\n            node.a + 'n';\n\n        if (node.b) {\n            const b = node.b[0] === '-' || node.b[0] === '+'\n                ? node.b\n                : '+' + node.b;\n            this.tokenize(a + b);\n        } else {\n            this.tokenize(a);\n        }\n    } else {\n        this.tokenize(node.b);\n    }\n}\n", "import {\n    AtKeyword,\n    Semicolon,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (let offset = 1, type; type = this.lookupType(offset); offset++) {\n        if (type === RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === LeftCurlyBracket ||\n            type === AtKeyword) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n\nexport const name = 'Atrule';\nexport const walkContext = 'atrule';\nexport const structure = {\n    name: String,\n    prelude: ['AtrulePrelude', 'Raw', null],\n    block: ['Block', null]\n};\n\nexport function parse(isDeclaration = false) {\n    const start = this.tokenStart;\n    let name;\n    let nameLowerCase;\n    let prelude = null;\n    let block = null;\n\n    this.eat(AtKeyword);\n\n    name = this.substrToCursor(start + 1);\n    nameLowerCase = name.toLowerCase();\n    this.skipSC();\n\n    // parse prelude\n    if (this.eof === false &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        if (this.parseAtrulePrelude) {\n            prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name, isDeclaration), consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, this.tokenIndex);\n        }\n\n        this.skipSC();\n    }\n\n    switch (this.tokenType) {\n        case Semicolon:\n            this.next();\n            break;\n\n        case LeftCurlyBracket:\n            if (hasOwnProperty.call(this.atrule, nameLowerCase) &&\n                typeof this.atrule[nameLowerCase].block === 'function') {\n                block = this.atrule[nameLowerCase].block.call(this, isDeclaration);\n            } else {\n                // TODO: should consume block content as Raw?\n                block = this.Block(isDeclarationBlockAtrule.call(this));\n            }\n\n            break;\n    }\n\n    return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        prelude,\n        block\n    };\n}\n\nexport function generate(node) {\n    this.token(AtKeyword, '@' + node.name);\n\n    if (node.prelude !== null) {\n        this.node(node.prelude);\n    }\n\n    if (node.block) {\n        this.node(node.block);\n    } else {\n        this.token(Semicolon, ';');\n    }\n}\n", "import {\n    Semicolon,\n    LeftCurlyBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'AtrulePrelude';\nexport const walkContext = 'atrulePrelude';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(name) {\n    let children = null;\n\n    if (name !== null) {\n        name = name.toLowerCase();\n    }\n\n    this.skipSC();\n\n    if (hasOwnProperty.call(this.atrule, name) &&\n        typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n    } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n    }\n\n    this.skipSC();\n\n    if (this.eof !== true &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        this.error('Semicolon or block is expected');\n    }\n\n    return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import {\n    Ident,\n    String as StringToken,\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nconst DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\nconst ASTERISK = 0x002A;         // U+002A ASTERISK (*)\nconst EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\nconst CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\nconst VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;            // U+007E TILDE (~)\n\nfunction getAttributeName() {\n    if (this.eof) {\n        this.error('Unexpected end of input');\n    }\n\n    const start = this.tokenStart;\n    let expectIdent = false;\n\n    if (this.isDelim(ASTERISK)) {\n        expectIdent = true;\n        this.next();\n    } else if (!this.isDelim(VERTICALLINE)) {\n        this.eat(Ident);\n    }\n\n    if (this.isDelim(VERTICALLINE)) {\n        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {\n            this.next();\n            this.eat(Ident);\n        } else if (expectIdent) {\n            this.error('Identifier is expected', this.tokenEnd);\n        }\n    } else if (expectIdent) {\n        this.error('Vertical line is expected');\n    }\n\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nfunction getOperator() {\n    const start = this.tokenStart;\n    const code = this.charCodeAt(start);\n\n    if (code !== EQUALSSIGN &&        // =\n        code !== TILDE &&             // ~=\n        code !== CIRCUMFLEXACCENT &&  // ^=\n        code !== DOLLARSIGN &&        // $=\n        code !== ASTERISK &&          // *=\n        code !== VERTICALLINE         // |=\n    ) {\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n\n    this.next();\n\n    if (code !== EQUALSSIGN) {\n        if (!this.isDelim(EQUALSSIGN)) {\n            this.error('Equal sign is expected');\n        }\n\n        this.next();\n    }\n\n    return this.substrToCursor(start);\n}\n\n// '[' <wq-name> ']'\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\nexport const name = 'AttributeSelector';\nexport const structure = {\n    name: 'Identifier',\n    matcher: [String, null],\n    value: ['String', 'Identifier', null],\n    flags: [String, null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let matcher = null;\n    let value = null;\n    let flags = null;\n\n    this.eat(LeftSquareBracket);\n    this.skipSC();\n\n    name = getAttributeName.call(this);\n    this.skipSC();\n\n    if (this.tokenType !== RightSquareBracket) {\n        // avoid case `[name i]`\n        if (this.tokenType !== Ident) {\n            matcher = getOperator.call(this);\n\n            this.skipSC();\n\n            value = this.tokenType === StringToken\n                ? this.String()\n                : this.Identifier();\n\n            this.skipSC();\n        }\n\n        // attribute flags\n        if (this.tokenType === Ident) {\n            flags = this.consume(Ident);\n\n            this.skipSC();\n        }\n    }\n\n    this.eat(RightSquareBracket);\n\n    return {\n        type: 'AttributeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        matcher,\n        value,\n        flags\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.node(node.name);\n\n    if (node.matcher !== null) {\n        this.tokenize(node.matcher);\n        this.node(node.value);\n    }\n\n    if (node.flags !== null) {\n        this.token(Ident, node.flags);\n    }\n\n    this.token(Delim, ']');\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.tokenType === Semicolon) {\n        return consumeRawDeclaration.call(this, this.tokenIndex);\n    }\n\n    const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.tokenType === Semicolon) {\n        this.next();\n    }\n\n    return node;\n}\n\nexport const name = 'Block';\nexport const walkContext = 'block';\nexport const structure = {\n    children: [[\n        'Atrule',\n        'Rule',\n        'Declaration'\n    ]]\n};\n\nexport function parse(isStyleBlock) {\n    const consumer = isStyleBlock ? consumeDeclaration : consumeRule;\n    const start = this.tokenStart;\n    let children = this.createList();\n\n    this.eat(LeftCurlyBracket);\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case RightCurlyBracket:\n                break scan;\n\n            case WhiteSpace:\n            case Comment:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, isStyleBlock), consumeRaw));\n                break;\n\n            default:\n                if (isStyleBlock && this.isDelim(AMPERSAND))  {\n                    children.push(consumeRule.call(this));\n                } else {\n                    children.push(consumer.call(this));\n                }\n        }\n    }\n\n    if (!this.eof) {\n        this.eat(RightCurlyBracket);\n    }\n\n    return {\n        type: 'Block',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftCurlyBracket, '{');\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n    this.token(RightCurlyBracket, '}');\n}\n", "import {\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'Brackets';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftSquareBracket);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightSquareBracket);\n    }\n\n    return {\n        type: 'Brackets',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.children(node);\n    this.token(Delim, ']');\n}\n", "import { CDC } from '../../tokenizer/index.js';\n\nexport const name = 'CDC';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDC); // -->\n\n    return {\n        type: 'CDC',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDC, '-->');\n}\n", "import { CDO } from '../../tokenizer/index.js';\n\nexport const name = 'CDO';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDO); // <!--\n\n    return {\n        type: 'CDO',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDO, '<!--');\n}\n", "import { Delim, Ident } from '../../tokenizer/index.js';\n\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// '.' ident\nexport const name = 'ClassSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    this.eatDelim(FULLSTOP);\n\n    return {\n        type: 'ClassSelector',\n        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '.');\n    this.token(Ident, node.name);\n}\n", "import { WhiteSpace, Delim } from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nexport const name = 'Combinator';\nexport const structure = {\n    name: String\n};\n\n// + | > | ~ | /deep/\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n\n    switch (this.tokenType) {\n        case WhiteSpace:\n            name = ' ';\n            break;\n\n        case Delim:\n            switch (this.charCodeAt(this.tokenStart)) {\n                case GREATERTHANSIGN:\n                case PLUSSIGN:\n                case TILDE:\n                    this.next();\n                    break;\n\n                case SOLIDUS:\n                    this.next();\n                    this.eatIdent('deep');\n                    this.eatDelim(SOLIDUS);\n                    break;\n\n                default:\n                    this.error('Combinator is expected');\n            }\n\n            name = this.substrToCursor(start);\n            break;\n    }\n\n    return {\n        type: 'Combinator',\n        loc: this.getLocation(start, this.tokenStart),\n        name\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n", "import { Comment } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\n\nexport const name = 'Comment';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let end = this.tokenEnd;\n\n    this.eat(Comment);\n\n    if ((end - start + 2) >= 2 &&\n        this.charCodeAt(end - 2) === ASTERISK &&\n        this.charCodeAt(end - 1) === SOLIDUS) {\n        end -= 2;\n    }\n\n    return {\n        type: 'Comment',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substring(start + 2, end)\n    };\n}\n\nexport function generate(node) {\n    this.token(Comment, '/*' + node.value + '*/');\n}\n", "import { isCustomProperty } from '../../utils/names.js';\nimport {\n    Ident,\n    Hash,\n    Colon,\n    Semicolon,\n    Delim,\n    WhiteSpace\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    const startValueToken = this.tokenIndex;\n    const value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isDelim(EXCLAMATIONMARK) === false &&\n        this.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nexport const name = 'Declaration';\nexport const walkContext = 'declaration';\nexport const structure = {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const startToken = this.tokenIndex;\n    const property = readProperty.call(this);\n    const customProperty = isCustomProperty(property);\n    const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    let important = false;\n    let value;\n\n    this.skipSC();\n    this.eat(Colon);\n\n    const valueStart = this.tokenIndex;\n\n    if (!customProperty) {\n        this.skipSC();\n    }\n\n    if (parseValue) {\n        value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n        value = consumeRaw.call(this, this.tokenIndex);\n    }\n\n    if (customProperty && value.type === 'Value' && value.children.isEmpty) {\n        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {\n            if (this.lookupType(offset) === WhiteSpace) {\n                value.children.appendData({\n                    type: 'WhiteSpace',\n                    loc: null,\n                    value: ' '\n                });\n                break;\n            }\n        }\n    }\n\n    if (this.isDelim(EXCLAMATIONMARK)) {\n        important = getImportant.call(this);\n        this.skipSC();\n    }\n\n    // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n    if (this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isBalanceEdge(startToken) === false) {\n        this.error();\n    }\n\n    return {\n        type: 'Declaration',\n        loc: this.getLocation(start, this.tokenStart),\n        important,\n        property,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.property);\n    this.token(Colon, ':');\n    this.node(node.value);\n\n    if (node.important) {\n        this.token(Delim, '!');\n        this.token(Ident, node.important === true ? 'important' : node.important);\n    }\n}\n\nfunction readProperty() {\n    const start = this.tokenStart;\n\n    // hacks\n    if (this.tokenType === Delim) {\n        switch (this.charCodeAt(this.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.next();\n                if (this.isDelim(SOLIDUS)) {\n                    this.next();\n                }\n                break;\n        }\n    }\n\n    if (this.tokenType === Hash) {\n        this.eat(Hash);\n    } else {\n        this.eat(Ident);\n    }\n\n    return this.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(Delim);\n    this.skipSC();\n\n    const important = this.consume(Ident);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\n\nexport const name = 'DeclarationList';\nexport const structure = {\n    children: [[\n        'Declaration',\n        'Atrule',\n        'Rule'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n            case Comment:\n            case Semicolon:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, true), consumeRaw));\n                break;\n\n            default:\n                if (this.isDelim(AMPERSAND))  {\n                    children.push(this.parseWithFallback(this.Rule, consumeRaw));\n                } else {\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n                }\n        }\n    }\n\n    return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n}\n\n", "import { Dimension } from '../../tokenizer/index.js';\n\nexport const name = 'Dimension';\nexport const structure = {\n    value: String,\n    unit: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const value = this.consumeNumber(Dimension);\n\n    return {\n        type: 'Dimension',\n        loc: this.getLocation(start, this.tokenStart),\n        value,\n        unit: this.substring(start + value.length, this.tokenStart)\n    };\n}\n\nexport function generate(node) {\n    this.token(Dimension, node.value + node.unit);\n}\n", "import {\n    Function as FunctionToken,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'Function';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [[]]\n};\n\n// <function-token> <sequence> )\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    const name = this.consumeFunctionName();\n    const nameLowerCase = name.toLowerCase();\n    let children;\n\n    children = recognizer.hasOwnProperty(nameLowerCase)\n        ? recognizer[nameLowerCase].call(this, recognizer)\n        : readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Function',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(FunctionToken, node.name + '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n", "import { Hash } from '../../tokenizer/index.js';\n\n// '#' ident\nexport const xxx = 'XXX';\nexport const name = 'Hash';\nexport const structure = {\n    value: String\n};\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(Hash);\n\n    return {\n        type: 'Hash',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start + 1)\n    };\n}\nexport function generate(node) {\n    this.token(Hash, '#' + node.value);\n}\n\n", "import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Identifier';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.name);\n}\n", "import { Hash, Delim } from '../../tokenizer/index.js';\n\nexport const name = 'IdSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // TODO: check value is an ident\n    this.eat(Hash);\n\n    return {\n        type: 'IdSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start + 1)\n    };\n}\n\nexport function generate(node) {\n    // Using Delim instead of Hash is a hack to avoid for a whitespace between ident and id-selector\n    // in safe mode (e.g. \"a#id\"), because IE11 doesn't allow a sequence <ident-token> <hash-token>\n    // without a whitespace in values (e.g. \"1px solid#000\")\n    this.token(Delim, '#' + node.name);\n}\n", "import {\n    Ident,\n    Number,\n    Dimension,\n    LeftParenthesis,\n    RightParenthesis,\n    Colon,\n    Delim\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaFeature';\nexport const structure = {\n    name: String,\n    value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let value = null;\n\n    this.eat(LeftParenthesis);\n    this.skipSC();\n\n    name = this.consume(Ident);\n    this.skipSC();\n\n    if (this.tokenType !== RightParenthesis) {\n        this.eat(Colon);\n        this.skipSC();\n\n        switch (this.tokenType) {\n            case Number:\n                if (this.lookupNonWSType(1) === Delim) {\n                    value = this.Ratio();\n                } else {\n                    value = this.Number();\n                }\n\n                break;\n\n            case Dimension:\n                value = this.Dimension();\n                break;\n\n            case Ident:\n                value = this.Identifier();\n                break;\n\n            default:\n                this.error('Number, dimension, ratio or identifier is expected');\n        }\n\n        this.skipSC();\n    }\n\n    this.eat(RightParenthesis);\n\n    return {\n        type: 'MediaFeature',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.token(Ident, node.name);\n\n    if (node.value !== null) {\n        this.token(Colon, ':');\n        this.node(node.value);\n    }\n\n    this.token(RightParenthesis, ')');\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaQuery';\nexport const structure = {\n    children: [[\n        'Identifier',\n        'MediaFeature',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n    let child = null;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.MediaFeature();\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n    }\n\n    return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n\n", "import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'MediaQueryList';\nexport const structure = {\n    children: [[\n        'MediaQuery'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    while (!this.eof) {\n        children.push(this.MediaQuery());\n\n        if (this.tokenType !== Comma) {\n            break;\n        }\n\n        this.next();\n    }\n\n    return {\n        type: 'MediaQueryList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n", "import { Delim } from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nexport const name = 'NestingSelector';\nexport const structure = {\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eatDelim(AMPERSAND);\n\n    return {\n        type: 'NestingSelector',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(Delim, '&');\n}\n", "import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Nth';\nexport const structure = {\n    nth: ['AnPlusB', 'Identifier'],\n    selector: ['SelectorList', null]\n};\n\nexport function parse() {\n    this.skipSC();\n\n    const start = this.tokenStart;\n    let end = start;\n    let selector = null;\n    let nth;\n\n    if (this.lookupValue(0, 'odd') || this.lookupValue(0, 'even')) {\n        nth = this.Identifier();\n    } else {\n        nth = this.AnPlusB();\n    }\n\n    end = this.tokenStart;\n    this.skipSC();\n\n    if (this.lookupValue(0, 'of')) {\n        this.next();\n\n        selector = this.SelectorList();\n        end = this.tokenStart;\n    }\n\n    return {\n        type: 'Nth',\n        loc: this.getLocation(start, end),\n        nth,\n        selector\n    };\n}\n\nexport function generate(node) {\n    this.node(node.nth);\n    if (node.selector !== null) {\n        this.token(Ident, 'of');\n        this.node(node.selector);\n    }\n}\n", "import { Number as NumberToken } from '../../tokenizer/index.js';\n\nexport const name = 'Number';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Number',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consume(NumberToken)\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.value);\n}\n", "// '/' | '*' | ',' | ':' | '+' | '-'\nexport const name = 'Operator';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.next();\n\n    return {\n        type: 'Operator',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import {\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Parentheses';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftParenthesis);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Parentheses',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n", "import { Percentage } from '../../tokenizer/index.js';\n\nexport const name = 'Percentage';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Percentage',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consumeNumber(Percentage)\n    };\n}\n\nexport function generate(node) {\n    this.token(Percentage, node.value + '%');\n}\n", "import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'PseudoClassSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// : [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoClassSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n", "import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'PseudoElementSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// :: [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n", "import { isDigit, Delim, Number as NumberToken } from '../../tokenizer/index.js';\n\nconst SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// Terms of <ratio> should be a positive numbers (not zero or negative)\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\n// and this is using by various sites. Therefore we relax checking on parse\n// to test a term is unsigned number without an exponent part.\n// Additional checking may be applied on lexer validation.\nfunction consumeNumber() {\n    this.skipSC();\n\n    const value = this.consume(NumberToken);\n\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if (!isDigit(code) && code !== FULLSTOP) {\n            this.error('Unsigned number is expected', this.tokenStart - value.length + i);\n        }\n    }\n\n    if (Number(value) === 0) {\n        this.error('Zero number is not allowed', this.tokenStart - value.length);\n    }\n\n    return value;\n}\n\nexport const name = 'Ratio';\nexport const structure = {\n    left: String,\n    right: String\n};\n\n// <positive-integer> S* '/' S* <positive-integer>\nexport function parse() {\n    const start = this.tokenStart;\n    const left = consumeNumber.call(this);\n    let right;\n\n    this.skipSC();\n    this.eatDelim(SOLIDUS);\n    right = consumeNumber.call(this);\n\n    return {\n        type: 'Ratio',\n        loc: this.getLocation(start, this.tokenStart),\n        left,\n        right\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.left);\n    this.token(Delim, '/');\n    this.token(NumberToken, node.right);\n}\n", "import { WhiteSpace } from '../../tokenizer/index.js';\n\nfunction getOffsetExcludeWS() {\n    if (this.tokenIndex > 0) {\n        if (this.lookupType(-1) === WhiteSpace) {\n            return this.tokenIndex > 1\n                ? this.getTokenStart(this.tokenIndex - 1)\n                : this.firstCharOffset;\n        }\n    }\n\n    return this.tokenStart;\n}\n\nexport const name = 'Raw';\nexport const structure = {\n    value: String\n};\n\nexport function parse(startToken, consumeUntil, excludeWhiteSpace) {\n    const startOffset = this.getTokenStart(startToken);\n    let endOffset;\n\n    this.skipUntilBalanced(startToken, consumeUntil || this.consumeUntilBalanceEnd);\n\n    if (excludeWhiteSpace && this.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n    } else {\n        endOffset = this.tokenStart;\n    }\n\n    return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.substring(startOffset, endOffset)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import { LeftCurlyBracket } from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    const prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== LeftCurlyBracket) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nexport const name = 'Rule';\nexport const walkContext = 'rule';\nexport const structure = {\n    prelude: ['SelectorList', 'Raw'],\n    block: ['Block']\n};\n\nexport function parse() {\n    const startToken = this.tokenIndex;\n    const startOffset = this.tokenStart;\n    let prelude;\n    let block;\n\n    if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n    } else {\n        prelude = consumeRaw.call(this, startToken);\n    }\n\n    block = this.Block(true);\n\n    return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.tokenStart),\n        prelude,\n        block\n    };\n}\nexport function generate(node) {\n    this.node(node.prelude);\n    this.node(node.block);\n}\n\n", "export const name = 'Selector';\nexport const structure = {\n    children: [[\n        'TypeSelector',\n        'IdSelector',\n        'ClassSelector',\n        'AttributeSelector',\n        'PseudoClassSelector',\n        'PseudoElementSelector',\n        'Combinator',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.readSequence(this.scope.Selector);\n\n    // nothing were consumed\n    if (this.getFirstListNode(children) === null) {\n        this.error('Selector is expected');\n    }\n\n    return {\n        type: 'Selector',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'SelectorList';\nexport const walkContext = 'selector';\nexport const structure = {\n    children: [[\n        'Selector',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    while (!this.eof) {\n        children.push(this.Selector());\n\n        if (this.tokenType === Comma) {\n            this.next();\n            continue;\n        }\n\n        break;\n    }\n\n    return {\n        type: 'SelectorList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n", "import { String as StringToken } from '../../tokenizer/index.js';\nimport { decode, encode } from '../../utils/string.js';\n\nexport const name = 'String';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'String',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: decode(this.consume(StringToken))\n    };\n}\n\nexport function generate(node) {\n    this.token(StringToken, encode(node.value));\n}\n", "import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;  // \"\nconst APOSTROPHE = 0x0027;      // '\n\nexport function decode(str) {\n    const len = str.length;\n    const firstChar = str.charCodeAt(0);\n    const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;\n    const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;\n    let decoded = '';\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last quote as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-a-string\n// § 2.1. Common Serializing Idioms\nexport function encode(str, apostrophe) {\n    const quote = apostrophe ? '\\'' : '\"';\n    const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        // If the character is '\"' (U+0022) or \"\\\" (U+005C), the escaped character.\n        if (code === quoteCode || code === REVERSE_SOLIDUS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && (isHexDigit(code) || isWhiteSpace(code))) {\n                encoded += ' ';\n            }\n\n            // Otherwise, the character itself.\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return quote + encoded + quote;\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    AtKeyword,\n    CDO,\n    CDC\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n}\n\nexport const name = 'StyleSheet';\nexport const walkContext = 'stylesheet';\nexport const structure = {\n    children: [[\n        'Comment',\n        'CDO',\n        'CDC',\n        'Atrule',\n        'Rule',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.createList();\n    let child;\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Comment:\n                // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {\n                    this.next();\n                    continue;\n                }\n\n                child = this.Comment();\n                break;\n\n            case CDO: // <!--\n                child = this.CDO();\n                break;\n\n            case CDC: // -->\n                child = this.CDC();\n                break;\n\n            // CSS Syntax Module Level 3\n            // §2.2 Error handling\n            // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n            case AtKeyword:\n                child = this.parseWithFallback(this.Atrule, consumeRaw);\n                break;\n\n            // Anything else starts a qualified rule ...\n            default:\n                child = this.parseWithFallback(this.Rule, consumeRaw);\n        }\n\n        children.push(child);\n    }\n\n    return {\n        type: 'StyleSheet',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { Ident } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;     // U+002A ASTERISK (*)\nconst VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n\nfunction eatIdentifierOrAsterisk() {\n    if (this.tokenType !== Ident &&\n        this.isDelim(ASTERISK) === false) {\n        this.error('Identifier or asterisk is expected');\n    }\n\n    this.next();\n}\n\nexport const name = 'TypeSelector';\nexport const structure = {\n    name: String\n};\n\n// ident\n// ident|ident\n// ident|*\n// *\n// *|ident\n// *|*\n// |ident\n// |*\nexport function parse() {\n    const start = this.tokenStart;\n\n    if (this.isDelim(VERTICALLINE)) {\n        this.next();\n        eatIdentifierOrAsterisk.call(this);\n    } else {\n        eatIdentifierOrAsterisk.call(this);\n\n        if (this.isDelim(VERTICALLINE)) {\n            this.next();\n            eatIdentifierOrAsterisk.call(this);\n        }\n    }\n\n    return {\n        type: 'TypeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n", "import {\n    isHexDigit,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n\nfunction eatHexSequence(offset, allowDash) {\n    let len = 0;\n\n    for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {\n        const code = this.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\n            eatHexSequence.call(this, offset + len + 1, false);\n            return -1;\n        }\n\n        if (!isHexDigit(code)) {\n            this.error(\n                allowDash && len !== 0\n                    ? 'Hyphen minus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\n                pos\n            );\n        }\n\n        if (++len > 6) {\n            this.error('Too many hex digits', pos);\n        };\n    }\n\n    this.next();\n    return len;\n}\n\nfunction eatQuestionMarkSequence(max) {\n    let count = 0;\n\n    while (this.isDelim(QUESTIONMARK)) {\n        if (++count > max) {\n            this.error('Too many question marks');\n        }\n\n        this.next();\n    }\n}\n\nfunction startsWith(code) {\n    if (this.charCodeAt(this.tokenStart) !== code) {\n        this.error((code === PLUSSIGN ? 'Plus sign' : 'Hyphen minus') + ' is expected');\n    }\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction scanUnicodeRange() {\n    let hexLength = 0;\n\n    switch (this.tokenType) {\n        case Number:\n            // u <number-token> '?'*\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (this.isDelim(QUESTIONMARK)) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n                break;\n            }\n\n            if (this.tokenType === Dimension ||\n                this.tokenType === Number) {\n                startsWith.call(this, HYPHENMINUS);\n                eatHexSequence.call(this, 1, false);\n                break;\n            }\n\n            break;\n\n        case Dimension:\n            // u <dimension-token> '?'*\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (hexLength > 0) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n            }\n\n            break;\n\n        default:\n            // u '+' <ident-token> '?'*\n            // u '+' '?'+\n            this.eatDelim(PLUSSIGN);\n\n            if (this.tokenType === Ident) {\n                hexLength = eatHexSequence.call(this, 0, true);\n                if (hexLength > 0) {\n                    eatQuestionMarkSequence.call(this, 6 - hexLength);\n                }\n                break;\n            }\n\n            if (this.isDelim(QUESTIONMARK)) {\n                this.next();\n                eatQuestionMarkSequence.call(this, 5);\n                break;\n            }\n\n            this.error('Hex digit or question mark is expected');\n    }\n}\n\nexport const name = 'UnicodeRange';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // U or u\n    this.eatIdent('u');\n    scanUnicodeRange.call(this);\n\n    return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import * as url from '../../utils/url.js';\nimport * as string from '../../utils/string.js';\nimport {\n    Function as FunctionToken,\n    String as StringToken,\n    Url,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Url';\nexport const structure = {\n    value: String\n};\n\n// <url-token> | <function-token> <string> )\nexport function parse() {\n    const start = this.tokenStart;\n    let value;\n\n    switch (this.tokenType) {\n        case Url:\n            value = url.decode(this.consume(Url));\n            break;\n\n        case FunctionToken:\n            if (!this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')) {\n                this.error('Function name must be `url`');\n            }\n\n            this.eat(FunctionToken);\n            this.skipSC();\n            value = string.decode(this.consume(StringToken));\n            this.skipSC();\n            if (!this.eof) {\n                this.eat(RightParenthesis);\n            }\n            break;\n\n        default:\n            this.error('Url or Function is expected');\n    }\n\n    return {\n        type: 'Url',\n        loc: this.getLocation(start, this.tokenStart),\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Url, url.encode(node.value));\n}\n", "import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst SPACE = 0x0020;            // U+0020 SPACE\nconst REVERSE_SOLIDUS = 0x005c;  // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;   // \"\nconst APOSTROPHE = 0x0027;       // '\nconst LEFTPARENTHESIS = 0x0028;  // U+0028 LEFT PARENTHESIS (()\nconst RIGHTPARENTHESIS = 0x0029; // U+0029 RIGHT PARENTHESIS ())\n\nexport function decode(str) {\n    const len = str.length;\n    let start = 4; // length of \"url(\"\n    let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;\n    let decoded = '';\n\n    while (start < end && isWhiteSpace(str.charCodeAt(start))) {\n        start++;\n    }\n\n    while (start < end && isWhiteSpace(str.charCodeAt(end))) {\n        end--;\n    }\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last left parenthesis as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\nexport function encode(str) {\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        if (code === SPACE ||\n            code === REVERSE_SOLIDUS ||\n            code === QUOTATION_MARK ||\n            code === APOSTROPHE ||\n            code === LEFTPARENTHESIS ||\n            code === RIGHTPARENTHESIS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && isHexDigit(code)) {\n                encoded += ' ';\n            }\n\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return 'url(' + encoded + ')';\n}\n", "export const name = 'Value';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.readSequence(this.scope.Value);\n\n    return {\n        type: 'Value',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { WhiteSpace } from '../../tokenizer/index.js';\n\nconst SPACE = Object.freeze({\n    type: 'WhiteSpace',\n    loc: null,\n    value: ' '\n});\n\nexport const name = 'WhiteSpace';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    this.eat(WhiteSpace);\n    return SPACE;\n\n    // return {\n    //     type: 'WhiteSpace',\n    //     loc: this.getLocation(this.tokenStart, this.tokenEnd),\n    //     value: this.consume(WHITESPACE)\n    // };\n}\n\nexport function generate(node) {\n    this.token(WhiteSpace, node.value);\n}\n", "import definitions from '../../data.js';\nimport * as node from '../node/index.js';\n\nexport default {\n    generic: true,\n    ...definitions,\n    node\n};\n", "export { default as AtrulePrelude } from './atrulePrelude.js';\nexport { default as Selector } from './selector.js';\nexport { default as Value } from './value.js';\n", "import {\n    Ident,\n    String as StringToken,\n    Number as NumberToken,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Dimension,\n    Percentage,\n    LeftParenthesis,\n    LeftSquareBracket,\n    Comma,\n    Delim\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nconst ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nconst U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nexport default function defaultRecognizer(context) {\n    switch (this.tokenType) {\n        case Hash:\n            return this.Hash();\n\n        case Comma:\n            return this.Operator();\n\n        case LeftParenthesis:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LeftSquareBracket:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case StringToken:\n            return this.String();\n\n        case Dimension:\n            return this.Dimension();\n\n        case Percentage:\n            return this.Percentage();\n\n        case NumberToken:\n            return this.Number();\n\n        case FunctionToken:\n            return this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case Url:\n            return this.Url();\n\n        case Ident:\n            // check for unicode range, it should start with u+ or U+\n            if (this.cmpChar(this.tokenStart, U) &&\n                this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.tokenStart + 1);\n            }\n\n            break;\n        }\n    }\n};\n", "import getNode from './default.js';\n\nexport default {\n    getNode\n};\n", "import {\n    Delim,\n    Ident,\n    Dimension,\n    Percentage,\n    Number as NumberToken,\n    Hash,\n    Colon,\n    LeftSquareBracket\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction onWhiteSpace(next, children) {\n    if (children.last !== null && children.last.type !== 'Combinator' &&\n        next !== null && next.type !== 'Combinator') {\n        children.push({  // FIXME: this.Combinator() should be used instead\n            type: 'Combinator',\n            loc: null,\n            name: ' '\n        });\n    }\n}\n\nfunction getNode() {\n    switch (this.tokenType) {\n        case LeftSquareBracket:\n            return this.AttributeSelector();\n\n        case Hash:\n            return this.IdSelector();\n\n        case Colon:\n            if (this.lookupType(1) === Colon) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case Ident:\n            return this.TypeSelector();\n\n        case NumberToken:\n        case Percentage:\n            return this.Percentage();\n\n        case Dimension:\n            // throws when .123ident\n            if (this.charCodeAt(this.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.tokenStart + 1);\n            }\n            break;\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n\n                case AMPERSAND:\n                    return this.NestingSelector();\n            }\n\n            break;\n        }\n    }\n};\n\nexport default {\n    onWhiteSpace,\n    getNode\n};\n", "// legacy IE function\n// expression( <any-value> )\nexport default function() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n", "import { Comma, WhiteSpace } from '../../tokenizer/index.js';\n\n// var( <ident> , <value>? )\nexport default function() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.skipSC();\n\n    if (this.tokenType === Comma) {\n        children.push(this.Operator());\n\n        const startIndex = this.tokenIndex;\n        const value = this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.tokenIndex, this.consumeUntilExclamationMarkOrSemicolon, false);\n\n        if (value.type === 'Value' && value.children.isEmpty) {\n            for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {\n                if (this.lookupType(offset) === WhiteSpace) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        children.push(value);\n    }\n\n    return children;\n};\n", "import getNode from './default.js';\nimport expressionFn from '../function/expression.js';\nimport varFn from '../function/var.js';\n\nfunction isPlusMinusOperator(node) {\n    return (\n        node !== null &&\n        node.type === 'Operator' &&\n        (node.value[node.value.length - 1] === '-' || node.value[node.value.length - 1] === '+')\n    );\n}\n\nexport default {\n    getNode,\n    onWhiteSpace(next, children) {\n        if (isPlusMinusOperator(next)) {\n            next.value = ' ' + next.value;\n        }\n        if (isPlusMinusOperator(children.last)) {\n            children.last.value += ' ';\n        }\n    },\n    'expression': expressionFn,\n    'var': varFn\n};\n", "export default {\n    parse: {\n        prelude: null,\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "import {\n    String as StringToken,\n    Ident,\n    Url,\n    Function as FunctionToken,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport default {\n    parse: {\n        prelude() {\n            const children = this.createList();\n\n            this.skipSC();\n\n            switch (this.tokenType) {\n                case StringToken:\n                    children.push(this.String());\n                    break;\n\n                case Url:\n                case FunctionToken:\n                    children.push(this.Url());\n                    break;\n\n                default:\n                    this.error('String or url() is expected');\n            }\n\n            if (this.lookupNonWSType(0) === Ident ||\n                this.lookupNonWSType(0) === LeftParenthesis) {\n                children.push(this.MediaQueryList());\n            }\n\n            return children;\n        },\n        block: null\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.MediaQueryList()\n            );\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function,\n    Colon,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n\nfunction parentheses() {\n    this.skipSC();\n\n    if (this.tokenType === Ident &&\n        this.lookupNonWSType(1) === Colon) {\n        return this.createSingleNodeList(\n            this.Declaration()\n        );\n    }\n\n    return readSequence.call(this);\n}\n\nfunction readSequence() {\n    const children = this.createList();\n    let child;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Function:\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n                break;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    return children;\n}\n\nexport default {\n    parse: {\n        prelude() {\n            const children = readSequence.call(this);\n\n            if (this.getFirstListNode(children) === null) {\n                this.error('Condition is expected');\n            }\n\n            return children;\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n", "import fontFace from './font-face.js';\nimport importAtrule from './import.js';\nimport media from './media.js';\nimport nest from './nest.js';\nimport page from './page.js';\nimport supports from './supports.js';\n\nexport default {\n    'font-face': fontFace,\n    'import': importAtrule,\n    media,\n    nest,\n    page,\n    supports\n};\n", "const selectorList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n\nconst selector = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Selector()\n        );\n    }\n};\n\nconst identList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n\nconst nth = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Nth()\n        );\n    }\n};\n\nexport default {\n    'dir': identList,\n    'has': selectorList,\n    'lang': identList,\n    'matches': selectorList,\n    'is': selectorList,\n    '-moz-any': selectorList,\n    '-webkit-any': selectorList,\n    'where': selectorList,\n    'not': selectorList,\n    'nth-child': nth,\n    'nth-last-child': nth,\n    'nth-last-of-type': nth,\n    'nth-of-type': nth,\n    'slotted': selector,\n    'host': selector,\n    'host-context': selector\n};\n", "export { parse as AnPlusB } from './AnPlusB.js';\nexport { parse as Atrule } from './Atrule.js';\nexport { parse as AtrulePrelude } from './AtrulePrelude.js';\nexport { parse as AttributeSelector } from './AttributeSelector.js';\nexport { parse as Block } from './Block.js';\nexport { parse as Brackets } from './Brackets.js';\nexport { parse as CDC } from './CDC.js';\nexport { parse as CDO } from './CDO.js';\nexport { parse as ClassSelector } from './ClassSelector.js';\nexport { parse as Combinator } from './Combinator.js';\nexport { parse as Comment } from './Comment.js';\nexport { parse as Declaration } from './Declaration.js';\nexport { parse as DeclarationList } from './DeclarationList.js';\nexport { parse as Dimension } from './Dimension.js';\nexport { parse as Function } from './Function.js';\nexport { parse as Hash } from './Hash.js';\nexport { parse as Identifier } from './Identifier.js';\nexport { parse as IdSelector } from './IdSelector.js';\nexport { parse as MediaFeature } from './MediaFeature.js';\nexport { parse as MediaQuery } from './MediaQuery.js';\nexport { parse as MediaQueryList } from './MediaQueryList.js';\nexport { parse as NestingSelector } from './NestingSelector.js';\nexport { parse as Nth } from './Nth.js';\nexport { parse as Number } from './Number.js';\nexport { parse as Operator } from './Operator.js';\nexport { parse as Parentheses } from './Parentheses.js';\nexport { parse as Percentage } from './Percentage.js';\nexport { parse as PseudoClassSelector } from './PseudoClassSelector.js';\nexport { parse as PseudoElementSelector } from './PseudoElementSelector.js';\nexport { parse as Ratio } from './Ratio.js';\nexport { parse as Raw } from './Raw.js';\nexport { parse as Rule } from './Rule.js';\nexport { parse as Selector } from './Selector.js';\nexport { parse as SelectorList } from './SelectorList.js';\nexport { parse as String } from './String.js';\nexport { parse as StyleSheet } from './StyleSheet.js';\nexport { parse as TypeSelector } from './TypeSelector.js';\nexport { parse as UnicodeRange } from './UnicodeRange.js';\nexport { parse as Url } from './Url.js';\nexport { parse as Value } from './Value.js';\nexport { parse as WhiteSpace } from './WhiteSpace.js';\n", "import * as scope from '../scope/index.js';\nimport atrule from '../atrule/index.js';\nimport pseudo from '../pseudo/index.js';\nimport * as node from '../node/index-parse.js';\n\nexport default {\n    parseContext: {\n        default: 'StyleSheet',\n        stylesheet: 'StyleSheet',\n        atrule: 'Atrule',\n        atrulePrelude(options) {\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\n        },\n        mediaQueryList: 'MediaQueryList',\n        mediaQuery: 'MediaQuery',\n        rule: 'Rule',\n        selectorList: 'SelectorList',\n        selector: 'Selector',\n        block() {\n            return this.Block(true);\n        },\n        declarationList: 'DeclarationList',\n        declaration: 'Declaration',\n        value: 'Value'\n    },\n    scope,\n    atrule,\n    pseudo,\n    node\n};\n", "import * as node from '../node/index.js';\n\nexport default {\n    node\n};\n", "import createSyntax from './create.js';\nimport lexerConfig from './config/lexer.js';\nimport parserConfig from './config/parser.js';\nimport walkerConfig from './config/walker.js';\n\nexport default createSyntax({\n    ...lexerConfig,\n    ...parserConfig,\n    ...walkerConfig\n});\n", "import { List } from './List.js';\n\nexport function clone(node) {\n    const result = {};\n\n    for (const key in node) {\n        let value = node[key];\n\n        if (value) {\n            if (Array.isArray(value) || value instanceof List) {\n                value = value.map(clone);\n            } else if (value.constructor === Object) {\n                value = clone(value);\n            }\n        }\n\n        result[key] = value;\n    }\n\n    return result;\n}\n", "import {\n    isName,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nexport function decode(str) {\n    const end = str.length - 1;\n    let decoded = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-an-identifier\n// § 2.1. Common Serializing Idioms\nexport function encode(str) {\n    let encoded = '';\n\n    // If the character is the first character and is a \"-\" (U+002D),\n    // and there is no second character, then the escaped character.\n    // Note: That's means a single dash string \"-\" return as escaped dash,\n    // so move the condition out of the main loop\n    if (str.length === 1 && str.charCodeAt(0) === 0x002D) {\n        return '\\\\-';\n    }\n\n    // To serialize an identifier means to create a string represented\n    // by the concatenation of, for each character of the identifier:\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        if (\n            // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F ...\n            // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n            code <= 0x001F || code === 0x007F ||\n            // [or] ... is in the range [0-9] (U+0030 to U+0039),\n            (code >= 0x0030 && code <= 0x0039 && (\n                // If the character is the first character ...\n                i === 0 ||\n                // If the character is the second character ... and the first character is a \"-\" (U+002D)\n                i === 1 && str.charCodeAt(0) === 0x002D\n            ))\n        ) {\n            // ... then the character escaped as code point.\n            encoded += '\\\\' + code.toString(16) + ' ';\n            continue;\n        }\n\n        // If the character is not handled by one of the above rules and is greater\n        // than or equal to U+0080, is \"-\" (U+002D) or \"_\" (U+005F), or is in one\n        // of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to U+005A),\n        // or \\[a-z] (U+0061 to U+007A), then the character itself.\n        if (isName(code)) {\n            encoded += str.charAt(i);\n        } else {\n            // Otherwise, the escaped character.\n            encoded += '\\\\' + str.charAt(i);\n        }\n    }\n\n    return encoded;\n}\n", "import syntax from './syntax/index.js';\n\nexport * from './version.js';\nexport { default as createSyntax } from './syntax/create.js';\nexport { List } from './utils/List.js';\nexport { Lexer } from './lexer/Lexer.js';\nexport { tokenTypes, tokenNames, TokenStream } from './tokenizer/index.js';\nexport * as definitionSyntax from './definition-syntax/index.js';\nexport { clone } from './utils/clone.js';\nexport * from './utils/names.js';\nexport * as ident from './utils/ident.js';\nexport * as string from './utils/string.js';\nexport * as url from './utils/url.js';\nexport const {\n    tokenize,\n    parse,\n    generate,\n    lexer,\n    createLexer,\n\n    walk,\n    find,\n    findLast,\n    findAll,\n\n    toPlainObject,\n    fromPlainObject,\n\n    fork\n} = syntax;\n", "import { expandVariantGroup, notNull, regexScopePlaceholder } from '@unocss/core';\nimport { parse, walk, generate, clone } from 'css-tree';\n\nconst regexCssId = /\\.(css|postcss|sass|scss|less|stylus|styl)$/;\n\nfunction transformerDirectives(options) {\n  return {\n    name: \"css-directive\",\n    enforce: options?.enforce,\n    idFilter: (id) => !!id.match(regexCssId),\n    transform: (code, id, ctx) => {\n      return transformDirectives(code, ctx.uno, id);\n    }\n  };\n}\nasync function transformDirectives(code, uno, filename, originalCode, offset) {\n  if (!code.original.includes(\"@apply\"))\n    return;\n  const ast = parse(originalCode || code.original, {\n    parseAtrulePrelude: false,\n    positions: true,\n    filename\n  });\n  const calcOffset = (pos) => offset ? pos + offset : pos;\n  if (ast.type !== \"StyleSheet\")\n    return;\n  const stack = [];\n  const processNode = async (node, _item, _list) => {\n    if (node.type !== \"Rule\")\n      return;\n    await Promise.all(node.block.children.map(async (childNode, _childItem) => {\n      if (childNode.type === \"Raw\")\n        return transformDirectives(code, uno, filename, childNode.value, calcOffset(childNode.loc.start.offset));\n      if (!(childNode.type === \"Atrule\" && childNode.name === \"apply\" && childNode.prelude))\n        return;\n      if (childNode.prelude.type !== \"Raw\")\n        return;\n      const classNames = expandVariantGroup(childNode.prelude.value).split(/\\s+/g);\n      const utils = (await Promise.all(classNames.map((i) => uno.parseToken(i, \"-\")))).filter(notNull).flat().sort((a, b) => a[0] - b[0]).sort((a, b) => (a[3] ? uno.parentOrders.get(a[3]) ?? 0 : 0) - (b[3] ? uno.parentOrders.get(b[3]) ?? 0 : 0)).reduce((acc, item) => {\n        const target = acc.find((i) => i[1] === item[1] && i[3] === item[3]);\n        if (target)\n          target[2] += item[2];\n        else\n          acc.push([...item]);\n        return acc;\n      }, []);\n      if (!utils.length)\n        return;\n      for (const i of utils) {\n        const [, _selector, body, parent] = i;\n        const selector = _selector?.replace(regexScopePlaceholder, \" \") || _selector;\n        if (parent || selector && selector !== \".\\\\-\") {\n          let newSelector = generate(node.prelude);\n          if (selector && selector !== \".\\\\-\") {\n            const selectorAST = parse(selector, {\n              context: \"selector\"\n            });\n            const prelude = clone(node.prelude);\n            prelude.children.forEach((child) => {\n              const parentSelectorAst = clone(selectorAST);\n              parentSelectorAst.children.forEach((i2) => {\n                if (i2.type === \"ClassSelector\" && i2.name === \"\\\\-\")\n                  Object.assign(i2, clone(child));\n              });\n              Object.assign(child, parentSelectorAst);\n            });\n            newSelector = generate(prelude);\n          }\n          let css = `${newSelector}{${body}}`;\n          if (parent)\n            css = `${parent}{${css}}`;\n          code.appendLeft(calcOffset(node.loc.end.offset), css);\n        } else {\n          code.appendRight(calcOffset(childNode.loc.end.offset), body);\n        }\n      }\n      code.remove(calcOffset(childNode.loc.start.offset), calcOffset(childNode.loc.end.offset));\n    }).toArray());\n  };\n  walk(ast, (...args) => stack.push(processNode(...args)));\n  await Promise.all(stack);\n}\n\nexport { transformerDirectives as default, transformDirectives };\n", "import { expandVariantGroup } from '@unocss/core';\n\nfunction transformerVariantGroup() {\n  return {\n    name: \"variant-group\",\n    enforce: \"pre\",\n    transform(s) {\n      expandVariantGroup(s);\n    }\n  };\n}\n\nexport { transformerVariantGroup as default };\n", "export * from '@unocss/core';\nexport { default as presetUno } from '@unocss/preset-uno';\nexport { default as presetAttributify } from '@unocss/preset-attributify';\nexport { default as presetIcons } from '@unocss/preset-icons';\nexport { default as presetWebFonts } from '@unocss/preset-web-fonts';\nexport { default as presetTypography } from '@unocss/preset-typography';\nexport { default as presetMini } from '@unocss/preset-mini';\nexport { default as presetWind } from '@unocss/preset-wind';\nexport { default as transformerDirectives } from '@unocss/transformer-directives';\nexport { default as transformerVariantGroup } from '@unocss/transformer-variant-group';\n\nfunction defineConfig(config) {\n  return config;\n}\n\nexport { defineConfig };\n"],
  "mappings": "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",
  "names": ["__export", "name", "__toESM", "name", "e", "require_fs", "name", "number", "zero", "shift", "normalize", "length", "SourceMapGenerator", "name", "sourceFile", "length", "selector", "rules", "handler", "name", "code", "shortcuts", "defaults", "theme", "variants", "variantLayer", "theme", "colors", "opacity", "name", "bracket", "property", "theme", "opacity", "duration", "e", "height", "name", "name", "selector", "maxWidth", "theme", "name", "name", "theme", "duration", "opacity", "width", "shortcuts", "textTransforms", "contents", "variablesAbbrMap", "cssVariables", "rules", "variantCombinators", "variants", "autocomplete", "colors", "theme", "rules", "variants", "autocomplete", "code", "name", "variants", "code", "width", "height", "name", "name2", "preset", "name", "fonts", "name", "preset", "e", "preset2", "theme", "fonts2", "selector", "theme", "Number", "String", "EOF", "code", "code", "columns", "code", "tokenize", "code", "getCharCode", "offset", "Number", "String", "code", "name", "line", "SyntaxError", "name", "code", "e", "tokenType", "number", "Number", "SyntaxError", "parse", "auto", "Number", "String", "node", "createGenerator", "name", "walk", "hasOwnProperty", "name", "structure", "walk", "noop", "properties", "HYPHENMINUS", "HYPHENMINUS", "keyword", "name", "property", "properties", "descriptor", "PLUSSIGN", "HYPHENMINUS", "N", "code", "Number", "PLUSSIGN", "HYPHENMINUS", "isDelim", "code", "length", "Number", "balancePair", "length", "name", "Number", "number", "String", "angle", "decibel", "frequency", "flex", "length", "resolution", "semitones", "time", "flex", "time", "SyntaxError", "SyntaxError", "N", "F", "R", "code", "SyntaxError", "TAB", "N", "F", "R", "SPACE", "EXCLAMATIONMARK", "NUMBERSIGN", "PLUSSIGN", "QUESTIONMARK", "LEFTCURLYBRACKET", "code", "name", "terms", "combinator", "noop", "ensureFunction", "walk", "node", "auto", "LEFTPARENTHESIS", "RIGHTPARENTHESIS", "name", "hasOwnProperty", "name", "lastTokenIndex", "property", "lexer", "name", "hasOwnProperty", "name", "structure", "name", "lexer", "structure", "property", "name", "parse", "walk", "generate", "createGenerator", "fromPlainObject", "toPlainObject", "config", "generate", "parse", "PLUSSIGN", "HYPHENMINUS", "N", "DISALLOW_SIGN", "ALLOW_SIGN", "checkInteger", "code", "consumeB", "Number", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "VERTICALLINE", "code", "name", "structure", "parse", "String", "generate", "generate", "name", "parse", "structure", "walkContext", "AMPERSAND", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "PLUSSIGN", "GREATERTHANSIGN", "TILDE", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "SOLIDUS", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "EXCLAMATIONMARK", "NUMBERSIGN", "DOLLARSIGN", "AMPERSAND", "ASTERISK", "PLUSSIGN", "SOLIDUS", "name", "walkContext", "structure", "parse", "property", "readProperty", "consumeRaw", "generate", "generate", "name", "parse", "structure", "AMPERSAND", "consumeRaw", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "Number", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "AMPERSAND", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "selector", "nth", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "Number", "generate", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "name", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "SOLIDUS", "FULLSTOP", "consumeNumber", "Number", "code", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "APOSTROPHE", "code", "name", "structure", "parse", "String", "generate", "generate", "name", "parse", "structure", "walkContext", "EXCLAMATIONMARK", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "VERTICALLINE", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "PLUSSIGN", "HYPHENMINUS", "QUESTIONMARK", "code", "startsWith", "Number", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "decode", "encode", "SPACE", "REVERSE_SOLIDUS", "QUOTATION_MARK", "APOSTROPHE", "LEFTPARENTHESIS", "RIGHTPARENTHESIS", "decode", "code", "encode", "name", "structure", "parse", "decode", "String", "generate", "encode", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "SPACE", "name", "structure", "parse", "generate", "NUMBERSIGN", "ASTERISK", "PLUSSIGN", "HYPHENMINUS", "SOLIDUS", "U", "String", "Number", "code", "NUMBERSIGN", "AMPERSAND", "ASTERISK", "PLUSSIGN", "SOLIDUS", "FULLSTOP", "GREATERTHANSIGN", "VERTICALLINE", "TILDE", "Number", "code", "import_default", "String", "consumeRaw", "readSequence", "import_default", "parse", "clone", "decode", "encode", "REVERSE_SOLIDUS", "decode", "code", "encode", "tokenize", "parse", "generate", "walk", "code", "parse", "selector", "generate", "clone", "walk"]
}
